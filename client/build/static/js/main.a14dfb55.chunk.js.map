{"version":3,"sources":["components/Dashboard/Dashboard.module.scss","components/ErrorBox/ErrorBox.module.scss","components/ViewLog/logview.module.css","components/SuccessBox/SuccessBox.module.scss","components/stats/icons/morning.svg","components/stats/icons/afternoon.svg","components/stats/icons/evening.svg","components/stats/DaytimeGraph.module.scss","actions/logs/actions.js","reducers/log_reducer.js","actions/user/actions.js","reducers/user_reducer.js","reducers/index.js","constants/routerRoutes.js","contexts/ThemeContext.js","components/Button/Button.js","components/Button/index.js","components/Loading/loading.js","components/Home/index.js","components/Home/Home.js","components/Forms/Heading.js","components/Forms/Wrapper.js","components/Forms/Label.js","components/Forms/Input.js","components/Forms/Footer.js","components/Forms/ErrorMessage.js","components/ErrorBox/index.js","components/ErrorBox/ErrorBox.js","constants/initialFormValues.js","constants/formErrorMessages.js","actions/logs/asyncActions.js","actions/user/asyncActions.js","hooks/useEnterKey.js","components/Login/index.js","components/Login/Login.js","hooks/Login/useLoginForm.js","components/Back/BackButton.js","components/Back/index.js","hooks/Register/useRegisterForm.js","components/Register/index.js","components/Register/Register.js","components/Loading/loadingNetItem.js","constants/daytimes.js","util/dateHelpers.js","components/Dashboard/AddNewLog.js","components/Dashboard/LastLogs.js","constants/moodTypes.js","hooks/Dashboard/useMoodStatus.js","util/moodStatusHelpers.js","components/Dashboard/MoodStatus.js","components/Dashboard/SettingsItem.js","components/Dashboard/LogoutItem.js","components/Dashboard/index.js","components/Dashboard/Dashboard.js","hooks/AddLog/useAddLog.js","components/AddLog/index.js","components/AddLog/AddLogPage.js","components/LogItem/logItem.js","components/Logs/index.js","components/Logs/AllLogs.js","hooks/AllLogs/useAllLogs.js","components/ViewLog/index.js","components/ViewLog/LogView.js","components/LogOut/index.js","components/LogOut/LogOut.js","components/SuccessBox/index.js","components/SuccessBox/SuccessBox.js","hooks/Settings/useEditAccount.js","components/Settings/AccountDetails.js","hooks/Settings/useChangePassword.js","components/Settings/ChangePassword.js","components/Settings/index.js","components/Settings/Settings.js","components/stats/GraphCanvas.js","util/statsHelpers.js","components/stats/DaytimeGraph.js","components/stats/AverageBox.js","components/stats/index.js","components/stats/Stats.js","hooks/DeleteAccount/useDeleteAccount.js","components/DeleteAccount/index.js","components/DeleteAccount/DeleteAccount.js","components/Navbar/items.js","components/Navbar/NavBar.js","components/Header/ToggleButton.js","components/Header/NightmodeButton.js","components/Header/Header.js","components/Header/index.js","hooks/Header/useHeader.js","hoc/auth.js","routes.js","index.js","components/Forms/Forms.module.scss","components/Dashboard/LastLogs.module.scss","components/Header/Header.module.scss","components/Loading/loading.module.css","components/Dashboard/AddNewLog.module.scss","components/Loading/loadingNetItem.module.css","components/LogItem/logItem.module.css","components/stats/GraphCanvas.module.scss","components/Home/Home.module.scss","components/stats/stats.module.css","components/Settings/Settings.module.scss","components/AddLog/AddLogPage.module.scss","components/Navbar/NavBar.module.scss","components/Button/Button.module.scss","components/Back/BackButton.module.scss","components/Dashboard/MoodStatus.module.scss","components/Dashboard/SettingsItem.module.scss","components/Dashboard/LogoutItem.module.scss","components/Logs/AllLogs.module.scss","components/stats/AverageBox.module.scss"],"names":["module","exports","actions","request","receive","reset","initialState","canLog","lastLogs","logs","error","isFetching","singleLog","logData","allLogs","noLogsLeft","postLog","isPosting","success","createUser","loginUser","clearUserData","userAuth","editUser","changePassword","isAuth","authError","userData","id","email","firstName","lastName","isEditing","isChangingPassword","changePasswordError","changePasswordSuccess","rootReducer","combineReducers","state","payload","type","user","isChanging","routerRoutes","ThemeContext","React","createContext","UpdateThemeContext","useTheme","useContext","ThemeProvider","children","useState","nightmode","localStorage","getItem","undefined","retrieveData","darkTheme","updateTheme","useEffect","document","body","style","background","color","Provider","value","prevTheme","setItem","Button","handleClick","disabled","className","classNames","styles","button","btnDark","btnPrimary","btnWhite","getButtonColorClass","onClick","Loading","loadingScreen","barContainer","dark","bar","delay1","join","delay2","Home","connect","wrapper","animateIn","animateOnce","bigLogo","delay","offset","text","buttonWrapper","to","Heading","heading","Wrapper","formWrapper","Label","label","Input","name","controlEvents","placeholder","handleChange","handleBlur","textInput","onChange","onBlur","textArea","defaultProps","Footer","formFooter","ErrorMessage","errorMessage","ErrorBox","container","initialFormValues","formErrorMessages","canUserLog","currentDate","currentTiming","a","async","userId","date","timing","dispatch","axios","post","data","clearLastLogs","getLogs","start","limit","currentLogs","endpoint","get","response","length","clearLogs","rating","cookie","Cookie","editUserDetails","details","toString","currentPassword","newPassword","oldPassword","useEnterKey","action","handler","event","keyCode","window","addEventListener","removeEventListener","Login","isLoggingIn","setIsLoggingIn","useDispatch","history","useHistory","useSelector","loginError","push","initialValues","password","validationSchema","yup","required","handleLogin","useCallback","values","handleSubmit","useFormik","onSubmit","validateOnMount","errors","isValid","touched","useLoginForm","BackButton","back","useRegisterForm","isSigningUp","setIsSigningUp","createUserError","createUserSuccess","handleSignup","confirmPassword","min","oneOf","Register","Back","LoadingNetItem","daytimes","getDate","Date","month","getMonth","day","getFullYear","getDaytime","hour","getHours","logbutton","available","attentionBorder","floating","unavailable","timeOfNextLog","returnTimeRemaining","LastLogs","parentStyles","gridItem","gridItemHeader","logSection","gridItemContent","logContainer","slice","map","log","index","key","logItem","logContent","ratingBox","rightSection","link","greyText","moodTypes","above","below","useMoodStatus","isFetchingLogs","useMemo","Array","isArray","total","count","forEach","parseInt","average","Math","round","Number","isInteger","String","returnAverageRating","ratingText","unparsedRating","moodType","find","returnMoodText","MoodStatus","parentClasses","statusContainer","statusBox","statusText","SettingsItem","shrink","flexCenter","settingsIconWrapper","settingsIcon","LogoutItem","logoutIconWrapper","logoutIcon","Dashboard","isSignedIn","url","getLastLogs","grid","gridTop","useAddLog","postLogSuccess","postLogError","message","setMessage","moodRating","setMoodRating","isPostingLog","setIsPostingLog","handleRangeInput","target","handleMessageInput","handleAddLog","AddLogPage","topSection","moodBox","inputLine","thumb","max","LogItem","item","top_line","rating_box","icon","AllLogs","skipLogs","setSkipLogs","isFetchingAllLogs","fetchAllLogsError","loadMoreLogs","prevState","useAllLogs","pageWrapper","i","bottomSection","LogView","props","isFetchingLog","getLogError","logId","match","params","Boolean","Object","keys","LogOut","then","status","remove","logOut","SuccessBox","useEditAccount","isSubmitting","setIsSubmitting","editUserData","editUserSuccess","editUserError","isEditingUser","enableReinitialize","AccountDetails","miniHeader","useChangePassword","changePasswordData","ChangePassword","Settings","ReturnGraph","points","graph_stroke","GraphCanvas","width","setWidth","graphRef","useRef","handleResize","newWidth","current","offsetWidth","graphData","mapLogsToGraphData","firstDate","lastDate","graph_container","graph_canvas","ref","y_axis_number","transform","height","fill","stroke","strokeWidth","list","pointsString","ratingYpos","floor","returnPolylinePoints","returnBullet","left","daytime_bullet","bottom","daytime_bullet_text","DaytimeGraph","morningSum","morningCount","afternoonSum","afternoonCount","eveningSum","eveningCount","morningAverage","afternoonAverage","eveningAverage","mapLogsToDaytimeStats","daytime_container","daytime_canvas","overflow","y_axis_number_daytime","top","daytime_bottom_line","daytime_time","src","morningIcon","padding","alt","afternoonIcon","eveningIcon","AverageBox","averageBox","Stats","sevenDayAverageObject","dates","sum","indexOf","firstDay","lastDay","lastSevenDaysAverage","first_block","average_block","countAverage","small_text_box","DeleteAccount","isDeleting","deleteAccountStatus","setDeleteAccountStatus","prevStatus","console","useDeleteAccount","items","iconName","path","NavBar","toggleNav","itemElement","navItem","navBar","nightMode","renderItems","navBarMask","ToggleButton","showNav","bars","fontSize","transition","NightmodeButton","nightmode_button","faSun","faMoon","nightmode_button_caption","Header","setShowNav","useHeader","header","backgroundColor","logo","ComposedClass","redirect","AuthenticationCheck","this","auth","location","pathname","Component","Routes","exact","component","Auth","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","promiseMiddleware","ReduxThunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a14dfb55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Dashboard_grid__3hW_2\",\"gridTop\":\"Dashboard_gridTop__3y_8y\",\"gridItem\":\"Dashboard_gridItem__2C02j\",\"gridItemHeader\":\"Dashboard_gridItemHeader__2aML3\",\"gridItemContent\":\"Dashboard_gridItemContent__3zy8E\",\"shrink\":\"Dashboard_shrink__3NyC-\",\"flexCenter\":\"Dashboard_flexCenter__3HES0\",\"settingsIcon\":\"Dashboard_settingsIcon__9ymsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ErrorBox_container__2Xlyv\",\"fadeIn\":\"ErrorBox_fadeIn__1l7CO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"logview_pageWrapper__3wW-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuccessBox_container__1OKsK\",\"fadeIn\":\"SuccessBox_fadeIn__1MRDj\"};","module.exports = __webpack_public_path__ + \"static/media/morning.32026445.svg\";","module.exports = __webpack_public_path__ + \"static/media/afternoon.1bf5e1d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/evening.30a34177.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"daytime_container\":\"DaytimeGraph_daytime_container__37-ve\",\"daytime_canvas\":\"DaytimeGraph_daytime_canvas__2kd4F\",\"daytime_bullet\":\"DaytimeGraph_daytime_bullet__1n7sv\",\"dark\":\"DaytimeGraph_dark__1TICY\",\"daytime_bullet_text\":\"DaytimeGraph_daytime_bullet_text__3GHJr\",\"y_axis_number_daytime\":\"DaytimeGraph_y_axis_number_daytime__7UrsM\",\"daytime_bottom_line\":\"DaytimeGraph_daytime_bottom_line__3prcq\",\"daytime_time\":\"DaytimeGraph_daytime_time__2qwry\"};","export const actions = {\r\n    canLog : {\r\n        request : 'CAN_LOG_REQUEST',\r\n        receive : 'CAN_LOG_RECEIVE'\r\n    },\r\n    getLastLogs : {\r\n        request : 'GET_LAST_LOGS_REQUEST',\r\n        receive : 'GET_LAST_LOGS_RECEIVE',\r\n        reset : 'GET_LAST_LOGS_RESET'\r\n    },\r\n    getLog : {\r\n        request : 'GET_LOG_REQUEST',\r\n        receive : 'GET_LOG_RECEIVE',\r\n        reset : 'GET_LOG_RESET'\r\n    },\r\n    getLogs : {\r\n        request : 'GET_LOGS_REQUEST',\r\n        receive : 'GET_LOGS_RECEIVE',\r\n        reset : 'GET_LOGS_RESET'\r\n    },\r\n    postLog : {\r\n        request : 'POST_LOG_REQUEST',\r\n        receive : 'POST_LOG_RECEIVE',\r\n        reset : 'POST_LOG_RESET'\r\n    }\r\n}","import { actions } from '../actions/logs/actions';\r\n\r\nconst initialState = {\r\n    canLog: null,\r\n    lastLogs : {\r\n        logs: [],\r\n        error: null,\r\n        isFetching: false\r\n    },\r\n    singleLog : {\r\n        logData : {},\r\n        error : null,\r\n        isFetching: false\r\n    },\r\n    allLogs : {\r\n        isFetching: false,\r\n        error: null,\r\n        logs: [],\r\n        noLogsLeft: false\r\n    },\r\n    postLog : {\r\n        isPosting : false,\r\n        success : null,\r\n        error : null\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, {payload, type}) {\r\n    switch(type) {\r\n        case actions.canLog.request :\r\n            return {\r\n                ...state, \r\n                canLog: null\r\n            };\r\n        case actions.canLog.receive :\r\n            return {\r\n                ...state,\r\n                canLog: payload\r\n            }\r\n        case actions.getLastLogs.request : \r\n            return {\r\n                ...state,\r\n                lastLogs : {\r\n                    logs: [],\r\n                    error: null,\r\n                    isFetching: true\r\n                }\r\n            }\r\n        case actions.getLastLogs.receive : \r\n            return {\r\n                ...state, \r\n                lastLogs : {\r\n                    ...payload\r\n                }\r\n            }\r\n        case actions.getLastLogs.reset :\r\n            return {\r\n                ...state,\r\n                lastLogs : {\r\n                    ...initialState.lastLogs\r\n                }\r\n            }\r\n        case actions.getLog.request : \r\n            return {\r\n                ...state,\r\n                singleLog : {\r\n                    isFetching : true,\r\n                    error : null,\r\n                    logData : {}\r\n                }\r\n            }\r\n        case actions.getLog.receive :\r\n            return {\r\n                ...state, \r\n                singleLog : {\r\n                    ...payload  \r\n                }\r\n            }\r\n        case actions.getLog.reset :\r\n            return {\r\n                ...state,\r\n                singleLog : {\r\n                    ...initialState.singleLog\r\n                }\r\n            }\r\n        case actions.getLogs.request :\r\n            return {\r\n                ...state,\r\n                allLogs : {\r\n                    ...state.allLogs,\r\n                    isFetching: true,\r\n                    error: null\r\n                }\r\n            }\r\n        case actions.getLogs.receive :\r\n            return {\r\n                ...state,\r\n                allLogs : {\r\n                    ...state.allLogs,\r\n                    ...payload\r\n                }\r\n            }\r\n        case actions.getLogs.reset :\r\n            return {\r\n                ...state,\r\n                allLogs : {\r\n                    ...initialState.allLogs\r\n                }\r\n            }\r\n        case actions.postLog.request :\r\n            return {\r\n                ...state,\r\n                postLog : {\r\n                    isPosting : true,\r\n                    success: null,\r\n                    error : null\r\n                }\r\n            }\r\n        case actions.postLog.receive :\r\n            if (payload.success) {\r\n                return {\r\n                    ...state,\r\n                    canLog : false,\r\n                    postLog : {\r\n                        ...payload\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state, \r\n                postLog : {\r\n                    ...payload\r\n                }\r\n            }\r\n        case actions.postLog.reset : \r\n            return {\r\n                ...state,\r\n                postLog : {\r\n                    ...initialState.postLog\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const actions = {\r\n    createUser : {\r\n        request : 'CREATE_USER_REQUEST',\r\n        receive : 'CREATE_USER_RECEIVE',\r\n        reset: 'CREATE_USER_RESET'\r\n    },\r\n    loginUser : {\r\n        request : 'LOGIN_USER_REQUEST',\r\n        receive : 'LOGIN_USER_RECEIVE'\r\n    },\r\n    clearUserData : 'CLEAR_USER',\r\n    userAuth: 'USER_AUTH',\r\n    editUser : {\r\n        request : 'EDIT_USER_REQUEST',\r\n        receive : 'EDIT_USER_RECEIVE',\r\n        reset : 'EDIT_USER_RESET'\r\n    },\r\n    changePassword : {\r\n        request : 'CHANGE_PASSWORD_REQUEST',\r\n        receive : 'CHANGE_PASSWORD_RECEIVE',\r\n        reset : 'CHANGE_PASSWORD_RESET'\r\n    }\r\n}","import { actions } from '../actions/user/actions';\r\n\r\nconst initialState = {\r\n    createUser : {\r\n        success : null,\r\n        error : null\r\n    },\r\n    isAuth: null,\r\n    authError: null,\r\n    userData: {\r\n        id: null,\r\n        email: null, \r\n        firstName: '',\r\n        lastName: ''\r\n    },\r\n    editUser : {\r\n        isEditing: false,\r\n        success: null,\r\n        error: null\r\n    },\r\n    changePassword: {\r\n        isChangingPassword: false,\r\n        changePasswordError: null,\r\n        changePasswordSuccess: null\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, {type, payload}) {\r\n    switch(type) {\r\n        case actions.createUser.request :\r\n            return {\r\n                ...state,\r\n                createUser : {\r\n                    success : null,\r\n                    error : null\r\n                }\r\n            }\r\n        case actions.createUser.receive :\r\n            return {\r\n                ...state, \r\n                createUser : {\r\n                    ...payload\r\n                }\r\n            }\r\n        case actions.createUser.reset :\r\n            return {\r\n                ...state,\r\n                createUser : {\r\n                    ...initialState.createUser\r\n                }\r\n            }\r\n        case actions.loginUser.request :\r\n            return {\r\n                ...state,\r\n                isAuth: null,\r\n                authError: null\r\n            }\r\n        case actions.loginUser.receive:\r\n            return {\r\n                ...state, \r\n                ...payload\r\n            }\r\n        case actions.userAuth :\r\n            if (payload.error) {\r\n                return {\r\n                    ...state, \r\n                    authError: payload.error,\r\n                    isAuth: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                isAuth: true,\r\n                userData: {\r\n                    id: payload.id || null,\r\n                    email: payload.email || null, \r\n                    firstName: payload.firstName || '',\r\n                    lastName: payload.lastName || ''\r\n                }\r\n            }\r\n        case actions.clearUserData :\r\n            return {\r\n                ...state, \r\n                authError: initialState.authError,\r\n                isAuth: initialState.isAuth,\r\n                userData: {\r\n                    ...initialState.userData\r\n                }\r\n            }\r\n        case actions.editUser.request :\r\n            return {\r\n                ...state,\r\n                editUser : {\r\n                    isEditing: true,\r\n                    success: null,\r\n                    error: null\r\n                }\r\n            }\r\n        case actions.editUser.receive :\r\n            return {\r\n                ...state,\r\n                editUser : {\r\n                    ...payload\r\n                }\r\n            }\r\n        case actions.editUser.reset :\r\n            return {\r\n                ...state,\r\n                editUser : {\r\n                    ...initialState.editUser\r\n                }\r\n            }\r\n        case actions.changePassword.request :\r\n            return {\r\n                ...state,\r\n                changePassword : {\r\n                    isChanging: true,\r\n                    error: null,\r\n                    success: null\r\n                }\r\n            }\r\n        case actions.changePassword.receive :\r\n            return {\r\n                ...state,\r\n                changePassword : {\r\n                    ...payload\r\n                }\r\n            }\r\n        case actions.changePassword.reset : \r\n            return {\r\n                ...state,\r\n                changePassword : {\r\n                    ...initialState.changePassword\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport logs from './log_reducer';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    logs,\r\n    user\r\n});\r\n\r\nexport default rootReducer;","export const routerRoutes = {\r\n    home: '/',\r\n    login: '/login',\r\n    logout: '/logout',\r\n    dashboard: '/dashboard',\r\n    addNewLog: '/addlog',\r\n    register: '/register',\r\n    settings: '/settings',\r\n    allLogs: '/logs',\r\n    viewLog: '/logs/:id',\r\n    delete: '/delete',\r\n    stats: '/stats'\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\n\r\n// Creating contexts\r\nconst ThemeContext = React.createContext();\r\nconst UpdateThemeContext = React.createContext();\r\n\r\n// Custom hooks\r\nexport function useTheme() {\r\n    return useContext(ThemeContext);\r\n};\r\n\r\nexport function useThemeUpdate() {\r\n    return useContext(UpdateThemeContext);\r\n};\r\n\r\nexport function ThemeProvider ({children}) {\r\n    const retrieveData = () => {\r\n        let nightmode = localStorage.getItem('nightmode');\r\n        if (nightmode !== undefined) {\r\n            if (nightmode === 'true') {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const [ darkTheme, updateTheme ] = useState(retrieveData());\r\n\r\n    useEffect( () => {\r\n        if (darkTheme === true) {\r\n            document.body.style.background = \"rgb(51, 51, 51)\";\r\n            document.body.style.color = \"rgb(242,242,242\";\r\n        } else {\r\n            document.body.style.background = \"#FFFFFF\";\r\n            document.body.style.color = \"#000000\";\r\n        }\r\n    }, [darkTheme]);\r\n\r\n    const toggleTheme = () => {\r\n        updateTheme( (prevTheme) => { \r\n            localStorage.setItem('nightmode', !prevTheme);\r\n            return !prevTheme \r\n        });\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={darkTheme}>\r\n            <UpdateThemeContext.Provider value={toggleTheme}>\r\n                {children}\r\n            </UpdateThemeContext.Provider>\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from './Button.module.scss';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\n\r\n/* \r\n    Possible colours:\r\n    'primary'\r\n    'white'\r\n*/\r\n\r\nconst Button = ({\r\n    color = 'primary', \r\n    handleClick = () => {},\r\n    disabled,\r\n    children\r\n}) => {\r\n    const darkTheme = useTheme();\r\n    \r\n    const getButtonColorClass = (type) => {\r\n        switch (type) {\r\n            case 'primary':\r\n                return styles.btnPrimary;\r\n            case 'white' :\r\n                return styles.btnWhite;\r\n            default :\r\n                return null;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <button \r\n            className={classNames(\r\n                styles.button,\r\n                darkTheme && styles.btnDark,\r\n                getButtonColorClass(color)\r\n            )}\r\n            onClick={handleClick}\r\n            disabled={disabled}\r\n            type=\"button\"\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import Button from './Button';\r\n\r\nexport default Button;","import React from 'react';\r\nimport styles from './loading.module.css';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames'\r\n\r\nconst Loading = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={styles.loadingScreen}>\r\n            <div>\r\n                Loading    \r\n            </div>\r\n            <br/>\r\n            <div className={classNames(\r\n                styles.barContainer,\r\n                darkTheme && styles.dark\r\n            )}>\r\n                <div className={styles.bar}></div>\r\n                <div className={[styles.bar, styles.delay1].join(' ')}></div>\r\n                <div className={[styles.bar, styles.delay2].join(' ')}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import Home from './Home';\r\n\r\nexport default Home;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport \"animate.css/animate.min.css\";\r\nimport classNames from 'classnames';\r\nimport styles from './Home.module.scss';\r\nimport Button from '../Button';\r\nimport Loading from '../Loading/loading';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\n\r\nconst Home = ({isAuth, firstName}) => {    \r\n    const darkTheme = useTheme();\r\n\r\n    if (isAuth === undefined) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return  (\r\n    <div className={styles.wrapper}>\r\n        <ScrollAnimation animateIn=\"fadeInDown\" animateOnce={true}>\r\n            <div className={classNames(styles.bigLogo, darkTheme && styles.dark)}>\r\n                MoodApp\r\n            </div>\r\n        </ScrollAnimation>\r\n        <ScrollAnimation animateIn=\"fadeInDown\" delay={1000} offset={75} animateOnce={true}>\r\n            {   isAuth ? (\r\n                    <div className={styles.text}>\r\n                        Hello <span>{firstName}</span>  \r\n                    </div>\r\n                ) : ( <div className={styles.text}>Your daily mood tracker</div> )\r\n            }\r\n        </ScrollAnimation>\r\n        <ScrollAnimation animateIn=\"fadeInDown\" delay={2000} offset={75} animateOnce={true}>\r\n            <div className={styles.buttonWrapper}>\r\n                {\r\n                    isAuth ? (\r\n                        <Fragment>\r\n                            <Link to=\"/dashboard\">\r\n                                <Button color={'primary'}>\r\n                                    Dashboard\r\n                                </Button>\r\n                            </Link>\r\n                            <Link to=\"/logout\">\r\n                                <Button color={'white'}>\r\n                                    Log out\r\n                                </Button>\r\n                            </Link>\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Link to=\"/login\">\r\n                                <Button color={'primary'}>Log in</Button>\r\n                            </Link>\r\n                            <Link to=\"/register\">\r\n                                <Button color={'white'}>Register</Button>\r\n                            </Link>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        </ScrollAnimation> \r\n    </div>)\r\n};\r\n\r\nconst mapStateToProps = ({user}) => {\r\n    const { isAuth, userData } = user;\r\n    const firstName = userData ? userData.firstName : '';\r\n\r\n    return {\r\n        isAuth,\r\n        firstName\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home);","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Heading = ({children}) => {\r\n    return <h1 className={styles.heading}>{children}</h1>;\r\n};\r\n\r\nexport default Heading;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Wrapper = ({children}) => {\r\n    return <div className={styles.formWrapper}>{children}</div>\r\n};\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Label = ({children}) => {\r\n    return <span className={styles.label}>{children}</span>\r\n};\r\n\r\nexport default Label;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Input = ({type, name, value, controlEvents, placeholder}) => {\r\n    const { handleChange, handleBlur } = controlEvents;\r\n\r\n    if (type === 'text' || type === 'email' || type === 'password') {\r\n        return (\r\n            <input \r\n                type={type} \r\n                name={name} \r\n                value={value}\r\n                className={styles.textInput}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (type === 'textarea') {\r\n        return (\r\n            <textarea \r\n                name={name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                className={styles.textArea}\r\n            />\r\n        )\r\n    }\r\n\r\n};\r\n\r\nInput.defaultProps = {\r\n    type : 'text',\r\n    name : '',\r\n    value : '',\r\n    controlEvents : {\r\n        handleBlur : () => {},\r\n        handleChange : () => {}\r\n    },\r\n    placeholder: ''\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport styles from './Forms.module.scss'\r\n\r\nconst Footer = ({children}) => {\r\n    return (\r\n        <div className={styles.formFooter}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst ErrorMessage = ({children}) => {\r\n    return (\r\n        <div className={styles.errorMessage}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import ErrorBox from './ErrorBox';\r\n\r\nexport default ErrorBox;","import React from 'react';\r\nimport styles from './ErrorBox.module.scss';\r\n\r\nconst ErrorBox = ({children}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorBox;","export const initialFormValues = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    confirmPassword: '',\r\n    currentPassword: ''\r\n}","export const formErrorMessages = {\r\n    required : 'Required field',\r\n    email: 'Enter a proper e-mail address',\r\n    passwordMatch: 'Passwords do not match',\r\n    min: 'Minimum count of symbols is '\r\n}","import axios from 'axios';\r\nimport { actions } from './actions';\r\n\r\nexport const canUserLog = async (currentDate, currentTiming, user) => {\r\n    const body = {\r\n        userId: user,\r\n        date: currentDate,\r\n        timing: currentTiming\r\n    };\r\n\r\n    return async dispatch => {\r\n        const { data } = await axios.post('/api/canLog', body);\r\n\r\n        dispatch({type: actions.canLog.request})\r\n        \r\n        if (data && data.data) {\r\n            dispatch({\r\n                type: actions.canLog.receive,\r\n                payload: data.data.canLog\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        dispatch({\r\n            type: actions.canLog.receive,\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const getLastLogs = async ({\r\n    userId,\r\n    limit = 9\r\n}) => {\r\n    const url = `/api/getLogs?id=${userId}&limit=${limit}`;\r\n\r\n    return async dispatch => {\r\n        dispatch({type: actions.getLastLogs.request});\r\n\r\n        try {\r\n            const { data } = await axios.get(url);\r\n            const { success, error } = data;\r\n    \r\n            if (error) {\r\n                dispatch({\r\n                    type: actions.getLastLogs.receive,\r\n                    payload: {\r\n                        logs: [],\r\n                        error: error,\r\n                        isFetching: false\r\n                    }\r\n                });\r\n    \r\n                return;\r\n            }\r\n    \r\n            if (success && data.data) {\r\n                dispatch({\r\n                    type: actions.getLastLogs.receive,\r\n                    payload: {\r\n                        logs: data.data,\r\n                        error: null,\r\n                        isFetching: false\r\n                    }\r\n                });\r\n    \r\n                return;\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.getLastLogs.receive,\r\n                payload: {\r\n                    logs: [],\r\n                    error: error,\r\n                    isFetching: false\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearLastLogs = () => dispatch => dispatch({type: actions.getLastLogs.reset});\r\n\r\nexport const getLog = async logId => {\r\n    return async dispatch => {\r\n        const endpoint = `/api/getLog?id=${logId}`;\r\n\r\n        dispatch({type: actions.getLog.request});\r\n\r\n        try {\r\n            const response = await axios.get(endpoint);\r\n            \r\n            const { error, data } = response.data;\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: actions.getLog.receive,\r\n                    payload: {\r\n                        isFetching : false,\r\n                        error,\r\n                        logData : {}\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n            \r\n            dispatch({\r\n                type: actions.getLog.receive,\r\n                payload: {\r\n                    isFetching : false,\r\n                    error : false,\r\n                    logData : data\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.getLog.receive,\r\n                payload: {\r\n                    isFetching : false,\r\n                    error,\r\n                    logData : {}\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearLog = () => dispatch => { dispatch({type: actions.getLog.reset}) }\r\n\r\nexport const getLogs = async ({userId, start, limit, currentLogs}) => {\r\n    return async dispatch => {\r\n        const endpoint = `/api/getLogs?id=${userId}${start ? `&skip=${start}` : ''}&limit=${limit}`;\r\n\r\n        dispatch({ type: actions.getLogs.request });\r\n\r\n        try {\r\n            const response = await axios.get(endpoint);\r\n            const { data, error } = response.data;\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: actions.getLogs.receive,\r\n                    payload: {\r\n                        isFetching: false,\r\n                        error\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n            \r\n            dispatch({\r\n                type: actions.getLogs.receive,\r\n                payload: {\r\n                    isFetching: false,\r\n                    error: false,\r\n                    logs: currentLogs ? [...currentLogs, ...data] : data,\r\n                    noLogsLeft: !data.length ? true : false\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.getLogs.receive,\r\n                payload: {\r\n                    isFetching: false,\r\n                    error\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearLogs = () => dispatch => { dispatch({ type: actions.getLogs.reset }) }\r\n\r\nexport const postLog = async ({\r\n    userId,\r\n    date,\r\n    timing,\r\n    rating,\r\n    text\r\n}) => {\r\n    const body = {\r\n        userId,\r\n        date,\r\n        timing,\r\n        rating,\r\n        text\r\n    }\r\n\r\n    return async dispatch => {\r\n        try {\r\n            dispatch( {type: actions.postLog.request});\r\n    \r\n            const { data } = await axios.post('/api/postLog', body);\r\n            const { error , success } = data;\r\n\r\n            if (error || !success) {\r\n                dispatch({\r\n                    type: actions.postLog.receive,\r\n                    payload: {\r\n                        isPosting : false,\r\n                        success : false,\r\n                        error : error || 'Unknown error occured'\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            dispatch({\r\n                type: actions.postLog.receive,\r\n                payload: {\r\n                    isPosting : false,\r\n                    success : true,\r\n                    error : null\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.postLog.receive,\r\n                payload: {\r\n                    isPosting : false,\r\n                    success : false,\r\n                    error\r\n                }\r\n            })\r\n        }\r\n    }  \r\n}\r\n\r\nexport const clearLogPost = () => dispatch => { dispatch( {type: actions.postLog.reset})};","import { actions } from './actions';\r\nimport axios from 'axios';\r\nimport { clearLogs, clearLastLogs } from '../logs/asyncActions';\r\nimport Cookie from 'universal-cookie';\r\nconst cookie = new Cookie();\r\n\r\nexport const createUser = async user => {\r\n    return async dispatch => {\r\n        dispatch({type: actions.createUser.request});\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/users', user)\r\n            const { success, error } = data;\r\n\r\n            if (error || !success) {\r\n                dispatch({\r\n                    type: actions.createUser.receive,\r\n                    payload: {\r\n                        success: false,\r\n                        error: error || 'Could not create user'\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n            \r\n            if (success) {\r\n                dispatch({\r\n                    type: actions.createUser.receive,\r\n                    payload: {\r\n                        success: true,\r\n                        error: null\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.createUser.receive,\r\n                payload: {\r\n                    success: false,\r\n                    error: error || 'Could not create user'\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCreateUser = () => dispatch => dispatch({type: actions.createUser.reset});\r\n\r\nexport const loginUser = async payload => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: actions.loginUser.request\r\n        });\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/login', payload);\r\n            const { isAuth, error } = data;\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: actions.loginUser.receive,\r\n                    payload: {\r\n                        isAuth: false,\r\n                        authError : error\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (isAuth) {\r\n                dispatch({\r\n                    type: actions.loginUser.receive,\r\n                    payload: {\r\n                        isAuth,\r\n                        error: null\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.loginUser.receive,\r\n                payload: {\r\n                    isAuth: false,\r\n                    error\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function logOut() {\r\n    const request = axios.get('/api/logout');\r\n\r\n    return dispatch => {\r\n        request.then( (response) => {\r\n            if (response.status === 200) {\r\n                cookie.remove('auth');\r\n                \r\n                dispatch({\r\n                    type: actions.clearUserData\r\n                });\r\n                \r\n                clearLogs();\r\n                clearLastLogs();\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const response = axios.get('/api/auth')\r\n    .then( ({data}) => data);\r\n\r\n    return {\r\n        type: actions.userAuth,\r\n        payload: response\r\n    }\r\n}\r\n\r\nexport const editUserDetails = async ({userId, details}) => {\r\n    const endpoint = '/api/editAccount';\r\n    const body = {\r\n        id : userId,\r\n        ...details\r\n    }\r\n\r\n    return async dispatch => {\r\n        dispatch({type: actions.editUser.request});\r\n\r\n        try {\r\n            const { data } = await axios.post(endpoint, body);\r\n            const { error } = data;\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: actions.editUser.receive,\r\n                    payload: {\r\n                        isEditing: false,\r\n                        success: false,\r\n                        error: error.toString()\r\n                    }\r\n                });\r\n\r\n                return\r\n            }\r\n\r\n            dispatch({\r\n                type: actions.editUser.receive,\r\n                payload: {\r\n                    isEditing: false,\r\n                    success: true,\r\n                    error: null\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.editUser.receive,\r\n                payload: {\r\n                    isEditing: false,\r\n                    success: false,\r\n                    error: error.toString()\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearEditUser = () => dispatch => {dispatch({type: actions.editUser.reset})}\r\n\r\nexport const changePassword = async ({\r\n    userId,\r\n    currentPassword,\r\n    newPassword\r\n}) => {\r\n    return async dispatch => {\r\n        if (!userId || !currentPassword || !newPassword) {\r\n            return;\r\n        }\r\n\r\n        const endpoint = '/api/changePassword';\r\n        const body = {\r\n            id : userId,\r\n            oldPassword : currentPassword,\r\n            newPassword\r\n        }\r\n\r\n        await dispatch({type: actions.changePassword.request});\r\n\r\n        try {\r\n            const { error } = await axios.post(endpoint, body);\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: actions.changePassword.receive,\r\n                    payload: {\r\n                        isChanging : false,\r\n                        error : error,\r\n                        success : false\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            dispatch({\r\n                type: actions.changePassword.receive,\r\n                payload: {\r\n                    isChanging : false,\r\n                    error : null,\r\n                    success : true\r\n                }\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: actions.changePassword.receive,\r\n                payload: {\r\n                    isChanging : false,\r\n                    error : error,\r\n                    success : false\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearChangePassword = async () => async dispatch => {dispatch({type: actions.changePassword.reset})}\r\n\r\nexport const clearUserData = async () => async dispatch => {dispatch({type: actions.clearUserData})}","import { useEffect } from 'react';\r\n\r\nexport const useEnterKey = action => {\r\n    const handler = event => {\r\n        if (event.keyCode === 13) {\r\n            action();\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('keydown', handler);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handler)\r\n        }\r\n    });\r\n}","import Login from './Login';\r\n\r\nexport default Login;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport { Heading, Wrapper, Label, Input, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport ErrorBox from '../ErrorBox';\r\nimport { useLoginForm } from '../../hooks/Login/useLoginForm';\r\n\r\nconst Login = () => {\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        controlEvents,\r\n        touched,\r\n        isLoggingIn,\r\n        handleSubmit,\r\n        loginError\r\n    } = useLoginForm();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Heading>Log In</Heading>\r\n            <form>\r\n                <Label>Enter your email: </Label>\r\n                <Input \r\n                    type=\"email\" \r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {errors.email && touched.email && (\r\n                    <ErrorMessage>\r\n                        {errors.email}\r\n                    </ErrorMessage>\r\n                )}\r\n                <Label>Enter your password:</Label>\r\n                <Input \r\n                    type=\"password\" \r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {errors.password && touched.password && (\r\n                    <ErrorMessage>\r\n                        {errors.password}\r\n                    </ErrorMessage>\r\n                )}\r\n                <Footer>\r\n                    <Button \r\n                        color={\"primary\"}\r\n                        disabled={!isValid || isLoggingIn}\r\n                        handleClick={handleSubmit}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </Footer>\r\n            </form>\r\n            {  loginError && (\r\n                <ErrorBox>\r\n                    Error: {loginError}\r\n                </ErrorBox>\r\n            )}\r\n        </Wrapper>\r\n            \r\n    );\r\n};\r\n\r\nexport default Login;","import { useState, useCallback, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../../actions/user/asyncActions';\r\nimport { useEnterKey } from '../useEnterKey';\r\n\r\nexport const useLoginForm = () => {\r\n    const [ isLoggingIn, setIsLoggingIn ] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const isAuth = useSelector( ({user}) => user.isAuth);\r\n    const loginError = useSelector( ({user}) => user.authError !== 'Authentication error' ? user.authError : null);\r\n\r\n    useEffect( () => {\r\n        if (isAuth) {\r\n            history.push(routerRoutes.dashboard);\r\n        }\r\n    }, [isAuth, history]);\r\n\r\n    const initialValues = {\r\n        email: initialFormValues.email,\r\n        password: initialFormValues.password\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .email(formErrorMessages.email),\r\n        password: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n    });\r\n\r\n    const handleLogin = useCallback( async values => {\r\n        setIsLoggingIn(true);\r\n        await dispatch(loginUser(values))\r\n        setIsLoggingIn(false);\r\n        // eslint-disable-next-line\r\n    }, [values]);\r\n\r\n    useEnterKey( () => {\r\n        handleSubmit();\r\n    });\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleLogin,\r\n        validateOnMount: true\r\n    });\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isLoggingIn,\r\n        handleSubmit,\r\n        loginError\r\n    }\r\n}","import React from 'react';\r\nimport styles from './BackButton.module.scss';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\n\r\nconst BackButton = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div \r\n                className={classNames(\r\n                    styles.button,\r\n                    darkTheme && styles.dark\r\n                )} \r\n                onClick={ () => {window.history.back()}}\r\n            >\r\n                <FontAwesome name=\"arrow-left\"/>\r\n                <div className={styles.text}>\r\n                    Go back\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default BackButton;","import BackButton from './BackButton';\r\n\r\nexport default BackButton;","import { useCallback, useState, useEffect } from 'react';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { useFormik } from 'formik';\r\nimport { createUser, loginUser, clearCreateUser } from '../../actions/user/asyncActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const useRegisterForm = () => {\r\n    const [isSigningUp, setIsSigningUp] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { createUserError, createUserSuccess } = useSelector( ({user}) => {\r\n        if (user && user.createUser) {\r\n            return {\r\n                createUserError : user.createUser.error,\r\n                createUserSuccess : user.createUser.success\r\n            }\r\n        }\r\n\r\n        return {}\r\n    });\r\n    const history = useHistory();\r\n\r\n    const handleSignup = useCallback( async values => {\r\n        const payload = {\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            email: values.email,\r\n            password: values.password\r\n        };\r\n\r\n        setIsSigningUp(true);\r\n        await dispatch(createUser(payload));\r\n        setIsSigningUp(false);\r\n    }, [dispatch]);\r\n\r\n    const initialValues = {\r\n        firstName: initialFormValues.firstName,\r\n        lastName: initialFormValues.lastName,\r\n        email: initialFormValues.email,\r\n        password: initialFormValues.password,\r\n        confirmPassword: initialFormValues.confirmPassword\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        firstName: yup.string().required(formErrorMessages.required),\r\n        lastName: yup.string().required(formErrorMessages.required),\r\n        email: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .email(formErrorMessages.email),\r\n        password: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .min(6, `${formErrorMessages.min} 6`),\r\n        confirmPassword: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .oneOf([yup.ref('password'), null], formErrorMessages.passwordMatch)\r\n    });\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleSignup\r\n    });\r\n\r\n    useEffect( () => {\r\n        if (createUserSuccess) {\r\n            const { email, password } = values;\r\n\r\n            const handleSuccess = async () => {\r\n                await dispatch(loginUser({\r\n                    email,\r\n                    password\r\n                }));\r\n\r\n                history.push(routerRoutes.home);\r\n            }\r\n\r\n            handleSuccess();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [values, createUserSuccess]);\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearCreateUser());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch])\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isSigningUp,\r\n        handleSubmit,\r\n        createUserError\r\n    }\r\n}","import Register from './Register';\r\n\r\nexport default Register;","import React, { Fragment } from 'react';\r\nimport { Heading, Wrapper, Label, Input, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport Button from '../Button';\r\nimport BackButton from '../Back';\r\nimport ErrorBox from '../ErrorBox';\r\nimport { useRegisterForm } from '../../hooks/Register/useRegisterForm';\r\n\r\nconst Register = () => {\r\n    const {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isSigningUp,\r\n        handleSubmit,\r\n        createUserError\r\n    } = useRegisterForm();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Wrapper>   \r\n                <Heading>Sign Up</Heading>\r\n                <form>\r\n                    <Label>Enter your first name</Label>\r\n                    <Input \r\n                        type=\"text\" \r\n                        name=\"firstName\"\r\n                        value={values.firstName}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.firstName && touched.firstName && (\r\n                        <ErrorMessage>\r\n                            {errors.firstName}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Label>Enter your last name</Label>\r\n                    <Input \r\n                        type=\"text\" \r\n                        name=\"lastName\"\r\n                        value={values.lastName}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.lastName && touched.lastName && (\r\n                        <ErrorMessage>\r\n                            {errors.lastName}\r\n                        </ErrorMessage>\r\n                    )}\r\n                    \r\n                    <Label>Enter your email:</Label>\r\n                    <Input \r\n                        type=\"email\" \r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                        <ErrorMessage>\r\n                            {errors.email}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Label>Enter your password:</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                        <ErrorMessage>\r\n                            {errors.password}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Label>Confirm your password:</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"confirmPassword\"\r\n                        value={values.confirmPassword}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.confirmPassword && touched.confirmPassword && (\r\n                        <ErrorMessage>\r\n                            {errors.confirmPassword}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Footer>\r\n                        <Button \r\n                            color={\"primary\"}\r\n                            disabled={!isValid || isSigningUp}\r\n                            handleClick={handleSubmit}\r\n                        >\r\n                            Sign up\r\n                        </Button>\r\n                    </Footer>\r\n                </form>\r\n                {  createUserError && (\r\n                    <ErrorBox>\r\n                        Error: {createUserError}\r\n                    </ErrorBox>\r\n                )}\r\n            </Wrapper>\r\n            <BackButton/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\nimport styles from './loadingNetItem.module.css';\r\n\r\nconst LoadingNetItem = () => {\r\n    return (\r\n        <div className={styles.loadingScreen}>\r\n            <div className={styles.barContainer}>\r\n                <div className={styles.bar}></div>\r\n                <div className={[styles.bar, styles.delay1].join(' ')}></div>\r\n                <div className={[styles.bar, styles.delay2].join(' ')}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingNetItem;","export const daytimes = {\r\n    morning: 'Morning',\r\n    afternoon: 'Afternoon',\r\n    evening: 'Evening',\r\n    night: 'Night'\r\n}","import { daytimes } from '../constants/daytimes';\r\n\r\nexport const getDate = () => {\r\n    const date = new Date();\r\n    \r\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;  \r\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n    const fullDate = [date.getFullYear(), month, day].join('-');\r\n\r\n    return fullDate;\r\n}\r\n\r\nexport const getDaytime = () => {\r\n    const date = new Date();\r\n\r\n    const hour = date.getHours();\r\n\r\n    if (hour >= 7 && hour <= 12) {\r\n        return daytimes.morning\r\n    }\r\n\r\n    if (hour > 12 && hour <= 19) {\r\n        return daytimes.afternoon\r\n    }\r\n\r\n    if (hour > 19 && hour <= 23) {\r\n        return daytimes.evening\r\n    }\r\n\r\n    if (hour < 7) {\r\n        return daytimes.night\r\n    }\r\n\r\n    return null\r\n}","import React, { useEffect } from 'react';\r\nimport FontAwesome from 'react-fontawesome'\r\nimport { connect } from 'react-redux';\r\nimport { canUserLog } from '../../actions/logs/asyncActions';\r\nimport styles from './AddNewLog.module.scss';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDate, getDaytime } from '../../util/dateHelpers';\r\nimport { daytimes } from '../../constants/daytimes';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport classNames from 'classnames';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const returnTimeRemaining = () => {\r\n    let currentTiming = getDaytime();\r\n    let timeOfNextLog = 0;\r\n    \r\n    switch(currentTiming) {\r\n        case daytimes.morning:\r\n            timeOfNextLog = 13;\r\n            break;\r\n        case daytimes.afternoon :\r\n            timeOfNextLog = 20;\r\n            break;\r\n        case daytimes.evening :\r\n            timeOfNextLog = 7;\r\n            break;\r\n        default:\r\n            timeOfNextLog = 7;\r\n    };\r\n\r\n    return `${timeOfNextLog}:00`\r\n}\r\n\r\nconst AddNewLog = ({userId, canLog, darkTheme}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        if (userId) {\r\n            const date = getDate();\r\n            const timing = getDaytime();\r\n            \r\n            dispatch(canUserLog(date, timing, userId))\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [userId]);\r\n\r\n    if (canLog === null) {\r\n        return <LoadingNetItem/>\r\n    } \r\n\r\n    if (canLog && getDaytime() !== daytimes.night) {\r\n        return (\r\n            <Link to={routerRoutes.addNewLog}>\r\n                <div className={classNames(\r\n                    styles.logbutton, \r\n                    styles.available,\r\n                    darkTheme && styles.dark\r\n                    )}>\r\n                    <div className={styles.attentionBorder}/>\r\n                    <FontAwesome name=\"fas fa-plus\" className={styles.floating}/> ADD LOG\r\n                </div>\r\n            </Link> \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(styles.logbutton, styles.unavailable)}>\r\n            Next log will be available at: {returnTimeRemaining()}\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction mapStateToProps({logs, user}) {\r\n    const userId = (user && user.userData && user.userData.id) ? user.userData.id : null;\r\n    const { canLog } = logs; \r\n\r\n    return { canLog, userId }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddNewLog);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport parentStyles from './Dashboard.module.scss';\r\nimport styles from './LastLogs.module.scss';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport { useSelector } from 'react-redux';\r\nimport Button from '../Button';\r\nimport classNames from 'classnames';\r\n\r\nconst LastLogs = () => {\r\n    const darkTheme = useTheme();\r\n    const { logs, isFetching } = useSelector( ({logs}) => logs.lastLogs );\r\n\r\n    return (\r\n        <div className={parentStyles.gridItem}>\r\n            <h3 className={parentStyles.gridItemHeader}>Last logs</h3>\r\n            {\r\n                isFetching ? (\r\n                    <LoadingNetItem/>\r\n                ) : ( (!logs || !logs.length) ? (\r\n                        <div className={styles.greyText}>\r\n                            There are no logs at the moment <br/><br/>\r\n                            Write Your first one, by pressing the green button at the top\r\n                        </div> \r\n                    ) : (\r\n                        <div className={classNames(\r\n                            styles.logSection, \r\n                            parentStyles.gridItemContent\r\n                        )}> \r\n                            <div className={styles.logContainer}>\r\n                                { logs.slice(0,3).map( (log, index) => {\r\n                                    return (\r\n                                        <div key={index} className={styles.logItem}>\r\n                                            <div className={styles.logContent}>\r\n                                                <div className={classNames(\r\n                                                    styles.ratingBox,\r\n                                                    darkTheme && styles.dark\r\n                                                )}>\r\n                                                    {log.rating}\r\n                                                </div>\r\n                                                <div className={styles.rightSection}>\r\n                                                    <div className={styles.date}>{log.date}</div>\r\n                                                    <div className={styles.text}>{log.text}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Link \r\n                                                to={`/logs/${log.id}`}\r\n                                                className={classNames(\r\n                                                    styles.link,\r\n                                                    darkTheme && styles.dark\r\n                                                )}\r\n                                            >\r\n                                                Read more\r\n                                            </Link> \r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <Link to=\"/logs\">\r\n                                <Button>All Logs</Button>\r\n                            </Link>\r\n                        </div> )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LastLogs;","const moodTypes = [\r\n    {\r\n        above: 7.5,\r\n        below: 10,\r\n        text: 'Great'\r\n    },\r\n    {\r\n        above: 5,\r\n        below: 7.5,\r\n        text: 'Good'\r\n    },\r\n    {\r\n        above: 3,\r\n        below: 5,\r\n        text: 'Average'\r\n    },\r\n    {\r\n        above: 0,\r\n        below: 3,\r\n        text: 'Bad'\r\n    }\r\n];\r\n\r\nexport default moodTypes;","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { returnMoodText, returnAverageRating } from '../../util/moodStatusHelpers';\r\n\r\nexport const useMoodStatus = () => {\r\n    const { logs : lastLogs, isFetching : isFetchingLogs } = useSelector( ({logs}) => logs.lastLogs);\r\n\r\n    const rating = useMemo( () => {\r\n        if (!lastLogs || !Array.isArray(lastLogs) || !lastLogs.length) {\r\n            return 'N/A';\r\n        }\r\n\r\n        return returnAverageRating(lastLogs);\r\n    }, [lastLogs]);\r\n\r\n    const ratingText = useMemo( () => {\r\n        if (\r\n            !lastLogs || \r\n            !Array.isArray(lastLogs) || \r\n            !lastLogs.length || \r\n            rating === 'N/A'\r\n        ) {\r\n            return ''\r\n        }\r\n\r\n        return returnMoodText(rating);\r\n    }, [lastLogs, rating])\r\n\r\n    return {\r\n        rating,\r\n        ratingText,\r\n        lastLogs,\r\n        isFetchingLogs\r\n    }\r\n}","import moodTypes from '../constants/moodTypes';\r\n\r\nexport const returnMoodText = unparsedRating => {\r\n    const rating = parseInt(unparsedRating);\r\n\r\n    const moodType = moodTypes.find( type => type.above < rating && type.below >= rating);\r\n\r\n    if (!moodType) {\r\n        return '';\r\n    }\r\n\r\n    return moodType.text\r\n}\r\n\r\nexport const returnAverageRating = logs => {\r\n    let total = 0;\r\n    let count = 0;\r\n\r\n    logs.forEach( log => {\r\n        total += parseInt(log.rating);\r\n        count++;\r\n    });\r\n\r\n    const average = Math.round(((total/count)*10)/10);\r\n\r\n    if (Number.isInteger(average)) {\r\n        return `${average}.0`\r\n    }\r\n\r\n    return String(average);\r\n}","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport Button from '../Button';\r\nimport parentClasses from './Dashboard.module.scss';\r\nimport styles from './MoodStatus.module.scss';\r\nimport { useMoodStatus } from '../../hooks/Dashboard/useMoodStatus';\r\nimport classNames from 'classnames';\r\n\r\nconst MoodStatus = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    const {\r\n        rating,\r\n        ratingText,\r\n        isFetchingLogs\r\n    } = useMoodStatus();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            parentClasses.gridItem,\r\n            styles.statusContainer\r\n        )}>\r\n            {\r\n                !isFetchingLogs ? (\r\n                    <Fragment>\r\n                        <h3 className={parentClasses.gridItemHeader}>Latest mood status</h3>\r\n                        <div className={parentClasses.gridItemContent}>\r\n                            <div className={classNames(\r\n                                styles.statusBox,\r\n                                darkTheme && styles.dark\r\n                            )}>{rating}</div>\r\n                            <div className={styles.statusText}>{ratingText}</div>\r\n                            <Link to=\"/stats\">\r\n                                <Button>Stats</Button> \r\n                            </Link>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                    <LoadingNetItem/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MoodStatus;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport parentClasses from './Dashboard.module.scss';\r\nimport styles from './SettingsItem.module.scss';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\n\r\nconst SettingsItem = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            parentClasses.gridItem,\r\n            parentClasses.shrink\r\n            )}>\r\n            <h3 className={parentClasses.gridItemHeader}>Settings</h3>\r\n            <div className={parentClasses.flexCenter}>\r\n                <div className={styles.settingsIconWrapper}>\r\n                    <Link to={routerRoutes.settings}>\r\n                        <FontAwesome name=\"cog\" className={classNames(\r\n                            styles.settingsIcon,\r\n                            darkTheme && styles.dark\r\n                            )}/>\r\n                    </Link>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettingsItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport parentClasses from './Dashboard.module.scss';\r\nimport styles from './LogoutItem.module.scss';\r\nimport classNames from 'classnames';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nconst LogoutItem = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            parentClasses.gridItem,\r\n            parentClasses.shrink\r\n            )}>\r\n            <h3 className={parentClasses.gridItemHeader}>Log out</h3>\r\n            <div className={parentClasses.flexCenter}>\r\n                <Link to={routerRoutes.logout}>\r\n                    <div className={styles.logoutIconWrapper}> \r\n                        <FontAwesome name=\"sign-out\" className={classNames(\r\n                            styles.logoutIcon,\r\n                            darkTheme && styles.dark\r\n                        )}/>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LogoutItem;","import Dashboard from './Dashboard';\r\n\r\nexport default Dashboard;","import React, { useEffect } from 'react';\r\nimport AddNewLog from './AddNewLog';\r\nimport Loading from '../Loading/loading';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './Dashboard.module.scss';\r\nimport LastLogs from './LastLogs';\r\nimport MoodStatus from './MoodStatus';\r\nimport SettingsItem from './SettingsItem';\r\nimport LogoutItem from './LogoutItem';\r\nimport { getLastLogs } from '../../actions/logs/asyncActions';\r\n\r\nconst Dashboard = () => {\r\n    const darkTheme = useTheme();\r\n    const isSignedIn = useSelector( ({user}) => user.isAuth );\r\n    const userId = useSelector( ({user}) => { \r\n        if (user && user.userData && user.userData.id) {\r\n            return user.userData.id\r\n        } \r\n\r\n        return null;\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(getLastLogs({\r\n                userId,\r\n                limit: 9\r\n            }))\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    if (isSignedIn === null) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n\r\n    if (isSignedIn) {\r\n        return (\r\n            <div>\r\n                <AddNewLog darkTheme={darkTheme}/>\r\n                <div className={styles.grid}>\r\n                    <h1 className={styles.gridTop}>Your dashboard</h1>\r\n                    <LastLogs/>\r\n                    <MoodStatus/>\r\n                    <SettingsItem/>\r\n                    <LogoutItem/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { canUserLog, postLog, clearLogPost } from '../../actions/logs/asyncActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport { getDate, getDaytime } from '../../util/dateHelpers';\r\nimport { useEnterKey } from '../useEnterKey';\r\n\r\nexport const useAddLog = () => {\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector( ({user}) => user.userData.id);\r\n    const { postLogSuccess, postLogError, canLog } = useSelector( ({logs}) => {\r\n        return {\r\n            postLogSuccess : logs.postLogSuccess,\r\n            postLogError : logs.postLogError,\r\n            canLog : logs.canLog\r\n        }\r\n    });\r\n    const [message, setMessage] = useState('');\r\n    const [moodRating, setMoodRating] = useState(5);\r\n    const [isPostingLog, setIsPostingLog] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(canUserLog(getDate(), getDaytime(), userId))\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    const handleRangeInput = useCallback( (event) => {\r\n        setMoodRating(Number(event.target.value))\r\n    }, []);\r\n\r\n    const handleMessageInput = useCallback( (event) => {\r\n        setMessage(event.target.value)\r\n    }, [])\r\n\r\n    const handleAddLog = useCallback( async () => {\r\n        if (moodRating && userId) {\r\n            setIsPostingLog(true);\r\n\r\n            await dispatch(postLog({\r\n                userId,\r\n                date : getDate(),\r\n                timing : getDaytime(),\r\n                rating : moodRating,\r\n                text : message\r\n            }));\r\n\r\n            setIsPostingLog(false);\r\n        };\r\n\r\n    }, [userId, moodRating, message, dispatch]);\r\n\r\n    useEnterKey( () => {\r\n        handleAddLog();\r\n    })\r\n\r\n    useEffect( () => {\r\n        if (postLogSuccess) {\r\n            dispatch(clearLogPost());\r\n\r\n            history.push(routerRoutes.dashboard);\r\n        }\r\n    }, [postLogSuccess, dispatch, history]);\r\n\r\n    useEffect( () => {\r\n        if (canLog === false) {\r\n            history.push(routerRoutes.dashboard);\r\n        }\r\n    }, [canLog, dispatch, history])\r\n    \r\n    const returnMoodText = rating => {\r\n        if (rating >= 9) { \r\n            return \"Awesome!\" \r\n        } else if (rating >= 7) { \r\n            return \"Good\";\r\n        } else if (rating >= 5) { \r\n            return \"Average\";\r\n        } else if (rating >= 3) {\r\n            return \"Not well\";\r\n        } else if (rating < 3) { \r\n            return \"Bad\";\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    return {\r\n        returnMoodText,\r\n        postLogError,\r\n        canLog,\r\n        message,\r\n        moodRating,\r\n        isPostingLog,\r\n        handleRangeInput,\r\n        handleMessageInput,\r\n        handleAddLog\r\n    }\r\n}","import AddLogPage from './AddLogPage';\r\n\r\nexport default AddLogPage;","import React, { Fragment } from 'react';\r\nimport { Wrapper, Heading, Label, Input, Footer } from '../Forms/Forms';\r\nimport Button from '../Button';\r\nimport BackButton from '../Back';\r\nimport Loading from '../Loading/loading';\r\nimport ErrorBox from '../ErrorBox';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport styles from './AddLogPage.module.scss';\r\nimport { useAddLog } from '../../hooks/AddLog/useAddLog';\r\n\r\nconst AddLogPage = () => {\r\n    const {\r\n        returnMoodText,\r\n        postLogError,\r\n        canLog,\r\n        message,\r\n        moodRating,\r\n        isPostingLog,\r\n        handleRangeInput,\r\n        handleMessageInput,\r\n        handleAddLog\r\n    } = useAddLog();\r\n\r\n    if (canLog === undefined) {\r\n        return <Loading/>\r\n    }\r\n\r\n    if (canLog) {\r\n        return (\r\n            <Fragment>\r\n                <Wrapper>\r\n                    <Heading>Add log</Heading>\r\n                    <span>How do you feel at the moment? Rate your mood:</span>\r\n                    <div className={styles.topSection}>\r\n                        <div className={styles.moodBox}>\r\n                            {moodRating}\r\n                        </div>\r\n                        <div className={styles.inputLine}>\r\n                            <FontAwesome \r\n                                className={styles.thumb} \r\n                                name=\"thumbs-down\" \r\n                                style={{color: \"#800000\"}}\r\n                            />\r\n                            <input \r\n                                onChange={handleRangeInput} \r\n                                type=\"range\" \r\n                                min=\"1\" \r\n                                max=\"10\" \r\n                                value={moodRating}\r\n                            />\r\n                            <FontAwesome \r\n                                className={styles.thumb} \r\n                                name=\"thumbs-up\" \r\n                                style={{color: \"#16774f\"}}\r\n                            />\r\n                        </div>\r\n                        <span>{returnMoodText(moodRating)}</span>\r\n                    </div>\r\n                    <Label>Describe your thoughts: (optional)</Label>\r\n                    <Input \r\n                        type={'textarea'}\r\n                        name={'message'}\r\n                        value={message}\r\n                        controlEvents={{\r\n                            handleChange : handleMessageInput\r\n                        }}\r\n                    />\r\n                    <Footer>\r\n                        <Button\r\n                            handleClick={handleAddLog}\r\n                            disabled={isPostingLog}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Footer>\r\n                    {postLogError && (\r\n                            <ErrorBox>\r\n                                {postLogError}\r\n                            </ErrorBox>\r\n                        )}\r\n                </Wrapper>\r\n                <BackButton/>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default AddLogPage;","import React from 'react';\r\nimport styles from './logItem.module.css';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nconst LogItem = ({date, timing, text, rating}) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <div className={styles.top_line}>\r\n                <div className={styles.rating_box}>\r\n                    {rating}\r\n                </div>\r\n                <div>\r\n                    <FontAwesome name=\"hourglass\" className={styles.icon}/>\r\n                    {timing}\r\n                </div>\r\n                <div className={styles.date}>\r\n                    <FontAwesome name=\"calendar\" className={styles.icon}/>\r\n                    {date}\r\n                </div>\r\n            </div>\r\n            <div className={styles.text}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n   );\r\n};\r\n\r\nexport default LogItem","import AllLogs from './AllLogs';\r\n\r\nexport default AllLogs;","import React from 'react';\r\nimport Loading from '../Loading/loading';\r\nimport BackButton from '../Back';\r\nimport styles from './AllLogs.module.scss';\r\nimport Button from '../Button';\r\nimport LogItem from '../LogItem/logItem';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport ErrorBox from '../ErrorBox';\r\nimport { useAllLogs } from '../../hooks/AllLogs/useAllLogs';\r\n\r\nconst AllLogs = () => {\r\n    const { \r\n        allLogs,\r\n        isFetchingAllLogs, \r\n        fetchAllLogsError,\r\n        noLogsLeft,\r\n        loadMoreLogs \r\n    } = useAllLogs();\r\n\r\n    if (!allLogs || isFetchingAllLogs) {\r\n        return <Loading/>\r\n    }\r\n\r\n    if (\r\n        allLogs && \r\n        Array.isArray && \r\n        allLogs.length\r\n    ) {\r\n        return (\r\n            <div className={styles.pageWrapper}>\r\n                <BackButton/>\r\n                <h1>All logs</h1>\r\n                <div>\r\n                    {\r\n                        allLogs.map( (item, i) => {\r\n                            return (\r\n                                <LogItem \r\n                                    key={i} \r\n                                    rating={item.rating} \r\n                                    date={item.date} \r\n                                    timing={item.timing} \r\n                                    text={item.text}\r\n                                />\r\n                            ) \r\n                        })\r\n                    }\r\n                </div>\r\n                <div className={styles.bottomSection}>\r\n                    {\r\n                        isFetchingAllLogs ? (\r\n                            <LoadingNetItem/>\r\n                        ) : !noLogsLeft && (\r\n                            <Button\r\n                                handleClick={loadMoreLogs}\r\n                            >\r\n                                Load more\r\n                            </Button>\r\n                        ) \r\n                    }\r\n                    {\r\n                        fetchAllLogsError && (\r\n                            <ErrorBox>\r\n                                {fetchAllLogsError}\r\n                            </ErrorBox>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (\r\n        allLogs && \r\n        Array.isArray && \r\n        !allLogs.length &&\r\n        !isFetchingAllLogs\r\n    ) {\r\n        return (<div>No logs found</div>)\r\n    }\r\n}\r\n\r\nexport default AllLogs;","\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { getLogs, clearLogs } from '../../actions/logs/asyncActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useAllLogs = () => {\r\n    const dispatch = useDispatch();\r\n    const { user, logs } = useSelector( ({user, logs}) => { \r\n        return {\r\n            user,\r\n            logs\r\n        }\r\n    });\r\n    const [ skipLogs, setSkipLogs ] = useState(3); \r\n\r\n    const userId = user && user.userData && user.userData.id;\r\n    const { \r\n        logs : allLogs, \r\n        isFetching : isFetchingAllLogs, \r\n        error : fetchAllLogsError,\r\n        noLogsLeft\r\n    } = logs.allLogs;\r\n\r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(getLogs({\r\n                userId, \r\n                start : 0, \r\n                limit : 3\r\n            }));\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearLogs());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const loadMoreLogs = useCallback( () => {\r\n        if (userId) {\r\n            dispatch(getLogs({\r\n                userId, \r\n                start : skipLogs, \r\n                limit : 3,\r\n                currentLogs : allLogs\r\n            }));\r\n\r\n            setSkipLogs( prevState => prevState + 3);\r\n        }\r\n    }, [skipLogs, userId, allLogs, dispatch]);\r\n\r\n    return {\r\n        allLogs,\r\n        isFetchingAllLogs, \r\n        fetchAllLogsError,\r\n        noLogsLeft,\r\n        loadMoreLogs\r\n    }\r\n}","import LogView from './LogView';\r\n\r\nexport default LogView;","import React, { useEffect } from 'react';\r\nimport { getLog, clearLog } from '../../actions/logs/asyncActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../Loading/loading';\r\nimport BackButton from '../Back';\r\nimport LogItem from '../LogItem/logItem';\r\nimport ErrorBox from '../ErrorBox';\r\nimport styles from './logview.module.css';\r\n\r\nconst LogView = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { logData, isFetching : isFetchingLog, error : getLogError } = useSelector( ({logs}) => logs.singleLog);\r\n\r\n    useEffect( () => {\r\n        if (\r\n            props.match && \r\n            props.match.params &&\r\n            props.match.params.id\r\n        ) {\r\n            dispatch(getLog(props.match.params.id));\r\n        }\r\n\r\n        return () => {\r\n            dispatch(clearLog());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (!logData || isFetchingLog) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageWrapper}>\r\n            <BackButton/>\r\n            {\r\n                logData && Boolean(Object.keys(logData).length) && (\r\n                    <LogItem \r\n                        rating={logData.rating}\r\n                        timing={logData.timing}\r\n                        date={logData.date}\r\n                        text={logData.text}\r\n                    />\r\n                )\r\n            }\r\n            {\r\n                getLogError && (\r\n                    <ErrorBox>\r\n                        {getLogError}\r\n                    </ErrorBox>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogView","import LogOut from './LogOut';\r\n\r\nexport default LogOut;","import React, { useEffect } from 'react';\r\nimport Loading from '../Loading/loading';\r\nimport { logOut } from '../../actions/user/asyncActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst LogOut = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch(logOut());\r\n    }, [])\r\n\r\n    return <Loading/>\r\n};\r\n\r\nexport default LogOut;","import SuccessBox from './SuccessBox';\r\n\r\nexport default SuccessBox;","import React from 'react';\r\nimport styles from './SuccessBox.module.scss';\r\n\r\nconst SuccessBox = ({children}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessBox;","\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { editUserDetails, clearEditUser } from '../../actions/user/asyncActions';\r\n\r\nexport const useEditAccount = ({\r\n    firstName,\r\n    lastName\r\n}) => {\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { \r\n        userData,\r\n        editUserData\r\n    } = useSelector( ({user}) => {\r\n            return {\r\n                userData: user.userData || {},\r\n                editUserData: user.editUser || {}\r\n            }\r\n        }\r\n    );\r\n    const { id : userId } = userData;\r\n    const {\r\n        success : editUserSuccess,\r\n        error : editUserError,\r\n        isEditing : isEditingUser\r\n    } = editUserData;\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearEditUser())\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const validationSchema = yup.object({\r\n        firstName: yup\r\n            .string()\r\n            .required(formErrorMessages.required),\r\n        lastName: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n    });\r\n\r\n    const initialValues = {\r\n        firstName,\r\n        lastName\r\n    }\r\n\r\n    const handleChangeDetails = async (values) => {\r\n        setIsSubmitting(true);\r\n        await dispatch(editUserDetails({\r\n            userId,\r\n            details: values\r\n        }));\r\n        setIsSubmitting(false);\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        touched,\r\n        isValid,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: handleChangeDetails\r\n    });\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        isSubmitting,\r\n        isEditingUser,\r\n        editUserError,\r\n        editUserSuccess,\r\n        values,\r\n        errors,\r\n        touched,\r\n        isValid,\r\n        handleSubmit,\r\n        controlEvents\r\n    }\r\n}","import React from 'react';\r\nimport { Wrapper, Input, Label, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport Button from '../Button';\r\nimport ErrorBox from '../ErrorBox';\r\nimport SuccessBox from '../SuccessBox';\r\nimport styles from './Settings.module.scss';\r\nimport { useEditAccount } from '../../hooks/Settings/useEditAccount';\r\n\r\nconst AccountDetails = ({\r\n    email,\r\n    firstName,\r\n    lastName\r\n}) => {\r\n    const {\r\n        isSubmitting,\r\n        isEditingUser,\r\n        editUserError,\r\n        editUserSuccess,\r\n        values,\r\n        errors,\r\n        touched,\r\n        isValid,\r\n        handleSubmit,\r\n        controlEvents\r\n    } = useEditAccount({\r\n        firstName,\r\n        lastName\r\n    })\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div><strong>User: </strong> {email}</div><br/>\r\n            <h3 className={styles.miniHeader}>Edit details:</h3>\r\n            <Label>First name:</Label>\r\n            <Input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                controlEvents={controlEvents}\r\n            />\r\n            {\r\n                (errors.firstName && touched.firstName) && (\r\n                    <ErrorMessage>\r\n                        {errors.firstName}\r\n                    </ErrorMessage>\r\n                )\r\n            }\r\n            <Label>Last name:</Label>\r\n            <Input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                controlEvents={controlEvents}    \r\n            />\r\n            {\r\n                (errors.lastName && touched.lastName) && (\r\n                    <ErrorMessage>\r\n                        {errors.lastName}\r\n                    </ErrorMessage>\r\n                )\r\n            }\r\n            <Footer>\r\n                <Button\r\n                    disabled={isSubmitting || !isValid || isEditingUser}\r\n                    handleClick={handleSubmit}\r\n                >\r\n                    Save changes\r\n                </Button>\r\n            </Footer>\r\n            {\r\n                !isEditingUser && editUserError && (\r\n                    <ErrorBox>\r\n                        {editUserError}\r\n                    </ErrorBox>\r\n                )\r\n            }\r\n            {\r\n                !isEditingUser && editUserSuccess && (\r\n                    <SuccessBox>\r\n                        Account information was saved\r\n                    </SuccessBox>\r\n                )\r\n            }\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default AccountDetails;","import { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changePassword, clearChangePassword } from '../../actions/user/asyncActions';\r\n\r\nexport const useChangePassword = () => {\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { \r\n        userData,\r\n        changePasswordData\r\n    } = useSelector( ({user}) => { \r\n        return {\r\n            userData : user.userData || {},\r\n            changePasswordData : user.changePassword || {}\r\n        }\r\n    });\r\n    const { id : userId } = userData;\r\n    const {\r\n        success : changePasswordSuccess, \r\n        error : changePasswordError\r\n    } = changePasswordData;\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearChangePassword());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const validationSchema = yup.object({\r\n        currentPassword: yup.string()\r\n                    .required(formErrorMessages.required),\r\n        password: yup.string()\r\n                    .required(formErrorMessages.required)\r\n                    .min(6, `${formErrorMessages.min} 6`),\r\n        confirmPassword: yup.string()\r\n                    .required(formErrorMessages.required)\r\n                    .oneOf([yup.ref('password'), null], formErrorMessages.passwordMatch)\r\n    })\r\n\r\n    const initialValues = {\r\n        currentPassword: initialFormValues.currentPassword,\r\n        password: initialFormValues.password,\r\n        confirmPassword: initialFormValues.confirmPassword\r\n    }\r\n\r\n    const handleChangePassword = async ({currentPassword, password}) => {\r\n        setIsSubmitting(true);\r\n\r\n        await dispatch(changePassword({\r\n            userId,\r\n            currentPassword,\r\n            newPassword : password\r\n        }));\r\n\r\n        setIsSubmitting(false);\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleChangePassword\r\n    });\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isSubmitting,\r\n        handleSubmit,\r\n        changePasswordSuccess,\r\n        changePasswordError\r\n    }\r\n}","import React from 'react';\r\nimport { Wrapper, Input, Label, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport Button from '../Button';\r\nimport styles from './Settings.module.scss';\r\nimport { useChangePassword } from '../../hooks/Settings/useChangePassword';\r\nimport ErrorBox from '../ErrorBox';\r\nimport SuccessBox from '../SuccessBox';\r\n\r\nconst ChangePassword = ({\r\n    userId\r\n}) => {\r\n    const {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        handleSubmit,\r\n        touched,\r\n        changePasswordSuccess,\r\n        changePasswordError\r\n    } = useChangePassword({\r\n        userId\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <h3 className={styles.miniHeader}>Change password</h3>\r\n            <Label>Current password:</Label>\r\n            <Input\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                controlEvents={controlEvents}\r\n                value={values.currentPassword}\r\n            />\r\n            <Label>New password:</Label>\r\n            <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                controlEvents={controlEvents}\r\n                value={values.password}\r\n            />\r\n            {\r\n                touched.password && errors.password && (\r\n                    <ErrorMessage>\r\n                        {errors.password}\r\n                    </ErrorMessage>\r\n                ) \r\n            }\r\n            <Label>Confirm new password:</Label>\r\n            <Input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                controlEvents={controlEvents}\r\n                value={values.confirmPassword}\r\n            />\r\n            {\r\n                touched.confirmPassword && errors.confirmPassword && (\r\n                    <ErrorMessage>\r\n                        {errors.confirmPassword}\r\n                    </ErrorMessage>\r\n                ) \r\n            }\r\n            <Footer>\r\n                <Button\r\n                    disabled={!isValid || isSubmitting}\r\n                    handleClick={handleSubmit}\r\n                >\r\n                    Change password\r\n                </Button>\r\n            </Footer>\r\n            {\r\n                changePasswordError && (\r\n                    <ErrorBox>\r\n                        {changePasswordError}\r\n                    </ErrorBox>\r\n                )\r\n            }\r\n            {\r\n                changePasswordSuccess && (\r\n                    <SuccessBox>\r\n                        Password was changed successfully\r\n                    </SuccessBox>\r\n                )\r\n            }\r\n        </Wrapper>            \r\n    );\r\n};\r\n\r\nexport default ChangePassword;","import Settings from './Settings';\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BackButton from '../Back';\r\nimport { Wrapper, Heading, Footer } from '../Forms/Forms';\r\nimport AccountDetails from './AccountDetails';\r\nimport ChangePassword from './ChangePassword';\r\nimport Button from '../Button';\r\nimport Loading from '../Loading/loading';\r\nimport styles from './Settings.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\n\r\nconst Settings = () => {\r\n    const user = useSelector( ({user}) => {\r\n        if (user && user.userData) {\r\n            return user.userData\r\n        };\r\n\r\n        return {}\r\n    });\r\n\r\n    const { \r\n        email, \r\n        firstName, \r\n        lastName \r\n    } = user;\r\n\r\n    if (!user || !Object.keys(user).length) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BackButton/>\r\n            <Heading>Account settings</Heading>\r\n            <AccountDetails\r\n                email={email}\r\n                firstName={firstName}\r\n                lastName={lastName}\r\n            /><br/>\r\n            <ChangePassword/><br/>\r\n            <Wrapper>\r\n                <h3 className={styles.miniHeader}>Delete account</h3>\r\n                <Footer>\r\n                    <Link to={routerRoutes.delete}>\r\n                        <Button>Delete account</Button>\r\n                    </Link>\r\n                </Footer>\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './GraphCanvas.module.scss';\r\nimport { useTheme } from './../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\nimport { mapLogsToGraphData } from '../../util/statsHelpers';\r\n\r\nconst ReturnGraph = ( {points} ) => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <polyline points={points} className={classNames(\r\n            styles.graph_stroke,\r\n            darkTheme && styles.dark\r\n        )}/>\r\n    )\r\n}\r\n\r\nconst GraphCanvas = ({logs}) => {\r\n    const [ width, setWidth ] = useState(0);\r\n    const graphRef = useRef(null);\r\n\r\n    const returnPolylinePoints = (list) => {\r\n        let pointsString = '';\r\n\r\n        for (let i = 0; i < list.length; i++) {\r\n            let ratingYpos = 220 - (Number(list[i].rating) * 20);\r\n            pointsString += (Math.floor((width / 21) * (list.length - i - 1))) + \",\" + ratingYpos + \" \"; \r\n        }\r\n\r\n        return pointsString\r\n    }\r\n\r\n    const handleResize = () => {\r\n        let newWidth = 0;\r\n\r\n        if (graphRef.current && graphRef.current.offsetWidth) {\r\n            newWidth = graphRef.current.offsetWidth;\r\n        } else {\r\n            newWidth = 490;\r\n        };\r\n\r\n        if (newWidth !== width) {\r\n            setWidth(newWidth);\r\n        };\r\n    };\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        if (!width && graphRef.current && graphRef.current.offsetWidth) {\r\n            setWidth(graphRef.current.offsetWidth)\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const graphData = mapLogsToGraphData(logs);\r\n\r\n    if (!graphData || !graphData.length) {\r\n        return null;\r\n    }\r\n\r\n    const firstDate = graphData[0].date;\r\n    const lastDate = graphData[graphData.length - 1].date;\r\n\r\n    return (\r\n        <div className={styles.graph_container}>\r\n            <p><strong>Your mood graph</strong></p>\r\n            <div className={styles.graph_canvas} ref={graphRef} >\r\n                <div className={styles.y_axis_number}>10</div>\r\n                <div className={styles.y_axis_number} style={{transform: \"translate(10px, 100px)\"}}>5</div>\r\n                <div className={styles.y_axis_number} style={{transform: \"translate(10px, 200px)\"}}>0</div>\r\n                <svg width={\"100%\"} height={\"100%\"}>\r\n                    <polyline points={\"1,20 490,20\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,40 490,40\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,60 490,60\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,80 490,80\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,100 490,100\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,120 490,120\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,140 490,140\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,160 490,160\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,180 490,180\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,200 490,200\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <ReturnGraph points={returnPolylinePoints(graphData)} />\r\n                </svg>\r\n            </div>\r\n            <div>From {lastDate} to {firstDate}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraphCanvas;","export function countAverage(list) {\r\n    if (!list || !Array.isArray(list) || !list.length) {\r\n        return null;\r\n    }\r\n\r\n    let sum = 0;\r\n\r\n    list.forEach( item => {\r\n        if (item && item.rating) {\r\n            sum += Number(item.rating);\r\n        }\r\n    });\r\n\r\n    return (Math.floor(sum * 10 / list.length) / 10)\r\n};\r\n\r\nexport function lastSevenDaysAverage(list) {\r\n    if (!list || !Array.isArray(list) || !list.length) {\r\n        return {}\r\n    }\r\n\r\n    let dates = [];\r\n    let sum = 0;\r\n    let count = 0;\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n        let date = list[i].date;\r\n\r\n        if (dates.indexOf(date) < 0) {\r\n            dates.push(list[i].date);\r\n        }\r\n\r\n        sum += Number(list[i].rating);\r\n        count++;\r\n\r\n        if (dates.length >= 7) {\r\n            break;\r\n        }\r\n    };\r\n\r\n    const average = Math.floor(sum * 10 / count) / 10;\r\n    const firstDay = dates[dates.length - 1] ? dates[dates.length - 1] : \"N/A\";\r\n    const lastDay = dates[0] ? dates[0] : \"N/A\";\r\n\r\n    return {\r\n        average,\r\n        firstDay,\r\n        lastDay\r\n    }\r\n};\r\n\r\nexport function mapLogsToGraphData(logs) {\r\n    if (!logs || !Array.isArray(logs) || !logs.length) {\r\n        return null;\r\n    }\r\n    \r\n    let graphData = [];\r\n\r\n    for (let i = 0; i < logs.length; i++) {\r\n        const { date, rating } = logs[i];\r\n        \r\n        graphData.push({\r\n            date,\r\n            rating\r\n        });\r\n\r\n        if (i === 20) {\r\n            break;\r\n        }\r\n    };\r\n\r\n    return graphData;\r\n}\r\n\r\nexport function mapLogsToDaytimeStats(list) {\r\n    let morningSum = 0;\r\n    let morningCount = 0;\r\n    let afternoonSum = 0;\r\n    let afternoonCount = 0;\r\n    let eveningSum = 0;\r\n    let eveningCount = 0;\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (list[i].timing === \"Morning\") {\r\n            morningSum += Number(list[i].rating);\r\n            morningCount++;\r\n        }\r\n        if (list[i].timing === \"Afternoon\") {\r\n            afternoonSum += Number(list[i].rating);\r\n            afternoonCount++;\r\n        }\r\n        if (list[i].timing === \"Evening\") {\r\n            eveningSum += Number(list[i].rating);\r\n            eveningCount++;\r\n        }\r\n    };\r\n\r\n    const morningAverage = morningCount === 0 ? \"N/A\" : Math.floor(morningSum * 10 / morningCount) / 10;\r\n    const afternoonAverage = afternoonCount === 0 ? \"N/A\" : Math.floor(afternoonSum * 10 / afternoonCount) / 10;\r\n    const eveningAverage = eveningCount === 0 ? \"N/A\" : Math.floor(eveningSum * 10 / eveningCount) / 10;\r\n\r\n    return {\r\n        morningAverage,\r\n        afternoonAverage,\r\n        eveningAverage\r\n    }\r\n};\r\n","import React from 'react';\r\nimport styles from './DaytimeGraph.module.scss';\r\nimport { mapLogsToDaytimeStats } from '../../util/statsHelpers';\r\nimport morningIcon from './icons/morning.svg';\r\nimport afternoonIcon from './icons/afternoon.svg';\r\nimport eveningIcon from './icons/evening.svg';\r\nimport classNames from 'classnames';\r\nimport { useTheme } from './../../contexts/ThemeContext';\r\n\r\nconst returnBullet = (rating, left, darkTheme) => {\r\n    if (rating === \"N/A\") {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={classNames(\r\n                styles.daytime_bullet,\r\n                darkTheme && styles.dark\r\n            )} \r\n            style={{bottom:`${rating * 30 -10}px`, left:`${left}`}}\r\n        >\r\n            <div className={styles.daytime_bullet_text}>{rating}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DaytimeGraph = ({logs}) => {\r\n    const data = mapLogsToDaytimeStats(logs);\r\n    const darkTheme = useTheme();\r\n    \r\n    if (!logs || !logs.length || !data) {\r\n        return null;\r\n    }\r\n\r\n    const {\r\n        morningAverage,\r\n        afternoonAverage,\r\n        eveningAverage\r\n    } = data;\r\n\r\n    return (\r\n        <div className={styles.daytime_container}>\r\n            <p><strong>Your mood throughout the day:</strong></p>\r\n            <div className={styles.daytime_canvas}>\r\n                <svg width={\"100%\"} height={\"100%\"} overflow={\"hidden\"}>\r\n                    <polyline points={\"1,60 300,60\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,120 300,120\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,180 300,180\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,240 300,240\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,300 300,300\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                </svg>\r\n                {returnBullet(morningAverage, null, darkTheme)}\r\n                {returnBullet(afternoonAverage, \"48%\", darkTheme)}\r\n                {returnBullet(eveningAverage, \"82%\", darkTheme)}\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"-12px\"}}>10</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"48px\", left: \"-15px\"}}>8</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"108px\", left:\"-15px\"}}>6</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"168px\", left:\"-15px\"}}>4</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"228px\", left:\"-15px\"}}>2</div>\r\n                <div className={styles.daytime_bottom_line}>\r\n                    <div className={styles.daytime_time}>7:00</div>\r\n                    <div className={styles.daytime_time} style={{left:\"33%\"}}>13:00</div>\r\n                    <div className={styles.daytime_time} style={{left:\"66%\"}}>20:00</div>\r\n                    <div className={styles.daytime_time} style={{left:\"100%\"}}>00:00</div>\r\n                    <img \r\n                        src={morningIcon} \r\n                        style={{left:\"13%\", padding: \"2px\"}} \r\n                        alt=\"Morning\"\r\n                        className={classNames(darkTheme && styles.dark)}\r\n                    />\r\n                    <img \r\n                        src={afternoonIcon} \r\n                        style={{left:\"48%\"}} \r\n                        alt=\"Afternoon\"\r\n                        className={classNames(darkTheme && styles.dark)}\r\n                    />\r\n                    <img \r\n                        src={eveningIcon} \r\n                        style={{left:\"82%\"}} \r\n                        alt=\"Evenining\"\r\n                        className={classNames(darkTheme && styles.dark)}\r\n                    />\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DaytimeGraph;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styles from './AverageBox.module.scss';\r\nimport { useTheme } from './../../contexts/ThemeContext';\r\n\r\nconst AverageBox = ( {children }) => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            styles.averageBox,\r\n            darkTheme && styles.dark\r\n        )}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AverageBox;","import Stats from './Stats';\r\n\r\nexport default Stats;","import React, {Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getLogs, clearLogs } from './../../actions/logs/asyncActions';\r\nimport Loading from '../Loading/loading';\r\nimport GraphCanvas from './GraphCanvas';\r\nimport DaytimeGraph from './DaytimeGraph';\r\nimport styles from './stats.module.css';\r\nimport { countAverage, lastSevenDaysAverage } from '../../util/statsHelpers';\r\nimport BackButton from '../Back';\r\nimport ErrorBox from '../ErrorBox';\r\nimport AverageBox from './AverageBox';\r\n\r\nconst Stats = () => {\r\n    const dispatch = useDispatch();\r\n    const { user, logs } = useSelector( ({user, logs}) => {\r\n        return { user, logs }\r\n    });\r\n    const userId = user && user.userData && user.userData.id;\r\n    const { \r\n        logs : allLogs, \r\n        error : fetchAllLogsError, \r\n        isFetching : isFetchingAllLogs \r\n    } = logs.allLogs; \r\n    \r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(getLogs({userId, limit : 100}));\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearLogs());\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (isFetchingAllLogs || !userId || !allLogs) {\r\n        return <Loading/>\r\n    }\r\n\r\n    if (fetchAllLogsError) {\r\n        return <ErrorBox>{fetchAllLogsError}</ErrorBox>\r\n    }\r\n\r\n    const sevenDayAverageObject = lastSevenDaysAverage(allLogs);\r\n\r\n    if (allLogs && Array.isArray(allLogs)) {\r\n        return (\r\n            <Fragment>\r\n                <BackButton/>\r\n                <div className={styles.container}>\r\n                    <h1>User stats</h1>\r\n                    <div className={styles.first_block}>\r\n                        <div className={styles.average_block}>\r\n                            <p><strong>Your average mood:</strong></p>\r\n                            <AverageBox>{countAverage(allLogs)}</AverageBox>\r\n                            <div className={styles.small_text_box}>Retrieved from the last 100 logs</div>\r\n                        </div>\r\n                        <div className={styles.average_block}>\r\n                            <b>7 day mood:</b>\r\n                            <AverageBox>{sevenDayAverageObject.average}</AverageBox>\r\n                            <div className={styles.small_text_box}>Counted from the last 7 active days from <br/>\r\n                            {sevenDayAverageObject.firstDay} to {sevenDayAverageObject.lastDay}</div>\r\n                        </div>\r\n                    </div>\r\n                    <GraphCanvas logs={allLogs}/>\r\n                    <DaytimeGraph logs={allLogs}/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stats;\r\n","import { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { clearUserData } from '../../actions/user/asyncActions';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport Cookie from 'universal-cookie';\r\nconst cookie = new Cookie();\r\n\r\nexport const useDeleteAccount = () => {\r\n    const [deleteAccountStatus, setDeleteAccountStatus] = useState({\r\n        isDeleting: false,\r\n        error: null,\r\n        success: null\r\n    });\r\n    const { isDeleting, success, error } = deleteAccountStatus;\r\n    const userId = useSelector( ({user}) => user.userData.id);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        if (success) {\r\n            async function clearData() {\r\n                await dispatch(clearUserData());\r\n            }\r\n            \r\n            clearData();\r\n            cookie.remove('auth');\r\n            history.push(routerRoutes.home);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [success])\r\n\r\n    const initialValues = {\r\n        password: initialFormValues.password,\r\n        confirmPassword: initialFormValues.confirmPassword\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        password: yup\r\n                .string()\r\n                .required(formErrorMessages.required),\r\n        confirmPassword: yup\r\n                .string()\r\n                .oneOf([yup.ref('password'), null], formErrorMessages.passwordMatch)\r\n    });\r\n\r\n    const handleDeleteAccount = async ({password}) => {\r\n        if (!userId) {\r\n            return;\r\n        }\r\n\r\n        setDeleteAccountStatus( prevStatus => {\r\n            return {\r\n                ...prevStatus,\r\n                isDeleting : true\r\n            }\r\n        });\r\n\r\n        const endpoint = `api/deleteAccount?id=${userId}`;\r\n        const body = {\r\n            password\r\n        };\r\n\r\n        try {\r\n            const { data } = await axios.post(endpoint, body);\r\n            const { error } = data; \r\n\r\n            if (error) {\r\n                setDeleteAccountStatus({\r\n                    isDeleting: false,\r\n                    error,\r\n                    success: false\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            setDeleteAccountStatus({\r\n                isDeleting: false,\r\n                error: null,\r\n                success: true\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            setDeleteAccountStatus({\r\n                isDeleting: false,\r\n                error,\r\n                success: false\r\n            });\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleDeleteAccount\r\n    })\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        controlEvents,\r\n        touched,\r\n        handleSubmit,\r\n        isDeleting,\r\n        error\r\n    }\r\n}","import DeleteAccount from './DeleteAccount';\r\n\r\nexport default DeleteAccount;","import React, { Fragment } from 'react';\r\nimport BackButton from '../Back/BackButton';\r\nimport { Wrapper, Heading, Label, Input, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport ErrorBox from '../ErrorBox';\r\nimport Button from '../Button';\r\nimport { useDeleteAccount } from '../../hooks/DeleteAccount/useDeleteAccount';\r\n\r\nconst DeleteAccount = () => {\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        controlEvents,\r\n        touched,\r\n        handleSubmit,\r\n        isDeleting,\r\n        error\r\n    } = useDeleteAccount();\r\n\r\n    return (\r\n        <Fragment>\r\n            <BackButton/>\r\n            <Wrapper>\r\n                <ErrorBox>\r\n                    <strong>Warning: </strong> deleting your account will \r\n                    permanently delete all your data, including all logs\r\n                    stored in the database.\r\n                </ErrorBox><br/>\r\n                <Heading>Delete account:</Heading>\r\n                <Label>Enter your passsword:</Label>\r\n                <Input\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    type=\"password\"\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {\r\n                    touched.password && errors.password && (\r\n                        <ErrorMessage>\r\n                            {errors.password}\r\n                        </ErrorMessage>\r\n                    )\r\n                }\r\n                <Label>Confirm your password:</Label>\r\n                <Input\r\n                    name=\"confirmPassword\"\r\n                    value={values.confirmPassword}\r\n                    type=\"password\"\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {\r\n                    touched.confirmPassword && errors.confirmPassword && (\r\n                        <ErrorMessage>\r\n                            {errors.confirmPassword}\r\n                        </ErrorMessage>\r\n                    )\r\n                }\r\n                <Footer>\r\n                    <Button\r\n                        disabled={!isValid || isDeleting}\r\n                        handleClick={handleSubmit}\r\n                    >\r\n                        Delete account\r\n                    </Button>\r\n                </Footer>\r\n                {\r\n                    error && !isDeleting && (\r\n                        <ErrorBox>\r\n                            {error}\r\n                        </ErrorBox>\r\n                    ) \r\n                }\r\n            </Wrapper>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteAccount","export const items = [\r\n    {\r\n        iconName: \"home\",\r\n        path: \"/\",\r\n        text: \"Home\",\r\n        isAuth: null\r\n    },\r\n    {\r\n        iconName: \"sign-in\",\r\n        path: \"/login\",\r\n        text: \"Log In\",\r\n        isAuth: false\r\n    },\r\n    {\r\n        iconName: \"sign-out\",\r\n        path: \"/logout\",\r\n        text: \"Log Out\",\r\n        isAuth: true\r\n    },\r\n    {\r\n        iconName: \"user-plus\",\r\n        path: \"/register\",\r\n        text: \"Sign Up\",\r\n        isAuth: null\r\n    },\r\n    {\r\n        iconName: \"book\",\r\n        path: \"/dashboard\",\r\n        text: \"Your Dashboard\",\r\n        isAuth: true\r\n    },\r\n    {\r\n        iconName: \"cog\",\r\n        path: \"/settings\",\r\n        text: \"Settings\",\r\n        isAuth: true\r\n    }\r\n];","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './NavBar.module.scss';\r\nimport { items } from './items';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport classNames from 'classnames';\r\n\r\nconst NavBar = ({isAuth, toggleNav}) => {\r\n    const darkTheme = useTheme();\r\n\r\n    const itemElement = (item, i) => (\r\n        <Link to={item.path} key={i}>\r\n            <div className={classNames(\r\n                styles.navItem,\r\n                darkTheme && styles.nightmode\r\n                )} onClick={toggleNav}>\r\n                <FontAwesome name={item.iconName}/> {item.text}\r\n            </div> \r\n        </Link>\r\n    )\r\n\r\n    const renderItems = (items) => {\r\n        return (\r\n            items.map( (item, i) => {\r\n                if (isAuth && item.isAuth) {\r\n                    return itemElement(item,i)     \r\n                } else if (!isAuth && item.isAuth === false) {\r\n                    return itemElement(item,i) \r\n                } else if (item.isAuth === null) {\r\n                    return itemElement(item,i)\r\n                }\r\n                return null\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classNames(styles.navBar, darkTheme && styles.nightMode)}>\r\n                {renderItems(items)}\r\n            </div>\r\n            <div className={styles.navBarMask} onClick={toggleNav}></div>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport styles from './Header.module.scss';\r\n\r\nconst ToggleButton = ({showNav, toggleNav}) => {\r\n    return (\r\n        <div className={styles.bars}>\r\n            {\r\n                 showNav ?\r\n                 <FontAwesome\r\n                     name=\"close\"\r\n                     onClick={toggleNav}\r\n                     style={{\r\n                         fontSize: '1.5em',\r\n                         padding: \"2px\",\r\n                         color: \"#f2f2f2\",\r\n                         transform: \"rotate(90deg)\",\r\n                         transition: \"0.5s\"\r\n                     }}\r\n                 />\r\n             :\r\n                 <FontAwesome\r\n                     name=\"bars\"\r\n                     onClick={toggleNav}\r\n                     style={{\r\n                         fontSize: '1.5em',\r\n                         padding: \"2px\",\r\n                         color: \"#f2f2f2\",\r\n                         transform: \"rotate(180deg)\",\r\n                         transition: \"0.5s\"\r\n                     }}\r\n                 />\r\n            }\r\n        </div>\r\n       \r\n    );\r\n};\r\n\r\nexport default ToggleButton;","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\r\nimport { useThemeUpdate, useTheme } from '../../contexts/ThemeContext';\r\n\r\nconst NightmodeButton = () => {\r\n    const darkTheme = useTheme();\r\n    const updateTheme = useThemeUpdate();\r\n\r\n    return (\r\n        <button \r\n            className={styles.nightmode_button} \r\n            onClick={updateTheme}\r\n        >\r\n            <FontAwesomeIcon \r\n                icon={darkTheme ? faSun : faMoon} \r\n                style={{fontSize:\"1.5rem\"}}\r\n            />\r\n            <div className={styles.nightmode_button_caption}> \r\n                {darkTheme ? `Day mode` : `Night mode`}\r\n            </div>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default NightmodeButton;","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../Navbar/NavBar';\r\nimport ToggleButton from './ToggleButton';\r\nimport NightmodeButton from './NightmodeButton';\r\nimport classNames from 'classnames';\r\nimport { useHeader } from '../../hooks/Header/useHeader';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\n\r\nconst Header = ( {isAuth} ) => {\r\n    const darkTheme = useTheme();\r\n    const {\r\n        showNav,\r\n        toggleNav\r\n    } = useHeader();\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            <div \r\n                className={classNames(styles.top, darkTheme && styles.nightMode)} \r\n                style={darkTheme ? {backgroundColor: \"#2F2F2F\"} : {}}\r\n            >\r\n                <div className={styles.logo}>\r\n                    Moodapp\r\n                </div>\r\n                <ToggleButton\r\n                    showNav={showNav}\r\n                    toggleNav={toggleNav}\r\n                />\r\n                <NightmodeButton/>\r\n            </div>\r\n            {showNav && <NavBar toggleNav={toggleNav} isAuth={isAuth}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps({user}) {\r\n    const { isAuth } = user;\r\n\r\n    return { isAuth }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Header);","import Header from './Header';\r\n\r\nexport default Header;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHeader = () => {\r\n    const [ showNav, setShowNav ] = useState(false);\r\n\r\n    const toggleNav = useCallback(() => {\r\n        setShowNav(!showNav)\r\n    }, [showNav]);\r\n\r\n    return {\r\n        showNav,\r\n        toggleNav\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from './../actions/user/asyncActions';\r\nimport Loading from '../components/Loading/loading';\r\n\r\nexport default function(ComposedClass, redirect) {\r\n    class AuthenticationCheck extends Component {\r\n        UNSAFE_componentWillMount() {\r\n            this.props.dispatch(auth());\r\n        }\r\n\r\n        UNSAFE_componentWillReceiveProps({user}) {\r\n            if (!user || !user.isAuth) {\r\n                if (redirect) {\r\n                    this.props.history.push('/login');\r\n                }\r\n            } else if (user.isAuth) {\r\n                if (redirect === false) {\r\n                    this.props.history.push('/dashboard')\r\n                }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const { user } = this.props;\r\n\r\n            if (!user || (user.isAuth === null && window.location.pathname !== '/login' ) ) {\r\n                return <Loading/>\r\n            }\r\n\r\n            return (\r\n                <ComposedClass \r\n                    {...this.props} \r\n                    user={this.props.user}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    function mapStateToProps(state) {\r\n        return {\r\n            user: state.user\r\n        }\r\n    }\r\n    \r\n    return connect(mapStateToProps)(AuthenticationCheck)\r\n};","import React, { Fragment } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { routerRoutes } from './constants/routerRoutes';\r\n\r\n// Components\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Dashboard from './components/Dashboard';\r\nimport AddLogPage from './components/AddLog';\r\nimport AllLogs from './components/Logs';\r\nimport LogView from './components/ViewLog';\r\nimport LogOut from './components/LogOut';\r\nimport Settings from './components/Settings';\r\nimport Stats from './components/stats';\r\nimport DeleteAccount from './components/DeleteAccount';\r\nimport Header from './components/Header';\r\n\r\nimport Auth from './hoc/auth';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Fragment>\r\n            <Header/>\r\n            <div className=\"content_wrapper\">\r\n                <Switch>\r\n                    <Route path={routerRoutes.home} exact component={Auth(Home, null)}></Route>\r\n                    <Route path={routerRoutes.login} exact component={Auth(Login, false)}></Route>\r\n                    <Route path={routerRoutes.register} exact component={Auth(Register, null)}></Route>\r\n                    <Route path={routerRoutes.dashboard} exact component={Auth(Dashboard, true)}></Route>\r\n                    <Route path={routerRoutes.addNewLog} exact component={Auth(AddLogPage,true)}></Route>\r\n                    <Route path={routerRoutes.allLogs} exact component={Auth(AllLogs, true)}></Route>\r\n                    <Route path={routerRoutes.viewLog} exact component={Auth(LogView, true)}></Route>\r\n                    <Route path={routerRoutes.logout} exact component={Auth(LogOut, true)}></Route>\r\n                    <Route path={routerRoutes.settings} exact component={Auth(Settings, true)}></Route>\r\n                    <Route path={routerRoutes.delete} exact component={Auth(DeleteAccount, true)}></Route>\r\n                    <Route path={routerRoutes.stats} exact component={Auth(Stats, true)}></Route>\r\n                </Switch>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducers from './reducers/index';\r\nimport Routes from './routes';\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, {}, composeEnhancers(\r\n    applyMiddleware(promiseMiddleware, ReduxThunk)\r\n));\r\n\r\n// const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ThemeProvider>\r\n            <BrowserRouter>\r\n                <Routes/>\r\n            </BrowserRouter>\r\n        </ThemeProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Forms_formWrapper__1mko5\",\"heading\":\"Forms_heading__3bPSY\",\"label\":\"Forms_label__3IUAR\",\"textInput\":\"Forms_textInput__1Cd0Y\",\"errorMessage\":\"Forms_errorMessage__1yEd9\",\"formFooter\":\"Forms_formFooter__2wssa\",\"textArea\":\"Forms_textArea__1N_0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greyText\":\"LastLogs_greyText__3a5zU\",\"logSection\":\"LastLogs_logSection__xiQoH\",\"logContainer\":\"LastLogs_logContainer__3RprA\",\"logItem\":\"LastLogs_logItem__3PJKP\",\"logContent\":\"LastLogs_logContent__3G__6\",\"ratingBox\":\"LastLogs_ratingBox__1Uzxw\",\"dark\":\"LastLogs_dark__JNMxU\",\"rightSection\":\"LastLogs_rightSection__3DeBQ\",\"date\":\"LastLogs_date__1uJZ_\",\"text\":\"LastLogs_text__2JJGq\",\"link\":\"LastLogs_link__1SUEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__26Q9C\",\"top\":\"Header_top__2ou-7\",\"nightMode\":\"Header_nightMode__1B3nS\",\"logo\":\"Header_logo__1RtJY\",\"bars\":\"Header_bars__3SokF\",\"rotateButton\":\"Header_rotateButton__n8exW\",\"nightmode_button\":\"Header_nightmode_button__1kTM1\",\"nightmode_button_caption\":\"Header_nightmode_button_caption__1yctb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingScreen\":\"loading_loadingScreen__2L2K8\",\"barContainer\":\"loading_barContainer__26aGf\",\"dark\":\"loading_dark__1Hh-2\",\"bar\":\"loading_bar__1UekV\",\"wave\":\"loading_wave__22obD\",\"delay1\":\"loading_delay1__2mzyY\",\"delay2\":\"loading_delay2__1snf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logbutton\":\"AddNewLog_logbutton__2SJDj\",\"available\":\"AddNewLog_available__1sdpe\",\"dark\":\"AddNewLog_dark__3vuWe\",\"unavailable\":\"AddNewLog_unavailable__3DnBc\",\"floating\":\"AddNewLog_floating__3yJDJ\",\"attentionBorder\":\"AddNewLog_attentionBorder__39PhW\",\"at-border\":\"AddNewLog_at-border__2fK4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingScreen\":\"loadingNetItem_loadingScreen__HbLoA\",\"barContainer\":\"loadingNetItem_barContainer__2ok7x\",\"bar\":\"loadingNetItem_bar__3H8tT\",\"wave\":\"loadingNetItem_wave__2soTu\",\"delay1\":\"loadingNetItem_delay1__3NO4S\",\"delay2\":\"loadingNetItem_delay2__30VLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"logItem_item__5AMYX\",\"rating_box\":\"logItem_rating_box__1z_sK\",\"icon\":\"logItem_icon__TcQOE\",\"top_line\":\"logItem_top_line__1ryt9\",\"date\":\"logItem_date__3Octs\",\"text\":\"logItem_text__2YZlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph_container\":\"GraphCanvas_graph_container__1Gq3r\",\"graph_canvas\":\"GraphCanvas_graph_canvas__1J30U\",\"graph_stroke\":\"GraphCanvas_graph_stroke__2b9l-\",\"dark\":\"GraphCanvas_dark__3rUm8\",\"y_axis_number\":\"GraphCanvas_y_axis_number__314_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__G_kXT\",\"bigLogo\":\"Home_bigLogo__1WHSZ\",\"dark\":\"Home_dark__7nOZB\",\"text\":\"Home_text__2zcfa\",\"buttonWrapper\":\"Home_buttonWrapper__5GvUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stats_container__3v-sK\",\"first_block\":\"stats_first_block__3ttFm\",\"average_block\":\"stats_average_block__3Kgzq\",\"average_box\":\"stats_average_box__3rvPv\",\"small_text_box\":\"stats_small_text_box__1kQCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"miniHeader\":\"Settings_miniHeader__3UEUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topSection\":\"AddLogPage_topSection__2xnCS\",\"moodBox\":\"AddLogPage_moodBox__1L5Kg\",\"inputLine\":\"AddLogPage_inputLine__336dB\",\"thumb\":\"AddLogPage_thumb__1YbFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__28POm\",\"appearTop\":\"NavBar_appearTop__AkjbT\",\"navItem\":\"NavBar_navItem__t4_d1\",\"nightmode\":\"NavBar_nightmode__tJMeS\",\"navBarMask\":\"NavBar_navBarMask__2MECL\",\"fadeIn\":\"NavBar_fadeIn__Ec-oC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__d3qRh\",\"btnPrimary\":\"Button_btnPrimary__1Qie6\",\"btnWhite\":\"Button_btnWhite___q7Zi\",\"btnDark\":\"Button_btnDark__19vqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BackButton_container__3efh3\",\"button\":\"BackButton_button__1DOSm\",\"text\":\"BackButton_text__92CkS\",\"dark\":\"BackButton_dark__Cwc1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"MoodStatus_statusContainer__3gMau\",\"statusBox\":\"MoodStatus_statusBox__2YpdJ\",\"dark\":\"MoodStatus_dark__20FL3\",\"statusText\":\"MoodStatus_statusText__oPBcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsIconWrapper\":\"SettingsItem_settingsIconWrapper__nOYv0\",\"settingsIcon\":\"SettingsItem_settingsIcon__RZNCi\",\"dark\":\"SettingsItem_dark__2zjck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutIconWrapper\":\"LogoutItem_logoutIconWrapper__bJbj0\",\"logoutIcon\":\"LogoutItem_logoutIcon__tuKmN\",\"dark\":\"LogoutItem_dark__2W_X6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"AllLogs_pageWrapper__1B4Jq\",\"bottomSection\":\"AllLogs_bottomSection__3rSVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"averageBox\":\"AverageBox_averageBox__1N-xw\",\"dark\":\"AverageBox_dark__YdJR5\"};"],"sourceRoot":""}