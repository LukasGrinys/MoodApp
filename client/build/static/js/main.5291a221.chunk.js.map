{"version":3,"sources":["components/Dashboard/Dashboard.module.scss","components/Logs/AllLogs.module.scss","components/Stats/AverageBox.module.scss","components/ErrorBox/ErrorBox.module.scss","components/ViewLog/logview.module.css","components/SuccessBox/SuccessBox.module.scss","components/Stats/icons/morning.svg","components/Stats/icons/afternoon.svg","components/Stats/icons/evening.svg","components/Stats/DaytimeGraph.module.scss","reducers/index.js","reducers/log_reducer.js","reducers/user_reducer.js","constants/routerRoutes.js","contexts/ThemeContext.js","components/Button/Button.js","components/Loading/loading.js","components/Home/Home.js","components/Forms/Heading.js","components/Forms/Wrapper.js","components/Forms/Label.js","components/Forms/Input.js","components/Forms/Footer.js","components/Forms/ErrorMessage.js","components/ErrorBox/ErrorBox.js","constants/initialFormValues.js","constants/formErrorMessages.js","actions/index.js","hooks/Login/useLoginForm.js","components/Login/Login.js","components/Back/BackButton.js","components/Register/Register.js","hooks/Register/useRegisterForm.js","components/Loading/loadingNetItem.js","constants/daytimes.js","util/dateHelpers.js","components/Dashboard/AddNewLog.js","components/Dashboard/LastLogs.js","components/Dashboard/MoodStatus.js","hooks/Dashboard/useMoodStatus.js","components/Dashboard/SettingsItem.js","components/Dashboard/LogoutItem.js","components/Dashboard/Dashboard.js","components/AddLog/AddLogPage.js","hooks/AddLog/useAddLog.js","components/LogItem/logItem.js","components/Logs/AllLogs.js","hooks/AllLogs/useAllLogs.js","components/ViewLog/LogView.js","components/LogOut/LogOut.js","components/SuccessBox/SuccessBox.js","components/Settings/AccountDetails.js","hooks/Settings/useEditAccount.js","components/Settings/ChangePassword.js","hooks/Settings/useChangePassword.js","components/Settings/Settings.js","components/Stats/GraphCanvas.js","util/statsHelpers.js","components/Stats/DaytimeGraph.js","components/Stats/AverageBox.js","components/Stats/Stats.js","components/DeleteAccount/DeleteAccount.js","hooks/DeleteAccount/useDeleteAccount.js","components/Navbar/items.js","components/Navbar/NavBar.js","components/Header/ToggleButton.js","components/Header/NightmodeButton.js","components/Header/Header.js","hooks/Header/useHeader.js","hoc/auth.js","routes.js","index.js","components/Forms/Forms.module.scss","components/Dashboard/LastLogs.module.scss","components/Header/Header.module.scss","components/Loading/loading.module.css","components/Dashboard/AddNewLog.module.scss","components/Loading/loadingNetItem.module.css","components/LogItem/logItem.module.css","components/Stats/GraphCanvas.module.scss","components/Home/Home.module.scss","components/Stats/stats.module.css","components/Settings/Settings.module.scss","components/AddLog/AddLogPage.module.scss","components/Button/Button.module.scss","components/Back/BackButton.module.scss","components/Dashboard/MoodStatus.module.scss","components/Navbar/NavBar.module.scss","components/Dashboard/SettingsItem.module.scss","components/Dashboard/LogoutItem.module.scss"],"names":["module","exports","rootReducer","combineReducers","logs","state","action","payload","type","canLog","lastLogs","allLogs","user","createUserSuccess","createUserError","isAuth","loginError","error","authError","id","email","firstName","lastName","routerRoutes","ThemeContext","React","createContext","UpdateThemeContext","useTheme","useContext","Button","color","handleClick","disabled","children","darkTheme","className","classNames","styles","button","btnDark","btnPrimary","btnWhite","getButtonColorClass","onClick","Loading","loadingScreen","barContainer","dark","bar","delay1","join","delay2","connect","undefined","wrapper","animateIn","animateOnce","bigLogo","delay","offset","text","buttonWrapper","to","Heading","heading","Wrapper","formWrapper","Label","label","Input","name","value","controlEvents","placeholder","handleChange","handleBlur","textInput","onChange","onBlur","textArea","defaultProps","Footer","formFooter","ErrorMessage","errorMessage","ErrorBox","container","initialFormValues","formErrorMessages","cookie","Cookie","createUser","a","async","dispatch","axios","post","data","success","loginUser","editUserDetails","userId","details","body","isEditingUser","editUserSuccess","editUserError","console","changePassword","currentPassword","newPassword","endpoint","oldPassword","clearChangePassword","isChangingPassword","changePasswordError","changePasswordSuccess","canUserLog","currentDate","currentTiming","date","timing","getLogs","start","limit","currentLogs","isFetchingAllLogs","fetchAllLogsError","get","noLogsLeft","length","clearLogs","postLog","rating","isPostingLog","postLogSuccess","postLogError","Login","useState","isLoggingIn","setIsLoggingIn","useDispatch","history","useHistory","useSelector","useEffect","push","initialValues","password","validationSchema","yup","required","handleLogin","useCallback","values","useFormik","onSubmit","errors","isValid","handleSubmit","touched","useLoginForm","BackButton","window","back","Register","isSigningUp","setIsSigningUp","handleSignup","confirmPassword","min","oneOf","useRegisterForm","LoadingNetItem","daytimes","getDate","Date","month","getMonth","day","getFullYear","getDaytime","hour","getHours","AddNewLog","this","props","timeOfNextLog","logbutton","available","attentionBorder","floating","unavailable","returnTimeRemaining","Component","LastLogs","isFetchingLogs","parentStyles","gridItem","gridItemHeader","logSection","gridItemContent","logContainer","slice","map","log","index","key","logItem","logContent","ratingBox","rightSection","link","greyText","MoodStatus","useMemo","Array","isArray","total","count","forEach","parseInt","average","Math","round","Number","isInteger","String","ratingText","parsedRating","useMoodStatus","parentClasses","statusContainer","statusBox","statusText","SettingsItem","shrink","flexCenter","settingsIconWrapper","settingsIcon","LogoutItem","logoutIconWrapper","logoutIcon","Dashboard","isSignedIn","url","logFetchError","getLastLogs","grid","gridTop","AddLogPage","message","setMessage","moodRating","setMoodRating","setIsPostingLog","handleRangeInput","event","target","handleMessageInput","handleAddLog","returnMoodText","useAddLog","topSection","moodBox","inputLine","thumb","style","max","LogItem","item","top_line","rating_box","icon","AllLogs","skipLogs","setSkipLogs","loadMoreLogs","prevState","useAllLogs","pageWrapper","i","bottomSection","LogView","logData","isFetchingLog","getLogError","logId","match","params","Boolean","Object","keys","LogOut","request","then","response","status","remove","logOut","SuccessBox","AccountDetails","isSubmitting","setIsSubmitting","enableReinitialize","useEditAccount","miniHeader","ChangePassword","useChangePassword","Settings","ReturnGraph","points","graph_stroke","GraphCanvas","width","setWidth","graphRef","useRef","handleResize","newWidth","current","offsetWidth","addEventListener","removeEventListener","graphData","mapLogsToGraphData","firstDate","lastDate","graph_container","graph_canvas","ref","y_axis_number","transform","height","fill","stroke","strokeWidth","list","pointsString","ratingYpos","floor","returnPolylinePoints","returnBullet","left","daytime_bullet","bottom","daytime_bullet_text","DaytimeGraph","morningSum","morningCount","afternoonSum","afternoonCount","eveningSum","eveningCount","morningAverage","afternoonAverage","eveningAverage","mapLogsToDaytimeStats","daytime_container","daytime_canvas","overflow","y_axis_number_daytime","top","daytime_bottom_line","daytime_time","src","morningIcon","padding","alt","afternoonIcon","eveningIcon","AverageBox","averageBox","Stats","sevenDayAverageObject","dates","sum","indexOf","firstDay","lastDay","lastSevenDaysAverage","first_block","average_block","countAverage","small_text_box","DeleteAccount","isDeleting","deleteAccountStatus","setDeleteAccountStatus","prevStatus","useDeleteAccount","items","iconName","path","NavBar","toggleNav","itemElement","navItem","navBar","nightMode","renderItems","navBarMask","ToggleButton","showNav","bars","fontSize","transition","NightmodeButton","updateTheme","nightmode_button","faSun","faMoon","nightmode_button_caption","setShowNav","useHeader","header","backgroundColor","logo","ComposedClass","redirect","AuthenticationCheck","Routes","exact","component","Auth","Home","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","promiseMiddleware","ReduxThunk","ReactDOM","render","nightmode","localStorage","getItem","retrieveData","document","background","Provider","prevTheme","setItem","getElementById"],"mappings":"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","file":"static/js/main.5291a221.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Dashboard_grid__dGwvL\",\"gridTop\":\"Dashboard_gridTop__1PQ_w\",\"gridItem\":\"Dashboard_gridItem__36m9l\",\"gridItemHeader\":\"Dashboard_gridItemHeader__3nZQF\",\"gridItemContent\":\"Dashboard_gridItemContent__TiRLi\",\"shrink\":\"Dashboard_shrink__3hUSG\",\"flexCenter\":\"Dashboard_flexCenter__1d6j1\",\"settingsIcon\":\"Dashboard_settingsIcon__Vvu7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"AllLogs_pageWrapper__PpTRR\",\"bottomSection\":\"AllLogs_bottomSection__1Oslr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"averageBox\":\"AverageBox_averageBox__10pGj\",\"dark\":\"AverageBox_dark__1lKIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ErrorBox_container__3_4Pb\",\"fadeIn\":\"ErrorBox_fadeIn__3Iy4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"logview_pageWrapper__1BiW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuccessBox_container__1Jqdh\",\"fadeIn\":\"SuccessBox_fadeIn__3bH0i\"};","module.exports = __webpack_public_path__ + \"static/media/morning.32026445.svg\";","module.exports = __webpack_public_path__ + \"static/media/afternoon.1bf5e1d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/evening.30a34177.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"daytime_container\":\"DaytimeGraph_daytime_container__nYl1v\",\"daytime_canvas\":\"DaytimeGraph_daytime_canvas__41a7_\",\"daytime_bullet\":\"DaytimeGraph_daytime_bullet__JkNHw\",\"dark\":\"DaytimeGraph_dark__3Bepl\",\"daytime_bullet_text\":\"DaytimeGraph_daytime_bullet_text__56TbX\",\"y_axis_number_daytime\":\"DaytimeGraph_y_axis_number_daytime__2BEm6\",\"daytime_bottom_line\":\"DaytimeGraph_daytime_bottom_line__2zQhX\",\"daytime_time\":\"DaytimeGraph_daytime_time__UgUNy\"};","import { combineReducers } from 'redux';\r\nimport logs from './log_reducer';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    logs,\r\n    user\r\n});\r\n\r\nexport default rootReducer;","export default function(state={}, action) {\r\n    const { payload, type } = action;\r\n    /* TODO : Create initial state object */\r\n    switch(type) {\r\n        case 'CAN_LOG' :\r\n            return {\r\n                ...state, \r\n                canLog: payload\r\n            };\r\n        case 'GET_LAST_LOGS' : \r\n            return {\r\n                ...state, \r\n                ...payload\r\n            };\r\n        case 'GET_LOG' :\r\n            return {\r\n                ...state, \r\n                ...payload\r\n            }\r\n        case 'GET_LOGS' :\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        case 'POST_LOG' :\r\n            return {\r\n                ...state, \r\n                ...payload\r\n            }\r\n        case 'CLEAR_LOGS' :\r\n            return {\r\n                ...state,\r\n                lastLogs: [],\r\n                allLogs: []\r\n            }\r\n        case 'CLEAR_LAST_LOGS' :\r\n            return {...state, lastLogs: action.lastLogs}\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function(state={}, {type, payload}) {\r\n    switch(type) {\r\n        case 'CREATE_USER':\r\n            return {\r\n                ...state, \r\n                createUserSuccess: payload.createUserSuccess,\r\n                createUserError: payload.createUserError\r\n            }\r\n        case 'LOGIN_USER' :\r\n            return {\r\n                ...state, \r\n                isAuth: payload.isAuth,\r\n                loginError: payload.error\r\n             }\r\n        case 'USER_AUTH' :\r\n            if (payload.error) {\r\n                return {\r\n                    ...state, \r\n                    authError: payload.error,\r\n                    isAuth: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                isAuth: true,\r\n                id: payload.id || null,\r\n                email: payload.email || null, \r\n                firstName: payload.firstName || '',\r\n                lastName: payload.lastName || ''\r\n            }\r\n        case 'CLEAR_USER' :\r\n            return {\r\n                ...state, \r\n                authError: null,\r\n                isAuth: false,\r\n                id: null,\r\n                email: null, \r\n                firstName: '',\r\n                lastName: ''\r\n            }\r\n        case 'EDIT_USER':\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        case 'CHANGE_PASSWORD' :\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const routerRoutes = {\r\n    home: '/',\r\n    login: '/login',\r\n    logout: '/logout',\r\n    dashboard: '/dashboard',\r\n    addNewLog: '/addlog',\r\n    register: '/register',\r\n    settings: '/settings',\r\n    allLogs: '/logs',\r\n    viewLog: '/logs/:id',\r\n    delete: '/delete',\r\n    stats: '/stats'\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\n\r\n// Creating contexts\r\nconst ThemeContext = React.createContext();\r\nconst UpdateThemeContext = React.createContext();\r\n\r\n// Custom hooks\r\nexport function useTheme() {\r\n    return useContext(ThemeContext);\r\n};\r\n\r\nexport function useThemeUpdate() {\r\n    return useContext(UpdateThemeContext);\r\n};\r\n\r\nexport function ThemeProvider ({children}) {\r\n    const retrieveData = () => {\r\n        let nightmode = localStorage.getItem('nightmode');\r\n        if (nightmode !== undefined) {\r\n            if (nightmode === 'true') {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const [ darkTheme, updateTheme ] = useState(retrieveData());\r\n\r\n    useEffect( () => {\r\n        if (darkTheme === true) {\r\n            document.body.style.background = \"rgb(51, 51, 51)\";\r\n            document.body.style.color = \"rgb(242,242,242\";\r\n        } else {\r\n            document.body.style.background = \"#FFFFFF\";\r\n            document.body.style.color = \"#000000\";\r\n        }\r\n    }, [darkTheme]);\r\n\r\n    const toggleTheme = () => {\r\n        updateTheme( (prevTheme) => { \r\n            localStorage.setItem('nightmode', !prevTheme);\r\n            return !prevTheme \r\n        });\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={darkTheme}>\r\n            <UpdateThemeContext.Provider value={toggleTheme}>\r\n                {children}\r\n            </UpdateThemeContext.Provider>\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from './Button.module.scss';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\n\r\n/* \r\n    Possible colours:\r\n    'primary'\r\n    'white'\r\n*/\r\n\r\nconst Button = ({\r\n    color = 'primary', \r\n    handleClick = () => {},\r\n    disabled,\r\n    children\r\n}) => {\r\n    const darkTheme = useTheme();\r\n\r\n    const getButtonColorClass = (type) => {\r\n        switch (type) {\r\n            case 'primary':\r\n                return styles.btnPrimary;\r\n            case 'white' :\r\n                return styles.btnWhite;\r\n            default :\r\n                return null;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <button \r\n            className={classNames(\r\n                styles.button,\r\n                darkTheme && styles.btnDark,\r\n                getButtonColorClass(color)\r\n            )}\r\n            onClick={handleClick}\r\n            disabled={disabled}\r\n            type=\"button\"\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport styles from './loading.module.css';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames'\r\n\r\nconst Loading = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={styles.loadingScreen}>\r\n            <div>\r\n                Loading    \r\n            </div>\r\n            <br/>\r\n            <div className={classNames(\r\n                styles.barContainer,\r\n                darkTheme && styles.dark\r\n            )}>\r\n                <div className={styles.bar}></div>\r\n                <div className={[styles.bar, styles.delay1].join(' ')}></div>\r\n                <div className={[styles.bar, styles.delay2].join(' ')}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport \"animate.css/animate.min.css\";\r\nimport classNames from 'classnames';\r\nimport styles from './Home.module.scss';\r\nimport Button from '../Button/Button';\r\nimport Loading from '../Loading/loading';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\n\r\nconst Home = ({isAuth, firstName}) => {    \r\n    const darkTheme = useTheme();\r\n\r\n    if (isAuth === undefined) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return  (\r\n    <div className={styles.wrapper}>\r\n        <ScrollAnimation animateIn=\"fadeInDown\" animateOnce={true}>\r\n            <div className={classNames(styles.bigLogo, darkTheme && styles.dark)}>\r\n                MoodApp\r\n            </div>\r\n        </ScrollAnimation>\r\n        <ScrollAnimation animateIn=\"fadeInDown\" delay={1000} offset={75} animateOnce={true}>\r\n            {   isAuth ? (\r\n                    <div className={styles.text}>\r\n                        Hello <span>{firstName}</span>  \r\n                    </div>\r\n                ) : ( <div className={styles.text}>Your daily mood tracker</div> )\r\n            }\r\n        </ScrollAnimation>\r\n        <ScrollAnimation animateIn=\"fadeInDown\" delay={2000} offset={75} animateOnce={true}>\r\n            <div className={styles.buttonWrapper}>\r\n                {\r\n                    isAuth ? (\r\n                        <Fragment>\r\n                            <Link to=\"/dashboard\">\r\n                                <Button color={'primary'}>\r\n                                    Dashboard\r\n                                </Button>\r\n                            </Link>\r\n                            <Link to=\"/logout\">\r\n                                <Button color={'white'}>\r\n                                    Log out\r\n                                </Button>\r\n                            </Link>\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Link to=\"/login\">\r\n                                <Button color={'primary'}>Log in</Button>\r\n                            </Link>\r\n                            <Link to=\"/register\">\r\n                                <Button color={'white'}>Register</Button>\r\n                            </Link>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        </ScrollAnimation> \r\n    </div>)\r\n};\r\n\r\nconst mapStateToProps = ({user}) => {\r\n    const { isAuth, firstName } = user;\r\n\r\n    return {\r\n        isAuth,\r\n        firstName\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home);","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Heading = ({children}) => {\r\n    return <h1 className={styles.heading}>{children}</h1>;\r\n};\r\n\r\nexport default Heading;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Wrapper = ({children}) => {\r\n    return <div className={styles.formWrapper}>{children}</div>\r\n};\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Label = ({children}) => {\r\n    return <span className={styles.label}>{children}</span>\r\n};\r\n\r\nexport default Label;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst Input = ({type, name, value, controlEvents, placeholder}) => {\r\n    const { handleChange, handleBlur } = controlEvents;\r\n\r\n    if (type === 'text' || type === 'email' || type === 'password') {\r\n        return (\r\n            <input \r\n                type={type} \r\n                name={name} \r\n                value={value}\r\n                className={styles.textInput}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (type === 'textarea') {\r\n        return (\r\n            <textarea \r\n                name={name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                className={styles.textArea}\r\n            />\r\n        )\r\n    }\r\n\r\n};\r\n\r\nInput.defaultProps = {\r\n    type : 'text',\r\n    name : '',\r\n    value : '',\r\n    controlEvents : {\r\n        handleBlur : () => {},\r\n        handleChange : () => {}\r\n    },\r\n    placeholder: ''\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport styles from './Forms.module.scss'\r\n\r\nconst Footer = ({children}) => {\r\n    return (\r\n        <div className={styles.formFooter}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport styles from './Forms.module.scss';\r\n\r\nconst ErrorMessage = ({children}) => {\r\n    return (\r\n        <div className={styles.errorMessage}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\nimport styles from './ErrorBox.module.scss';\r\n\r\nconst ErrorBox = ({children}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorBox;","export const initialFormValues = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    confirmPassword: '',\r\n    currentPassword: ''\r\n}","export const formErrorMessages = {\r\n    required : 'Required field',\r\n    email: 'Enter a proper e-mail address',\r\n    passwordMatch: 'Passwords do not match',\r\n    min: 'Minimum count of symbols is '\r\n}","import axios from 'axios';\r\nimport Cookie from 'universal-cookie';\r\nconst cookie = new Cookie();\r\n\r\nexport const createUser = async (user) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'CREATE_USER',\r\n            payload: {\r\n                createUserSuccess: null,\r\n                createUserError: null\r\n            }\r\n        });\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/users', user)\r\n        \r\n            if (!data) {\r\n                dispatch({\r\n                    type: 'CREATE_USER',\r\n                    payload: {\r\n                        createUserSuccess: false,\r\n                        createUserError: 'Unknown error'\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const { success, error } = data;\r\n\r\n            if (error || !success) {\r\n                dispatch({\r\n                    type: 'CREATE_USER',\r\n                    payload: {\r\n                        createUserSuccess: false,\r\n                        createUserError: error || 'Could not create user'\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n            \r\n            if (success) {\r\n                dispatch({\r\n                    type: 'CREATE_USER',\r\n                    payload: {\r\n                        createUserSuccess: true,\r\n                        createUserError: null\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'CREATE_USER',\r\n                payload: {\r\n                    createUserSuccess: false,\r\n                    createUserError: error || 'Could not create user'\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = async (payload) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: 'LOGIN_USER',\r\n                payload: {\r\n                    isAuth: false,\r\n                    error: null\r\n                }\r\n            });\r\n\r\n            const { data } = await axios.post('/api/login', payload);\r\n\r\n            const { isAuth, error, id, email } = data;\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: 'LOGIN_USER',\r\n                    payload: {\r\n                        isAuth: false,\r\n                        error\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (isAuth) {\r\n                dispatch({\r\n                    type: 'LOGIN_USER',\r\n                    payload: {\r\n                        isAuth,\r\n                        error: null,\r\n                        id,\r\n                        email\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'LOGIN_USER',\r\n                payload: {\r\n                    isAuth: false,\r\n                    error\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function logOut() {\r\n    const request = axios.get('/api/logout');\r\n\r\n    return (dispatch) => {\r\n        request.then( (response) => {\r\n            if (response.status === 200) {\r\n                cookie.remove('auth');\r\n                \r\n                dispatch({\r\n                    type: 'CLEAR_USER',\r\n                    payload: {}\r\n                });\r\n                \r\n                clearLogs();\r\n                clearLastLogs();\r\n\r\n                dispatch({\r\n                    type: 'CAN_LOG',\r\n                    payload: null\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get('/api/auth')\r\n    .then( ({data}) => data);\r\n\r\n    return {\r\n        type: 'USER_AUTH',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport const editUserDetails = async ({userId, details}) => {\r\n    return async dispatch => {\r\n        const endpoint = '/api/editAccount';\r\n        const body = {\r\n            id : userId,\r\n            ...details\r\n        }\r\n\r\n        dispatch({\r\n            type: 'EDIT_USER',\r\n            payload: {\r\n                isEditingUser: true,\r\n                editUserSuccess: null,\r\n                editUserError: null\r\n            }\r\n        });\r\n\r\n        try {\r\n            const { error } = await axios.post(endpoint, body);\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: 'EDIT_USER',\r\n                    payload: {\r\n                        isEditingUser: false,\r\n                        editUserSuccess: false,\r\n                        editUserError: error\r\n                    }\r\n                });\r\n\r\n                return\r\n            }\r\n\r\n            dispatch({\r\n                type: 'EDIT_USER',\r\n                payload: {\r\n                    isEditingUser: false,\r\n                    editUserSuccess: true,\r\n                    editUserError: null\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            dispatch({\r\n                type: 'EDIT_USER',\r\n                payload: {\r\n                    isEditingUser: false,\r\n                    editUserSuccess: false,\r\n                    editUserError: error\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearEditUser = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'EDIT_USER',\r\n            payload: {\r\n                isEditingUser: false,\r\n                editUserSuccess: null,\r\n                editUserError: null\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// CHANGE PASSWORD\r\n\r\nexport const changePassword = async ({\r\n    userId,\r\n    currentPassword,\r\n    newPassword\r\n}) => {\r\n    return async dispatch => {\r\n        if (!userId || !currentPassword || !newPassword) {\r\n            return;\r\n        }\r\n\r\n        const endpoint = '/api/changePassword';\r\n        const body = {\r\n            id : userId,\r\n            oldPassword : currentPassword,\r\n            newPassword\r\n        }\r\n\r\n        await clearChangePassword();\r\n\r\n        try {\r\n            const { error } = await axios.post(endpoint, body);\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: 'CHANGE_PASSWORD',\r\n                    payload: {\r\n                        isChangingPassword : false,\r\n                        changePasswordError : error,\r\n                        changePasswordSuccess : false\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            dispatch({\r\n                type: 'CHANGE_PASSWORD',\r\n                payload: {\r\n                    isChangingPassword : false,\r\n                    changePasswordError : null,\r\n                    changePasswordSuccess : true\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            dispatch({\r\n                type: 'CHANGE_PASSWORD',\r\n                payload: {\r\n                    isChangingPassword : false,\r\n                    changePasswordError : error,\r\n                    changePasswordSuccess : false\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearChangePassword = async () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'CHANGE_PASSWORD',\r\n            payload: {\r\n                isChangingPassword: false,\r\n                changePasswordError: null,\r\n                changePasswordSuccess: null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearUserData = async () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'CLEAR_USER',\r\n            payload: {}\r\n        })\r\n    }\r\n}\r\n\r\n// LOGS //\r\nexport const canUserLog = async (currentDate, currentTiming, user) => {\r\n    const body = {\r\n        userId: user,\r\n        date: currentDate,\r\n        timing: currentTiming\r\n    };\r\n\r\n    return async dispatch => {\r\n        const { data } = await axios.post('/api/canLog', body);\r\n        \r\n        if (data && data.data) {\r\n            dispatch({\r\n                type: 'CAN_LOG',\r\n                payload: data.data.canLog\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        dispatch({\r\n            type: 'CAN_LOG',\r\n            payload: false\r\n        })\r\n    }\r\n}\r\n\r\nexport const getLastLogs = async ({\r\n    userId,\r\n    limit = 9\r\n}) => {\r\n    const url = `/api/getLogs?id=${userId}&limit=${limit}`;\r\n\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'GET_LAST_LOGS',\r\n            payload: {\r\n                lastLogs: [],\r\n                logFetchError: null,\r\n                isFetchingLogs: true\r\n            }\r\n        });\r\n\r\n        const { data } = await axios.get(url);\r\n\r\n        const { success, error } = data;\r\n\r\n        if (error) {\r\n            dispatch({\r\n                type: 'GET_LAST_LOGS',\r\n                payload: {\r\n                    lastLogs: [],\r\n                    logFetchError: error,\r\n                    isFetchingLogs: false\r\n                }\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        if (success && data.data) {\r\n            dispatch({\r\n                type: 'GET_LAST_LOGS',\r\n                payload: {\r\n                    lastLogs: data.data,\r\n                    logFetchError: null,\r\n                    isFetchingLogs: false\r\n                }\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        dispatch({\r\n            type: 'GET_LAST_LOGS',\r\n            payload: {\r\n                lastLogs: [],\r\n                logFetchError: null,\r\n                isFetchingLogs: false\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function clearLastLogs() {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'GET_LAST_LOGS',\r\n            payload: {\r\n                lastLogs: [],\r\n                logFetchError: null,\r\n                isFetchingLogs: true\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getLog = async logId => {\r\n    return async dispatch => {\r\n        const endpoint = `/api/getLog?id=${logId}`;\r\n\r\n        dispatch({\r\n            type: 'GET_LOG',\r\n            payload: {\r\n                isFetchingLog : true,\r\n                getLogError : null,\r\n                logData : {}\r\n            }\r\n        });\r\n\r\n        try {\r\n            const { data, error } = await axios.get(endpoint);\r\n            \r\n            if (error) {\r\n                dispatch({\r\n                    type: 'GET_LOG',\r\n                    payload: {\r\n                        isFetchingLog : false,\r\n                        getLogError : error,\r\n                        logData : {}\r\n                    }\r\n                });\r\n\r\n                return\r\n            }\r\n            \r\n            dispatch({\r\n                type: 'GET_LOG',\r\n                payload: {\r\n                    isFetchingLog : false,\r\n                    getLogError : false,\r\n                    logData : (data && data.data) ? data.data : {}\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            dispatch({\r\n                type: 'GET_LOG',\r\n                payload: {\r\n                    isFetchingLog : false,\r\n                    getLogError : error,\r\n                    logData : {}\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearLog = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'GET_LOG',\r\n            payload: {\r\n                isFetchingLog : false,\r\n                getLogError : null,\r\n                logData : {}\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getLogs = async ({userId, start, limit, currentLogs}) => {\r\n    return async dispatch => {\r\n        const endpoint = `/api/getLogs?id=${userId}${start ? `&skip=${start}` : ''}&limit=${limit}`;\r\n\r\n        dispatch({\r\n            type: 'GET_LOGS',\r\n            payload: {\r\n                isFetchingAllLogs: true,\r\n                fetchAllLogsError: null\r\n            }\r\n        });\r\n\r\n        try {\r\n            const { data, error } = await axios.get(endpoint);\r\n\r\n            if (error) {\r\n                dispatch({\r\n                    type: 'GET_LOGS',\r\n                    payload: {\r\n                        isFetchingAllLogs: false,\r\n                        fetchAllLogsError: error\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (data && data.data) {\r\n                dispatch({\r\n                    type: 'GET_LOGS',\r\n                    payload: {\r\n                        isFetchingAllLogs: false,\r\n                        fetchAllLogsError: false,\r\n                        allLogs: currentLogs ? [...currentLogs, ...data.data] : data.data,\r\n                        noLogsLeft: !data.data.length ? true : false\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'GET_LOGS',\r\n                payload: {\r\n                    isFetchingAllLogs: false,\r\n                    fetchAllLogsError: error\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const clearLogs = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'GET_LOGS',\r\n            payload: {\r\n                isFetchingAllLogs: false,\r\n                fetchAllLogsError: null,\r\n                allLogs: [],\r\n                noLogsLeft: false\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const postLog = async ({\r\n    userId,\r\n    date,\r\n    timing,\r\n    rating,\r\n    text\r\n}) => {\r\n    const body = {\r\n        userId,\r\n        date,\r\n        timing,\r\n        rating,\r\n        text\r\n    }\r\n\r\n    return async dispatch => {\r\n        try {\r\n            dispatch( {\r\n                type: 'POST_LOG',\r\n                payload: {\r\n                    isPostingLog : true,\r\n                    postLogSuccess : null,\r\n                    postLogError : null\r\n                }\r\n            });\r\n    \r\n            const { data } = await axios.post('/api/postLog', body);\r\n            const { error , success } = data;\r\n\r\n            if (error || !success) {\r\n                dispatch({\r\n                    type: 'POST_LOG',\r\n                    payload: {\r\n                        isPostingLog : false,\r\n                        postLogSuccess : false,\r\n                        postLogError : error || 'Unknown error occured'\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            dispatch({\r\n                type: 'POST_LOG',\r\n                payload: {\r\n                    isPostingLog : false,\r\n                    postLogSuccess : true,\r\n                    postLogError : null,\r\n                    canLog : false\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            dispatch({\r\n                type: 'POST_LOG',\r\n                payload: {\r\n                    isPostingLog : false,\r\n                    postLogSuccess : false,\r\n                    postLogError : error\r\n                }\r\n            })\r\n        }\r\n    }  \r\n}\r\n\r\nexport function clearLogPost() {\r\n    return {\r\n        type: 'POST_LOG',\r\n        payload: {\r\n            isPostingLog : false,\r\n            postLogSuccess : null,\r\n            postLogError : null\r\n        }\r\n    }\r\n}","import { useState, useCallback, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../../actions';\r\n\r\nexport const useLoginForm = () => {\r\n    const [ isLoggingIn, setIsLoggingIn ] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const isAuth = useSelector( ({user}) => user.isAuth);\r\n    const loginError = useSelector( ({user}) => user.loginError);\r\n\r\n    useEffect( () => {\r\n        if (isAuth) {\r\n            history.push(routerRoutes.dashboard);\r\n        }\r\n    }, [isAuth, history]);\r\n\r\n    const initialValues = {\r\n        email: initialFormValues.email,\r\n        password: initialFormValues.password\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .email(formErrorMessages.email),\r\n        password: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n    });\r\n\r\n    const handleLogin = useCallback( async (values) => {\r\n        setIsLoggingIn(true);\r\n        await dispatch(loginUser(values))\r\n        setIsLoggingIn(false);\r\n    }, [dispatch])\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleLogin\r\n    });\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isLoggingIn,\r\n        handleSubmit,\r\n        loginError\r\n    }\r\n}","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport { Heading, Wrapper, Label, Input, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport { useLoginForm } from '../../hooks/Login/useLoginForm';\r\n\r\nconst Login = () => {\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        controlEvents,\r\n        touched,\r\n        isLoggingIn,\r\n        handleSubmit,\r\n        loginError\r\n    } = useLoginForm();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Heading>Log In</Heading>\r\n            <form>\r\n                <Label>Enter your email: </Label>\r\n                <Input \r\n                    type=\"email\" \r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {errors.email && touched.email && (\r\n                    <ErrorMessage>\r\n                        {errors.email}\r\n                    </ErrorMessage>\r\n                )}\r\n                <Label>Enter your password:</Label>\r\n                <Input \r\n                    type=\"password\" \r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {errors.password && touched.password && (\r\n                    <ErrorMessage>\r\n                        {errors.password}\r\n                    </ErrorMessage>\r\n                )}\r\n                <Footer>\r\n                    <Button \r\n                        color={\"primary\"}\r\n                        disabled={!isValid || isLoggingIn}\r\n                        handleClick={handleSubmit}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </Footer>\r\n            </form>\r\n            {  loginError && (\r\n                <ErrorBox>\r\n                    Error: {loginError}\r\n                </ErrorBox>\r\n            )}\r\n        </Wrapper>\r\n            \r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport styles from './BackButton.module.scss';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\n\r\nconst BackButton = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div \r\n                className={classNames(\r\n                    styles.button,\r\n                    darkTheme && styles.dark\r\n                )} \r\n                onClick={ () => {window.history.back()}}\r\n            >\r\n                <FontAwesome name=\"arrow-left\"/>\r\n                <div className={styles.text}>\r\n                    Go back\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default BackButton;","import React, { Fragment } from 'react';\r\nimport { Heading, Wrapper, Label, Input, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport Button from '../Button/Button';\r\nimport BackButton from '../Back/BackButton';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport { useRegisterForm } from '../../hooks/Register/useRegisterForm';\r\n\r\nconst Register = () => {\r\n    const {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isSigningUp,\r\n        handleSubmit,\r\n        createUserError\r\n    } = useRegisterForm();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Wrapper>   \r\n                <Heading>Sign Up</Heading>\r\n                <form>\r\n                    <Label>Enter your first name</Label>\r\n                    <Input \r\n                        type=\"text\" \r\n                        name=\"firstName\"\r\n                        value={values.firstName}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.firstName && touched.firstName && (\r\n                        <ErrorMessage>\r\n                            {errors.firstName}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Label>Enter your last name</Label>\r\n                    <Input \r\n                        type=\"text\" \r\n                        name=\"lastName\"\r\n                        value={values.lastName}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.lastName && touched.lastName && (\r\n                        <ErrorMessage>\r\n                            {errors.lastName}\r\n                        </ErrorMessage>\r\n                    )}\r\n                    \r\n                    <Label>Enter your email:</Label>\r\n                    <Input \r\n                        type=\"email\" \r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                        <ErrorMessage>\r\n                            {errors.email}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Label>Enter your password:</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.password && touched.password && (\r\n                        <ErrorMessage>\r\n                            {errors.password}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Label>Confirm your password:</Label>\r\n                    <Input \r\n                        type=\"password\" \r\n                        name=\"confirmPassword\"\r\n                        value={values.confirmPassword}\r\n                        controlEvents={controlEvents}\r\n                    />\r\n                    {errors.confirmPassword && touched.confirmPassword && (\r\n                        <ErrorMessage>\r\n                            {errors.confirmPassword}\r\n                        </ErrorMessage>\r\n                    )}\r\n\r\n                    <Footer>\r\n                        <Button \r\n                            color={\"primary\"}\r\n                            disabled={!isValid || isSigningUp}\r\n                            handleClick={handleSubmit}\r\n                        >\r\n                            Sign up\r\n                        </Button>\r\n                    </Footer>\r\n                </form>\r\n                {  createUserError && (\r\n                    <ErrorBox>\r\n                        Error: {createUserError}\r\n                    </ErrorBox>\r\n                )}\r\n            </Wrapper>\r\n            <BackButton/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Register;","import { useCallback, useState, useEffect } from 'react';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { useFormik } from 'formik';\r\nimport { createUser, loginUser } from '../../actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useRegisterForm = () => {\r\n    const [isSigningUp, setIsSigningUp] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const createUserError = useSelector( ({user}) => user.createUserError);\r\n    const createUserSuccess = useSelector( ({user}) => user.createUserSuccess);\r\n\r\n    const handleSignup = useCallback( async values => {\r\n        const payload = {\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            email: values.email,\r\n            password: values.password\r\n        };\r\n\r\n        setIsSigningUp(true);\r\n        await dispatch(createUser(payload));\r\n        setIsSigningUp(false);\r\n    }, [dispatch]);\r\n\r\n    const initialValues = {\r\n        firstName: initialFormValues.firstName,\r\n        lastName: initialFormValues.lastName,\r\n        email: initialFormValues.email,\r\n        password: initialFormValues.password,\r\n        confirmPassword: initialFormValues.confirmPassword\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        firstName: yup.string().required(formErrorMessages.required),\r\n        lastName: yup.string().required(formErrorMessages.required),\r\n        email: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .email(formErrorMessages.email),\r\n        password: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .min(6, `${formErrorMessages.min} 6`),\r\n        confirmPassword: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n            .oneOf([yup.ref('password'), null], formErrorMessages.passwordMatch)\r\n    });\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleSignup\r\n    });\r\n\r\n    useEffect( () => {\r\n        if (createUserSuccess) {\r\n            const { email, password } = values;\r\n\r\n            dispatch(loginUser({\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }, [values, createUserSuccess, dispatch])\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isSigningUp,\r\n        handleSubmit,\r\n        createUserError\r\n    }\r\n}","import React from 'react';\r\nimport styles from './loadingNetItem.module.css';\r\n\r\nconst LoadingNetItem = () => {\r\n    return (\r\n        <div className={styles.loadingScreen}>\r\n            <div className={styles.barContainer}>\r\n                <div className={styles.bar}></div>\r\n                <div className={[styles.bar, styles.delay1].join(' ')}></div>\r\n                <div className={[styles.bar, styles.delay2].join(' ')}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingNetItem;","export const daytimes = {\r\n    morning: 'Morning',\r\n    afternoon: 'Afternoon',\r\n    evening: 'Evening',\r\n    night: 'Night'\r\n}","import { daytimes } from '../constants/daytimes';\r\n\r\nexport const getDate = () => {\r\n    const date = new Date();\r\n    \r\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`;  \r\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n    const fullDate = [date.getFullYear(), month, day].join('-');\r\n\r\n    return fullDate;\r\n}\r\n\r\nexport const getDaytime = () => {\r\n    const date = new Date();\r\n\r\n    const hour = date.getHours();\r\n\r\n    if (hour >= 7 && hour <= 12) {\r\n        return daytimes.morning\r\n    }\r\n\r\n    if (hour > 12 && hour <= 19) {\r\n        return daytimes.afternoon\r\n    }\r\n\r\n    if (hour > 19 && hour <= 23) {\r\n        return daytimes.evening\r\n    }\r\n\r\n    if (hour < 7) {\r\n        return daytimes.night\r\n    }\r\n\r\n    return null\r\n}","import React, {Component} from 'react';\r\nimport FontAwesome from 'react-fontawesome'\r\nimport { connect } from 'react-redux';\r\nimport { canUserLog } from '../../actions';\r\nimport styles from './AddNewLog.module.scss';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDate, getDaytime } from '../../util/dateHelpers';\r\nimport { daytimes } from '../../constants/daytimes';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport classNames from 'classnames';\r\n\r\nclass AddNewLog extends Component {\r\n    componentWillMount() {\r\n        const date = getDate();\r\n        const timing = getDaytime();\r\n        this.props.dispatch(canUserLog(date, timing, this.props.userId))\r\n    };\r\n\r\n    returnTimeRemaining() {\r\n        let currentTiming = getDaytime();\r\n        let timeOfNextLog = 0;\r\n        \r\n        switch(currentTiming) {\r\n            case daytimes.morning:\r\n                timeOfNextLog = 13;\r\n                break;\r\n            case daytimes.afternoon :\r\n                timeOfNextLog = 20;\r\n                break;\r\n            case daytimes.evening :\r\n                timeOfNextLog = 7;\r\n                break;\r\n            default:\r\n                timeOfNextLog = 7;\r\n        };\r\n\r\n        return `${timeOfNextLog}:00`\r\n    }\r\n\r\n    render(){\r\n        const { canLog, darkTheme } = this.props;\r\n\r\n        if (canLog === undefined) {\r\n            return <LoadingNetItem/>\r\n        } \r\n\r\n        if (canLog && getDaytime() !== daytimes.night) {\r\n            return (\r\n                <Link to={routerRoutes.addNewLog}>\r\n                    <div className={classNames(\r\n                        styles.logbutton, \r\n                        styles.available,\r\n                        darkTheme && styles.dark\r\n                        )}>\r\n                        <div className={styles.attentionBorder}/>\r\n                        <FontAwesome name=\"fas fa-plus\" className={styles.floating}/> ADD LOG\r\n                    </div>\r\n                </Link> \r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className={classNames(styles.logbutton, styles.unavailable)}>\r\n                Next log will be available at: {this.returnTimeRemaining()}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nfunction mapStateToProps({logs, user}) {\r\n    const { id : userId } = user;\r\n    const { canLog } = logs; \r\n\r\n    return { canLog, userId }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddNewLog);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport parentStyles from './Dashboard.module.scss';\r\nimport styles from './LastLogs.module.scss';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport { useSelector } from 'react-redux';\r\nimport Button from '../Button/Button';\r\nimport classNames from 'classnames';\r\n\r\nconst LastLogs = () => {\r\n    const darkTheme = useTheme();\r\n    const { lastLogs, isFetchingLogs } = useSelector( ({logs}) => {\r\n        return {\r\n            lastLogs : logs.lastLogs,\r\n            isFetchingLogs : logs.isFetchingLogs\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={parentStyles.gridItem}>\r\n            <h3 className={parentStyles.gridItemHeader}>Last logs</h3>\r\n            {\r\n                isFetchingLogs ? (\r\n                    <LoadingNetItem/>\r\n                ) : ( (!lastLogs || !lastLogs.length) ? (\r\n                        <div className={styles.greyText}>\r\n                            There are no logs at the moment <br/><br/>\r\n                            Write Your first one, by pressing the green button at the top\r\n                        </div> \r\n                    ) : (\r\n                        <div className={classNames(\r\n                            styles.logSection, \r\n                            parentStyles.gridItemContent\r\n                        )}> \r\n                            <div className={styles.logContainer}>\r\n                                { lastLogs.slice(0,3).map( (log, index) => {\r\n                                    return (\r\n                                        <div key={index} className={styles.logItem}>\r\n                                            <div className={styles.logContent}>\r\n                                                <div className={classNames(\r\n                                                    styles.ratingBox,\r\n                                                    darkTheme && styles.dark\r\n                                                )}>\r\n                                                    {log.rating}\r\n                                                </div>\r\n                                                <div className={styles.rightSection}>\r\n                                                    <div className={styles.date}>{log.date}</div>\r\n                                                    <div className={styles.text}>{log.text}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Link \r\n                                                to={`/logs/${log.id}`}\r\n                                                className={classNames(\r\n                                                    styles.link,\r\n                                                    darkTheme && styles.dark\r\n                                                )}\r\n                                            >\r\n                                                Read more\r\n                                            </Link> \r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <Link to=\"/logs\">\r\n                                <Button>All Logs</Button>\r\n                            </Link>\r\n                        </div> )\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LastLogs;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport Button from '../Button/Button';\r\nimport parentClasses from './Dashboard.module.scss';\r\nimport styles from './MoodStatus.module.scss';\r\nimport { useMoodStatus } from '../../hooks/Dashboard/useMoodStatus';\r\nimport classNames from 'classnames';\r\n\r\nconst MoodStatus = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    const {\r\n        rating,\r\n        ratingText,\r\n        isFetchingLogs\r\n    } = useMoodStatus();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            parentClasses.gridItem,\r\n            styles.statusContainer\r\n        )}>\r\n            {\r\n                !isFetchingLogs ? (\r\n                    <Fragment>\r\n                        <h3 className={parentClasses.gridItemHeader}>Latest mood status</h3>\r\n                        <div className={parentClasses.gridItemContent}>\r\n                            <div className={classNames(\r\n                                styles.statusBox,\r\n                                darkTheme && styles.dark\r\n                            )}>{rating}</div>\r\n                            <div className={styles.statusText}>{ratingText}</div>\r\n                            <Link to=\"/stats\">\r\n                                <Button>Stats</Button> \r\n                            </Link>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                    <LoadingNetItem/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MoodStatus;","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const useMoodStatus = () => {\r\n    const { lastLogs, isFetchingLogs } = useSelector( ({logs}) => {\r\n        return {\r\n            lastLogs : logs.lastLogs,\r\n            isFetchingLogs : logs.isFetchingLogs\r\n        }\r\n    });\r\n\r\n    const rating = useMemo( () => {\r\n        if (!lastLogs || !Array.isArray(lastLogs) || !lastLogs.length) {\r\n            return 'N/A';\r\n        }\r\n\r\n        let total = 0;\r\n        let count = 0;\r\n\r\n        lastLogs.forEach( log => {\r\n            total += parseInt(log.rating);\r\n            count++;\r\n        });\r\n\r\n        const average = Math.round(((total/count)*10)/10);\r\n\r\n        if (Number.isInteger(average)) {\r\n            return `${average}.0`\r\n        }\r\n\r\n        return String(average);\r\n    }, [lastLogs]);\r\n\r\n    const ratingText = useMemo( () => {\r\n        if (\r\n            !lastLogs || \r\n            !Array.isArray(lastLogs) || \r\n            !lastLogs.length || \r\n            rating === 'N/A'\r\n        ) {\r\n            return ''\r\n        }\r\n\r\n        const parsedRating = parseInt(rating);\r\n\r\n        if (parsedRating >= 7.5) {\r\n            return 'Great';\r\n        }\r\n\r\n        if (parsedRating >= 5) {\r\n            return 'Good';\r\n        }\r\n\r\n        if (parsedRating >= 3) {\r\n            return 'Average';\r\n        }\r\n\r\n        if (parsedRating < 3) {\r\n            return 'Bad';\r\n        }\r\n\r\n        return '';\r\n    }, [lastLogs, rating])\r\n\r\n    return {\r\n        rating,\r\n        ratingText,\r\n        lastLogs,\r\n        isFetchingLogs\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport parentClasses from './Dashboard.module.scss';\r\nimport styles from './SettingsItem.module.scss';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\n\r\nconst SettingsItem = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            parentClasses.gridItem,\r\n            parentClasses.shrink\r\n            )}>\r\n            <h3 className={parentClasses.gridItemHeader}>Settings</h3>\r\n            <div className={parentClasses.flexCenter}>\r\n                <div className={styles.settingsIconWrapper}>\r\n                    <Link to={routerRoutes.settings}>\r\n                        <FontAwesome name=\"cog\" className={classNames(\r\n                            styles.settingsIcon,\r\n                            darkTheme && styles.dark\r\n                            )}/>\r\n                    </Link>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettingsItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport parentClasses from './Dashboard.module.scss';\r\nimport styles from './LogoutItem.module.scss';\r\nimport classNames from 'classnames';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nconst LogoutItem = () => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            parentClasses.gridItem,\r\n            parentClasses.shrink\r\n            )}>\r\n            <h3 className={parentClasses.gridItemHeader}>Log out</h3>\r\n            <div className={parentClasses.flexCenter}>\r\n                <Link to={routerRoutes.logout}>\r\n                    <div className={styles.logoutIconWrapper}> \r\n                        <FontAwesome name=\"sign-out\" className={classNames(\r\n                            styles.logoutIcon,\r\n                            darkTheme && styles.dark\r\n                        )}/>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LogoutItem;","import React, { useEffect } from 'react';\r\nimport AddNewLog from './AddNewLog';\r\nimport Loading from '../Loading/loading';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './Dashboard.module.scss';\r\nimport LastLogs from './LastLogs';\r\nimport MoodStatus from './MoodStatus';\r\nimport SettingsItem from './SettingsItem';\r\nimport LogoutItem from './LogoutItem';\r\nimport { getLastLogs } from '../../actions';\r\n\r\nconst Dashboard = () => {\r\n    const darkTheme = useTheme();\r\n    const isSignedIn = useSelector( ({user}) => user.isAuth );\r\n    const userId = useSelector( ({user}) => user.id );\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(getLastLogs({\r\n                userId,\r\n                limit: 9\r\n            }))\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    if (isSignedIn === undefined) {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n\r\n    if (isSignedIn) {\r\n        return (\r\n            <div>\r\n                <AddNewLog darkTheme={darkTheme}/>\r\n                <div className={styles.grid}>\r\n                    <h1 className={styles.gridTop}>Your dashboard</h1>\r\n                    <LastLogs/>\r\n                    <MoodStatus/>\r\n                    <SettingsItem/>\r\n                    <LogoutItem/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Fragment } from 'react';\r\nimport { Wrapper, Heading, Label, Input, Footer } from '../Forms/Forms';\r\nimport Button from '../Button/Button';\r\nimport BackButton from '../Back/BackButton';\r\nimport Loading from '../Loading/loading';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport styles from './AddLogPage.module.scss';\r\nimport { useAddLog } from '../../hooks/AddLog/useAddLog';\r\n\r\nconst AddLogPage = () => {\r\n    const {\r\n        returnMoodText,\r\n        postLogError,\r\n        canLog,\r\n        message,\r\n        moodRating,\r\n        isPostingLog,\r\n        handleRangeInput,\r\n        handleMessageInput,\r\n        handleAddLog\r\n    } = useAddLog();\r\n\r\n    if (canLog === undefined) {\r\n        return <Loading/>\r\n    }\r\n\r\n    if (canLog) {\r\n        return (\r\n            <Fragment>\r\n                <Wrapper>\r\n                    <Heading>Add log</Heading>\r\n                    <span>How do you feel at the moment? Rate your mood:</span>\r\n                    <div className={styles.topSection}>\r\n                        <div className={styles.moodBox}>\r\n                            {moodRating}\r\n                        </div>\r\n                        <div className={styles.inputLine}>\r\n                            <FontAwesome \r\n                                className={styles.thumb} \r\n                                name=\"thumbs-down\" \r\n                                style={{color: \"#800000\"}}\r\n                            />\r\n                            <input \r\n                                onChange={handleRangeInput} \r\n                                type=\"range\" \r\n                                min=\"1\" \r\n                                max=\"10\" \r\n                                value={moodRating}\r\n                            />\r\n                            <FontAwesome \r\n                                className={styles.thumb} \r\n                                name=\"thumbs-up\" \r\n                                style={{color: \"#16774f\"}}\r\n                            />\r\n                        </div>\r\n                        <span>{returnMoodText(moodRating)}</span>\r\n                    </div>\r\n                    <Label>Describe your thoughts: (optional)</Label>\r\n                    <Input \r\n                        type={'textarea'}\r\n                        name={'message'}\r\n                        value={message}\r\n                        controlEvents={{\r\n                            handleChange : handleMessageInput\r\n                        }}\r\n                    />\r\n                    <Footer>\r\n                        <Button\r\n                            handleClick={handleAddLog}\r\n                            disabled={isPostingLog}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Footer>\r\n                    {postLogError && (\r\n                            <ErrorBox>\r\n                                {postLogError}\r\n                            </ErrorBox>\r\n                        )}\r\n                </Wrapper>\r\n                <BackButton/>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default AddLogPage;","import { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { canUserLog, postLog, clearLogPost } from '../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\nimport { getDate, getDaytime } from '../../util/dateHelpers';\r\n\r\nexport const useAddLog = () => {\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector( ({user}) => user.id);\r\n    const { postLogSuccess, postLogError, canLog } = useSelector( ({logs}) => {\r\n        return {\r\n            postLogSuccess : logs.postLogSuccess,\r\n            postLogError : logs.postLogError,\r\n            canLog : logs.canLog\r\n        }\r\n    });\r\n    const [message, setMessage] = useState('');\r\n    const [moodRating, setMoodRating] = useState(5);\r\n    const [isPostingLog, setIsPostingLog] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(canUserLog(getDate(), getDaytime(), userId))\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    const handleRangeInput = useCallback( (event) => {\r\n        setMoodRating(Number(event.target.value))\r\n    }, []);\r\n\r\n    const handleMessageInput = useCallback( (event) => {\r\n        setMessage(event.target.value)\r\n    }, [])\r\n\r\n    const handleAddLog = useCallback( async () => {\r\n        if (moodRating && userId) {\r\n            setIsPostingLog(true);\r\n\r\n            await dispatch(postLog({\r\n                userId,\r\n                date : getDate(),\r\n                timing : getDaytime(),\r\n                rating : moodRating,\r\n                text : message\r\n            }));\r\n\r\n            setIsPostingLog(false);\r\n        };\r\n\r\n    }, [userId, moodRating, message, dispatch]);\r\n\r\n    useEffect( () => {\r\n        if (postLogSuccess) {\r\n            dispatch(clearLogPost());\r\n\r\n            history.push(routerRoutes.dashboard);\r\n        }\r\n    }, [postLogSuccess, dispatch, history]);\r\n\r\n    useEffect( () => {\r\n        if (canLog === false) {\r\n            history.push(routerRoutes.dashboard);\r\n        }\r\n    }, [canLog, dispatch, history])\r\n    \r\n    const returnMoodText = rating => {\r\n        if (rating >= 9) { \r\n            return \"Awesome!\" \r\n        } else if (rating >= 7) { \r\n            return \"Good\";\r\n        } else if (rating >= 5) { \r\n            return \"Average\";\r\n        } else if (rating >= 3) {\r\n            return \"Not well\";\r\n        } else if (rating < 3) { \r\n            return \"Bad\";\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    return {\r\n        returnMoodText,\r\n        postLogError,\r\n        canLog,\r\n        message,\r\n        moodRating,\r\n        isPostingLog,\r\n        handleRangeInput,\r\n        handleMessageInput,\r\n        handleAddLog\r\n    }\r\n}","import React from 'react';\r\nimport styles from './logItem.module.css';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nconst LogItem = ({date, timing, text, rating}) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <div className={styles.top_line}>\r\n                <div className={styles.rating_box}>\r\n                    {rating}\r\n                </div>\r\n                <div>\r\n                    <FontAwesome name=\"hourglass\" className={styles.icon}/>\r\n                    {timing}\r\n                </div>\r\n                <div className={styles.date}>\r\n                    <FontAwesome name=\"calendar\" className={styles.icon}/>\r\n                    {date}\r\n                </div>\r\n            </div>\r\n            <div className={styles.text}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n   );\r\n};\r\n\r\nexport default LogItem","import React from 'react';\r\nimport Loading from '../Loading/loading';\r\nimport BackButton from '../Back/BackButton';\r\nimport styles from './AllLogs.module.scss';\r\nimport Button from '../Button/Button';\r\nimport LogItem from '../LogItem/logItem';\r\nimport LoadingNetItem from '../Loading/loadingNetItem';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport { useAllLogs } from '../../hooks/AllLogs/useAllLogs';\r\n\r\nconst AllLogs = () => {\r\n    const { \r\n        allLogs,\r\n        isFetchingAllLogs, \r\n        fetchAllLogsError,\r\n        noLogsLeft,\r\n        loadMoreLogs \r\n    } = useAllLogs();\r\n\r\n    if (!allLogs) {\r\n        return <Loading/>\r\n    }\r\n\r\n    if (\r\n        allLogs && \r\n        Array.isArray && \r\n        allLogs.length\r\n    ) {\r\n        return (\r\n            <div className={styles.pageWrapper}>\r\n                <BackButton/>\r\n                <h1>All logs</h1>\r\n                <div>\r\n                    {\r\n                        allLogs.map( (item, i) => {\r\n                            return (\r\n                                <LogItem \r\n                                    key={i} \r\n                                    rating={item.rating} \r\n                                    date={item.date} \r\n                                    timing={item.timing} \r\n                                    text={item.text}\r\n                                />\r\n                            ) \r\n                        })\r\n                    }\r\n                </div>\r\n                <div className={styles.bottomSection}>\r\n                    {\r\n                        isFetchingAllLogs ? (\r\n                            <LoadingNetItem/>\r\n                        ) : !noLogsLeft && (\r\n                            <Button\r\n                                handleClick={loadMoreLogs}\r\n                            >\r\n                                Load more\r\n                            </Button>\r\n                        ) \r\n                    }\r\n                    {\r\n                        fetchAllLogsError && (\r\n                            <ErrorBox>\r\n                                {fetchAllLogsError}\r\n                            </ErrorBox>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AllLogs;","\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { getLogs, clearLogs } from '../../actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useAllLogs = () => {\r\n    const dispatch = useDispatch();\r\n    const { user, logs } = useSelector( ({user, logs}) => { \r\n        return {\r\n            user,\r\n            logs\r\n        }\r\n    });\r\n    const [ skipLogs, setSkipLogs ] = useState(3); \r\n\r\n    const { id : userId } = user;\r\n    const { \r\n        allLogs, \r\n        isFetchingAllLogs, \r\n        fetchAllLogsError,\r\n        noLogsLeft\r\n    } = logs;\r\n\r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(getLogs({\r\n                userId, \r\n                start : 0, \r\n                limit : 3\r\n            }));\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearLogs());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const loadMoreLogs = useCallback( () => {\r\n        if (userId) {\r\n            dispatch(getLogs({\r\n                userId, \r\n                start : skipLogs, \r\n                limit : 3,\r\n                currentLogs : allLogs\r\n            }));\r\n\r\n            setSkipLogs( prevState => prevState + 3);\r\n        }\r\n    }, [skipLogs, userId, allLogs, dispatch]);\r\n\r\n    return {\r\n        allLogs,\r\n        isFetchingAllLogs, \r\n        fetchAllLogsError,\r\n        noLogsLeft,\r\n        loadMoreLogs\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { getLog, clearLog } from '../../actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../Loading/loading';\r\nimport BackButton from '../Back/BackButton';\r\nimport LogItem from '../LogItem/logItem';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport styles from './logview.module.css';\r\n\r\nconst LogView = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { logData, isFetchingLog, getLogError } = useSelector( ({logs}) => logs);\r\n\r\n    useEffect( () => {\r\n        if (\r\n            props.match && \r\n            props.match.params &&\r\n            props.match.params.id\r\n        ) {\r\n            dispatch(getLog(props.match.params.id));\r\n        }\r\n\r\n\r\n        return () => {\r\n            dispatch(clearLog());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (!logData || isFetchingLog) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pageWrapper}>\r\n            <BackButton/>\r\n            {\r\n                logData && Boolean(Object.keys(logData).length) && (\r\n                    <LogItem \r\n                        rating={logData.rating}\r\n                        timing={logData.timing}\r\n                        date={logData.date}\r\n                        text={logData.text}\r\n                    />\r\n                )\r\n            }\r\n            {\r\n                getLogError && (\r\n                    <ErrorBox>\r\n                        {getLogError}\r\n                    </ErrorBox>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogView","import React, {Component} from 'react';\r\nimport Loading from '../Loading/loading';\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from '../../actions';\r\n\r\nclass LogOut extends Component {\r\n    UNSAFE_componentWillMount(){\r\n        this.props.dispatch(logOut());\r\n    }\r\n\r\n    render(){\r\n        return <Loading/>\r\n    }\r\n};\r\n\r\nexport default connect(null)(LogOut);","import React from 'react';\r\nimport styles from './SuccessBox.module.scss';\r\n\r\nconst SuccessBox = ({children}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessBox;","import React from 'react';\r\nimport { Wrapper, Input, Label, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport Button from '../Button/Button';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport SuccessBox from '../SuccessBox/SuccessBox';\r\nimport styles from './Settings.module.scss';\r\nimport { useEditAccount } from '../../hooks/Settings/useEditAccount';\r\n\r\nconst AccountDetails = ({\r\n    email,\r\n    firstName,\r\n    lastName\r\n}) => {\r\n    const {\r\n        isSubmitting,\r\n        isEditingUser,\r\n        editUserError,\r\n        editUserSuccess,\r\n        values,\r\n        errors,\r\n        touched,\r\n        isValid,\r\n        handleSubmit,\r\n        controlEvents\r\n    } = useEditAccount({\r\n        firstName,\r\n        lastName\r\n    })\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div><strong>User: </strong> {email}</div><br/>\r\n            <h3 className={styles.miniHeader}>Edit details:</h3>\r\n            <Label>First name:</Label>\r\n            <Input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                controlEvents={controlEvents}\r\n            />\r\n            {\r\n                (errors.firstName && touched.firstName) && (\r\n                    <ErrorMessage>\r\n                        {errors.firstName}\r\n                    </ErrorMessage>\r\n                )\r\n            }\r\n            <Label>Last name:</Label>\r\n            <Input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                controlEvents={controlEvents}    \r\n            />\r\n            {\r\n                (errors.lastName && touched.lastName) && (\r\n                    <ErrorMessage>\r\n                        {errors.lastName}\r\n                    </ErrorMessage>\r\n                )\r\n            }\r\n            <Footer>\r\n                <Button\r\n                    disabled={isSubmitting || !isValid || isEditingUser}\r\n                    handleClick={handleSubmit}\r\n                >\r\n                    Save changes\r\n                </Button>\r\n            </Footer>\r\n            {\r\n                !isEditingUser && editUserError && (\r\n                    <ErrorBox>\r\n                        {editUserError}\r\n                    </ErrorBox>\r\n                )\r\n            }\r\n            {\r\n                !isEditingUser && editUserSuccess && (\r\n                    <SuccessBox>\r\n                        Account information was saved\r\n                    </SuccessBox>\r\n                )\r\n            }\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default AccountDetails;","\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { editUserDetails, clearEditUser } from '../../actions';\r\n\r\nexport const useEditAccount = ({\r\n    firstName,\r\n    lastName\r\n}) => {\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { \r\n        id : userId,\r\n        isEditingUser,\r\n        editUserError,\r\n        editUserSuccess\r\n    } = useSelector( ({user}) => user);\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearEditUser())\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const validationSchema = yup.object({\r\n        firstName: yup\r\n            .string()\r\n            .required(formErrorMessages.required),\r\n        lastName: yup\r\n            .string()\r\n            .required(formErrorMessages.required)\r\n    });\r\n\r\n    const initialValues = {\r\n        firstName,\r\n        lastName\r\n    }\r\n\r\n    const handleChangeDetails = async (values) => {\r\n        setIsSubmitting(true);\r\n        await dispatch(editUserDetails({\r\n            userId,\r\n            details: values\r\n        }));\r\n        setIsSubmitting(false);\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        touched,\r\n        isValid,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: handleChangeDetails\r\n    });\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        isSubmitting,\r\n        isEditingUser,\r\n        editUserError,\r\n        editUserSuccess,\r\n        values,\r\n        errors,\r\n        touched,\r\n        isValid,\r\n        handleSubmit,\r\n        controlEvents\r\n    }\r\n}","import React from 'react';\r\nimport { Wrapper, Input, Label, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport Button from '../Button/Button';\r\nimport styles from './Settings.module.scss';\r\nimport { useChangePassword } from '../../hooks/Settings/useChangePassword';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport SuccessBox from '../SuccessBox/SuccessBox';\r\n\r\nconst ChangePassword = ({\r\n    userId\r\n}) => {\r\n    const {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        handleSubmit,\r\n        touched,\r\n        changePasswordSuccess,\r\n        changePasswordError\r\n    } = useChangePassword({\r\n        userId\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <h3 className={styles.miniHeader}>Change password</h3>\r\n            <Label>Current password:</Label>\r\n            <Input\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                controlEvents={controlEvents}\r\n                value={values.currentPassword}\r\n            />\r\n            <Label>New password:</Label>\r\n            <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                controlEvents={controlEvents}\r\n                value={values.password}\r\n            />\r\n            {\r\n                touched.password && errors.password && (\r\n                    <ErrorMessage>\r\n                        {errors.password}\r\n                    </ErrorMessage>\r\n                ) \r\n            }\r\n            <Label>Confirm new password:</Label>\r\n            <Input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                controlEvents={controlEvents}\r\n                value={values.confirmPassword}\r\n            />\r\n            {\r\n                touched.confirmPassword && errors.confirmPassword && (\r\n                    <ErrorMessage>\r\n                        {errors.confirmPassword}\r\n                    </ErrorMessage>\r\n                ) \r\n            }\r\n            <Footer>\r\n                <Button\r\n                    disabled={!isValid || isSubmitting}\r\n                    handleClick={handleSubmit}\r\n                >\r\n                    Change password\r\n                </Button>\r\n            </Footer>\r\n            {\r\n                changePasswordError && (\r\n                    <ErrorBox>\r\n                        {changePasswordError}\r\n                    </ErrorBox>\r\n                )\r\n            }\r\n            {\r\n                changePasswordSuccess && (\r\n                    <SuccessBox>\r\n                        Password was changed successfully\r\n                    </SuccessBox>\r\n                )\r\n            }\r\n        </Wrapper>            \r\n    );\r\n};\r\n\r\nexport default ChangePassword;","import { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changePassword, clearChangePassword } from '../../actions';\r\n\r\nexport const useChangePassword = () => {\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { \r\n        changePasswordSuccess, \r\n        changePasswordError,\r\n        id : userId\r\n    } = useSelector( ({user}) => user);\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearChangePassword());\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const validationSchema = yup.object({\r\n        currentPassword: yup.string()\r\n                    .required(formErrorMessages.required),\r\n        password: yup.string()\r\n                    .required(formErrorMessages.required)\r\n                    .min(6, `${formErrorMessages.min} 6`),\r\n        confirmPassword: yup.string()\r\n                    .required(formErrorMessages.required)\r\n                    .oneOf([yup.ref('password'), null], formErrorMessages.passwordMatch)\r\n    })\r\n\r\n    const initialValues = {\r\n        currentPassword: initialFormValues.currentPassword,\r\n        password: initialFormValues.password,\r\n        confirmPassword: initialFormValues.confirmPassword\r\n    }\r\n\r\n    const handleChangePassword = async ({currentPassword, password}) => {\r\n        setIsSubmitting(true);\r\n\r\n        await dispatch(changePassword({\r\n            userId,\r\n            currentPassword,\r\n            newPassword : password\r\n        }));\r\n\r\n        setIsSubmitting(false);\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleChangePassword\r\n    });\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        controlEvents,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n        isSubmitting,\r\n        handleSubmit,\r\n        changePasswordSuccess,\r\n        changePasswordError\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BackButton from '../Back/BackButton';\r\nimport { Wrapper, Heading, Footer } from '../Forms/Forms';\r\nimport AccountDetails from './AccountDetails';\r\nimport ChangePassword from './ChangePassword';\r\nimport Button from '../Button/Button';\r\nimport Loading from '../Loading/loading';\r\nimport styles from './Settings.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\n\r\nconst Settings = () => {\r\n    const user = useSelector( ({user}) => user);\r\n    const { \r\n        email, \r\n        firstName, \r\n        lastName \r\n    } = user;\r\n\r\n    if (!user || !Object.keys(user).length) {\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BackButton/>\r\n            <Heading>Account settings</Heading>\r\n            <AccountDetails\r\n                email={email}\r\n                firstName={firstName}\r\n                lastName={lastName}\r\n            /><br/>\r\n            <ChangePassword/><br/>\r\n            <Wrapper>\r\n                <h3 className={styles.miniHeader}>Delete account</h3>\r\n                <Footer>\r\n                    <Link to={routerRoutes.delete}>\r\n                        <Button>Delete account</Button>\r\n                    </Link>\r\n                </Footer>\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './GraphCanvas.module.scss';\r\nimport { useTheme } from './../../contexts/ThemeContext';\r\nimport classNames from 'classnames';\r\nimport { mapLogsToGraphData } from '../../util/statsHelpers';\r\n\r\nconst ReturnGraph = ( {points} ) => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <polyline points={points} className={classNames(\r\n            styles.graph_stroke,\r\n            darkTheme && styles.dark\r\n        )}/>\r\n    )\r\n}\r\n\r\nconst GraphCanvas = ({logs}) => {\r\n    const [ width, setWidth ] = useState(0);\r\n    const graphRef = useRef(null);\r\n\r\n    const returnPolylinePoints = (list) => {\r\n        let pointsString = '';\r\n\r\n        for (let i = 0; i < list.length; i++) {\r\n            let ratingYpos = 220 - (Number(list[i].rating) * 20);\r\n            pointsString += (Math.floor((width / 21) * (list.length - i - 1))) + \",\" + ratingYpos + \" \"; \r\n        }\r\n\r\n        return pointsString\r\n    }\r\n\r\n    const handleResize = () => {\r\n        let newWidth = 0;\r\n\r\n        if (graphRef.current && graphRef.current.offsetWidth) {\r\n            newWidth = graphRef.current.offsetWidth;\r\n        } else {\r\n            newWidth = 490;\r\n        };\r\n\r\n        if (newWidth !== width) {\r\n            setWidth(newWidth);\r\n        };\r\n    };\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        if (!width && graphRef.current && graphRef.current.offsetWidth) {\r\n            setWidth(graphRef.current.offsetWidth)\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const graphData = mapLogsToGraphData(logs);\r\n\r\n    if (!graphData || !graphData.length) {\r\n        return null;\r\n    }\r\n\r\n    const firstDate = graphData[0].date;\r\n    const lastDate = graphData[graphData.length - 1].date;\r\n\r\n    return (\r\n        <div className={styles.graph_container}>\r\n            <p><strong>Your mood graph</strong></p>\r\n            <div className={styles.graph_canvas} ref={graphRef} >\r\n                <div className={styles.y_axis_number}>10</div>\r\n                <div className={styles.y_axis_number} style={{transform: \"translate(10px, 100px)\"}}>5</div>\r\n                <div className={styles.y_axis_number} style={{transform: \"translate(10px, 200px)\"}}>0</div>\r\n                <svg width={\"100%\"} height={\"100%\"}>\r\n                    <polyline points={\"1,20 490,20\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,40 490,40\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,60 490,60\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,80 490,80\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,100 490,100\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,120 490,120\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,140 490,140\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,160 490,160\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,180 490,180\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,200 490,200\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <ReturnGraph points={returnPolylinePoints(graphData)} />\r\n                </svg>\r\n            </div>\r\n            <div>From {lastDate} to {firstDate}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraphCanvas;","export function countAverage(list) {\r\n    if (!list || !Array.isArray(list) || !list.length) {\r\n        return null;\r\n    }\r\n\r\n    let sum = 0;\r\n\r\n    list.forEach( item => {\r\n        if (item && item.rating) {\r\n            sum += Number(item.rating);\r\n        }\r\n    });\r\n\r\n    return (Math.floor(sum * 10 / list.length) / 10)\r\n};\r\n\r\nexport function lastSevenDaysAverage(list) {\r\n    if (!list || !Array.isArray(list) || !list.length) {\r\n        return {}\r\n    }\r\n\r\n    let dates = [];\r\n    let sum = 0;\r\n    let count = 0;\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n        let date = list[i].date;\r\n\r\n        if (dates.indexOf(date) < 0) {\r\n            dates.push(list[i].date);\r\n        }\r\n\r\n        sum += Number(list[i].rating);\r\n        count++;\r\n\r\n        if (dates.length >= 7) {\r\n            break;\r\n        }\r\n    };\r\n\r\n    const average = Math.floor(sum * 10 / count) / 10;\r\n    const firstDay = dates[dates.length - 1] ? dates[dates.length - 1] : \"N/A\";\r\n    const lastDay = dates[0] ? dates[0] : \"N/A\";\r\n\r\n    return {\r\n        average,\r\n        firstDay,\r\n        lastDay\r\n    }\r\n};\r\n\r\nexport function mapLogsToGraphData(logs) {\r\n    if (!logs || !Array.isArray(logs) || !logs.length) {\r\n        return null;\r\n    }\r\n    \r\n    let graphData = [];\r\n\r\n    for (let i = 0; i < logs.length; i++) {\r\n        const { date, rating } = logs[i];\r\n        \r\n        graphData.push({\r\n            date,\r\n            rating\r\n        });\r\n\r\n        if (i === 20) {\r\n            break;\r\n        }\r\n    };\r\n\r\n    return graphData;\r\n}\r\n\r\nexport function mapLogsToDaytimeStats(list) {\r\n    let morningSum = 0;\r\n    let morningCount = 0;\r\n    let afternoonSum = 0;\r\n    let afternoonCount = 0;\r\n    let eveningSum = 0;\r\n    let eveningCount = 0;\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (list[i].timing === \"Morning\") {\r\n            morningSum += Number(list[i].rating);\r\n            morningCount++;\r\n        }\r\n        if (list[i].timing === \"Afternoon\") {\r\n            afternoonSum += Number(list[i].rating);\r\n            afternoonCount++;\r\n        }\r\n        if (list[i].timing === \"Evening\") {\r\n            eveningSum += Number(list[i].rating);\r\n            eveningCount++;\r\n        }\r\n    };\r\n\r\n    const morningAverage = morningCount === 0 ? \"N/A\" : Math.floor(morningSum * 10 / morningCount) / 10;\r\n    const afternoonAverage = afternoonCount === 0 ? \"N/A\" : Math.floor(afternoonSum * 10 / afternoonCount) / 10;\r\n    const eveningAverage = eveningCount === 0 ? \"N/A\" : Math.floor(eveningSum * 10 / eveningCount) / 10;\r\n\r\n    return {\r\n        morningAverage,\r\n        afternoonAverage,\r\n        eveningAverage\r\n    }\r\n};\r\n","import React from 'react';\r\nimport styles from './DaytimeGraph.module.scss';\r\nimport { mapLogsToDaytimeStats } from '../../util/statsHelpers';\r\nimport morningIcon from './icons/morning.svg';\r\nimport afternoonIcon from './icons/afternoon.svg';\r\nimport eveningIcon from './icons/evening.svg';\r\nimport classNames from 'classnames';\r\nimport { useTheme } from './../../contexts/ThemeContext';\r\n\r\nconst returnBullet = (rating, left, darkTheme) => {\r\n    if (rating === \"N/A\") {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={classNames(\r\n                styles.daytime_bullet,\r\n                darkTheme && styles.dark\r\n            )} \r\n            style={{bottom:`${rating * 30 -10}px`, left:`${left}`}}\r\n        >\r\n            <div className={styles.daytime_bullet_text}>{rating}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DaytimeGraph = ({logs}) => {\r\n    const data = mapLogsToDaytimeStats(logs);\r\n    const darkTheme = useTheme();\r\n    \r\n    if (!logs || !logs.length || !data) {\r\n        return null;\r\n    }\r\n\r\n    const {\r\n        morningAverage,\r\n        afternoonAverage,\r\n        eveningAverage\r\n    } = data;\r\n\r\n    return (\r\n        <div className={styles.daytime_container}>\r\n            <p><strong>Your mood throughout the day:</strong></p>\r\n            <div className={styles.daytime_canvas}>\r\n                <svg width={\"100%\"} height={\"100%\"} overflow={\"hidden\"}>\r\n                    <polyline points={\"1,60 300,60\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,120 300,120\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,180 300,180\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,240 300,240\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                    <polyline points={\"1,300 300,300\"} style={{fill:\"none\", stroke:\"#cccccc\", strokeWidth:\"1\"}}/>\r\n                </svg>\r\n                {returnBullet(morningAverage, null, darkTheme)}\r\n                {returnBullet(afternoonAverage, \"48%\", darkTheme)}\r\n                {returnBullet(eveningAverage, \"82%\", darkTheme)}\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"-12px\"}}>10</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"48px\", left: \"-15px\"}}>8</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"108px\", left:\"-15px\"}}>6</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"168px\", left:\"-15px\"}}>4</div>\r\n                <div className={styles.y_axis_number_daytime} style={{top:\"228px\", left:\"-15px\"}}>2</div>\r\n                <div className={styles.daytime_bottom_line}>\r\n                    <div className={styles.daytime_time}>7:00</div>\r\n                    <div className={styles.daytime_time} style={{left:\"33%\"}}>13:00</div>\r\n                    <div className={styles.daytime_time} style={{left:\"66%\"}}>20:00</div>\r\n                    <div className={styles.daytime_time} style={{left:\"100%\"}}>00:00</div>\r\n                    <img \r\n                        src={morningIcon} \r\n                        style={{left:\"13%\", padding: \"2px\"}} \r\n                        alt=\"Morning\"\r\n                        className={classNames(darkTheme && styles.dark)}\r\n                    />\r\n                    <img \r\n                        src={afternoonIcon} \r\n                        style={{left:\"48%\"}} \r\n                        alt=\"Afternoon\"\r\n                        className={classNames(darkTheme && styles.dark)}\r\n                    />\r\n                    <img \r\n                        src={eveningIcon} \r\n                        style={{left:\"82%\"}} \r\n                        alt=\"Evenining\"\r\n                        className={classNames(darkTheme && styles.dark)}\r\n                    />\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DaytimeGraph;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styles from './AverageBox.module.scss';\r\nimport { useTheme } from './../../contexts/ThemeContext';\r\n\r\nconst AverageBox = ( {children }) => {\r\n    const darkTheme = useTheme();\r\n\r\n    return (\r\n        <div className={classNames(\r\n            styles.averageBox,\r\n            darkTheme && styles.dark\r\n        )}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AverageBox;","import React, {Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getLogs, clearLogs } from './../../actions';\r\nimport Loading from '../Loading/loading';\r\nimport GraphCanvas from './GraphCanvas';\r\nimport DaytimeGraph from './DaytimeGraph';\r\nimport styles from './stats.module.css';\r\nimport { countAverage, lastSevenDaysAverage } from '../../util/statsHelpers';\r\nimport BackButton from '../Back/BackButton';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport AverageBox from './AverageBox';\r\n\r\nconst Stats = () => {\r\n    const dispatch = useDispatch();\r\n    const { user, logs } = useSelector( ({user, logs}) => {\r\n        return { user, logs }\r\n    });\r\n    const { id : userId } = user;\r\n    const { allLogs, fetchAllLogsError, isFetchingAllLogs } = logs; \r\n    \r\n    useEffect( () => {\r\n        if (userId) {\r\n            dispatch(getLogs({userId, limit : 100}));\r\n        }\r\n    }, [userId, dispatch]);\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            dispatch(clearLogs());\r\n        }\r\n    }, [dispatch])\r\n\r\n    if (isFetchingAllLogs || !userId || !allLogs) {\r\n        return <Loading/>\r\n    }\r\n\r\n    if (fetchAllLogsError) {\r\n        return <ErrorBox>{fetchAllLogsError}</ErrorBox>\r\n    }\r\n\r\n    const sevenDayAverageObject = lastSevenDaysAverage(allLogs);\r\n\r\n    if (allLogs && Array.isArray(allLogs) && allLogs.length) {\r\n        return (\r\n            <Fragment>\r\n                <BackButton/>\r\n                <div className={styles.container}>\r\n                    <h1>User stats</h1>\r\n                    <div className={styles.first_block}>\r\n                        <div className={styles.average_block}>\r\n                            <p><strong>Your average mood:</strong></p>\r\n                            <AverageBox>{countAverage(allLogs)}</AverageBox>\r\n                            <div className={styles.small_text_box}>Retrieved from the last 100 logs</div>\r\n                        </div>\r\n                        <div className={styles.average_block}>\r\n                            <b>7 day mood:</b>\r\n                            <AverageBox>{sevenDayAverageObject.average}</AverageBox>\r\n                            <div className={styles.small_text_box}>Counted from the last 7 active days from <br/>\r\n                            {sevenDayAverageObject.firstDay} to {sevenDayAverageObject.lastDay}</div>\r\n                        </div>\r\n                    </div>\r\n                    <GraphCanvas logs={allLogs}/>\r\n                    <DaytimeGraph logs={allLogs}/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Fragment } from 'react';\r\nimport BackButton from '../Back/BackButton';\r\nimport { Wrapper, Heading, Label, Input, Footer, ErrorMessage } from '../Forms/Forms';\r\nimport ErrorBox from '../ErrorBox/ErrorBox';\r\nimport Button from '../Button/Button';\r\nimport { useDeleteAccount } from '../../hooks/DeleteAccount/useDeleteAccount';\r\n\r\nconst DeleteAccount = () => {\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        controlEvents,\r\n        touched,\r\n        handleSubmit,\r\n        isDeleting,\r\n        error\r\n    } = useDeleteAccount();\r\n\r\n    return (\r\n        <Fragment>\r\n            <BackButton/>\r\n            <Wrapper>\r\n                <ErrorBox>\r\n                    <strong>Warning: </strong> deleting your account will \r\n                    permanently delete all your data, including all logs\r\n                    stored in the database.\r\n                </ErrorBox><br/>\r\n                <Heading>Delete account:</Heading>\r\n                <Label>Enter your passsword:</Label>\r\n                <Input\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    type=\"password\"\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {\r\n                    touched.password && errors.password && (\r\n                        <ErrorMessage>\r\n                            {errors.password}\r\n                        </ErrorMessage>\r\n                    )\r\n                }\r\n                <Label>Confirm your password:</Label>\r\n                <Input\r\n                    name=\"confirmPassword\"\r\n                    value={values.confirmPassword}\r\n                    type=\"password\"\r\n                    controlEvents={controlEvents}\r\n                />\r\n                {\r\n                    touched.confirmPassword && errors.confirmPassword && (\r\n                        <ErrorMessage>\r\n                            {errors.confirmPassword}\r\n                        </ErrorMessage>\r\n                    )\r\n                }\r\n                <Footer>\r\n                    <Button\r\n                        disabled={!isValid || isDeleting}\r\n                        handleClick={handleSubmit}\r\n                    >\r\n                        Delete account\r\n                    </Button>\r\n                </Footer>\r\n                {\r\n                    error && !isDeleting && (\r\n                        <ErrorBox>\r\n                            {error}\r\n                        </ErrorBox>\r\n                    ) \r\n                }\r\n            </Wrapper>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteAccount","import { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { initialFormValues } from '../../constants/initialFormValues';\r\nimport * as yup from 'yup';\r\nimport { formErrorMessages } from '../../constants/formErrorMessages';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { clearUserData } from '../../actions';\r\nimport { routerRoutes } from '../../constants/routerRoutes';\r\n\r\nexport const useDeleteAccount = () => {\r\n    const [deleteAccountStatus, setDeleteAccountStatus] = useState({\r\n        isDeleting: false,\r\n        error: null,\r\n        success: null\r\n    });\r\n    const { isDeleting, success, error } = deleteAccountStatus;\r\n    const userId = useSelector( ({user}) => user.id);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        if (success) {\r\n            async function clearData() {\r\n                await dispatch(clearUserData());\r\n            }\r\n            \r\n            clearData();\r\n            history.push(routerRoutes.home);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [success])\r\n\r\n    const initialValues = {\r\n        password: initialFormValues.password,\r\n        confirmPassword: initialFormValues.confirmPassword\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        password: yup\r\n                .string()\r\n                .required(formErrorMessages.required),\r\n        confirmPassword: yup\r\n                .string()\r\n                .oneOf([yup.ref('password'), null], formErrorMessages.passwordMatch)\r\n    });\r\n\r\n    const handleDeleteAccount = async ({password}) => {\r\n        if (!userId) {\r\n            return;\r\n        }\r\n\r\n        setDeleteAccountStatus( prevStatus => {\r\n            return {\r\n                ...prevStatus,\r\n                isDeleting : true\r\n            }\r\n        });\r\n\r\n        const endpoint = `api/deleteAccount?id=${userId}`;\r\n        const body = {\r\n            password\r\n        };\r\n\r\n        try {\r\n            const { data } = await axios.post(endpoint, body);\r\n            const { error } = data; \r\n\r\n            if (error) {\r\n                setDeleteAccountStatus({\r\n                    isDeleting: false,\r\n                    error,\r\n                    success: false\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            setDeleteAccountStatus({\r\n                isDeleting: false,\r\n                error: null,\r\n                success: true\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            setDeleteAccountStatus({\r\n                isDeleting: false,\r\n                error,\r\n                success: false\r\n            });\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: handleDeleteAccount\r\n    })\r\n\r\n    const controlEvents = {\r\n        handleChange,\r\n        handleBlur\r\n    }\r\n\r\n    return {\r\n        values,\r\n        errors,\r\n        isValid,\r\n        controlEvents,\r\n        touched,\r\n        handleSubmit,\r\n        isDeleting,\r\n        error\r\n    }\r\n}","export const items = [\r\n    {\r\n        iconName: \"home\",\r\n        path: \"/\",\r\n        text: \"Home\",\r\n        isAuth: null\r\n    },\r\n    {\r\n        iconName: \"sign-in\",\r\n        path: \"/login\",\r\n        text: \"Log In\",\r\n        isAuth: false\r\n    },\r\n    {\r\n        iconName: \"sign-out\",\r\n        path: \"/logout\",\r\n        text: \"Log Out\",\r\n        isAuth: true\r\n    },\r\n    {\r\n        iconName: \"user-plus\",\r\n        path: \"/register\",\r\n        text: \"Sign Up\",\r\n        isAuth: null\r\n    },\r\n    {\r\n        iconName: \"book\",\r\n        path: \"/dashboard\",\r\n        text: \"Your Dashboard\",\r\n        isAuth: true\r\n    },\r\n    {\r\n        iconName: \"cog\",\r\n        path: \"/settings\",\r\n        text: \"Settings\",\r\n        isAuth: true\r\n    }\r\n];","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './NavBar.module.scss';\r\nimport { items } from './items';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport classNames from 'classnames';\r\n\r\nconst NavBar = ({isAuth, toggleNav}) => {\r\n    const darkTheme = useTheme();\r\n\r\n    const itemElement = (item, i) => (\r\n        <Link to={item.path} key={i}>\r\n            <div className={styles.navItem} onClick={toggleNav}>\r\n                <FontAwesome name={item.iconName}/> {item.text}\r\n            </div> \r\n        </Link>\r\n    )\r\n\r\n    const renderItems = (items) => {\r\n        return (\r\n            items.map( (item, i) => {\r\n                if (isAuth && item.isAuth) {\r\n                    return itemElement(item,i)     \r\n                } else if (!isAuth && item.isAuth === false) {\r\n                    return itemElement(item,i) \r\n                } else if (item.isAuth === null) {\r\n                    return itemElement(item,i)\r\n                }\r\n                return null\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classNames(styles.navBar, darkTheme && styles.nightMode)}>\r\n                {renderItems(items)}\r\n            </div>\r\n            <div className={styles.navBarMask} onClick={toggleNav}></div>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport styles from './Header.module.scss';\r\n\r\nconst ToggleButton = ({showNav, toggleNav}) => {\r\n    return (\r\n        <div className={styles.bars}>\r\n            {\r\n                 showNav ?\r\n                 <FontAwesome\r\n                     name=\"close\"\r\n                     onClick={toggleNav}\r\n                     style={{\r\n                         fontSize: '1.5em',\r\n                         padding: \"2px\",\r\n                         color: \"#f2f2f2\",\r\n                         transform: \"rotate(90deg)\",\r\n                         transition: \"0.5s\"\r\n                     }}\r\n                 />\r\n             :\r\n                 <FontAwesome\r\n                     name=\"bars\"\r\n                     onClick={toggleNav}\r\n                     style={{\r\n                         fontSize: '1.5em',\r\n                         padding: \"2px\",\r\n                         color: \"#f2f2f2\",\r\n                         transform: \"rotate(180deg)\",\r\n                         transition: \"0.5s\"\r\n                     }}\r\n                 />\r\n            }\r\n        </div>\r\n       \r\n    );\r\n};\r\n\r\nexport default ToggleButton;","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NightmodeButton = ({\r\n    updateTheme,\r\n    darkTheme\r\n}) => {\r\n    return (\r\n        <div \r\n            className={styles.nightmode_button} \r\n            onClick={updateTheme}\r\n        >\r\n            <FontAwesomeIcon \r\n                icon={darkTheme ? faSun : faMoon} \r\n                style={{fontSize:\"1.5rem\"}}\r\n            />\r\n            <div className={styles.nightmode_button_caption}> \r\n                {darkTheme ? `Day mode` : `Night mode`}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NightmodeButton;","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../Navbar/NavBar';\r\nimport ToggleButton from './ToggleButton';\r\nimport NightmodeButton from './NightmodeButton';\r\nimport classNames from 'classnames';\r\nimport { useHeader } from '../../hooks/Header/useHeader';\r\nimport { useThemeUpdate, useTheme } from '../../contexts/ThemeContext';\r\n\r\nconst Header = ( {isAuth} ) => {\r\n    const darkTheme = useTheme();\r\n    const updateTheme = useThemeUpdate();\r\n    const {\r\n        showNav,\r\n        toggleNav\r\n    } = useHeader();\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            <div \r\n                className={classNames(styles.top, darkTheme && styles.nightMode)} \r\n                style={darkTheme ? {backgroundColor: \"#2F2F2F\"} : {}}\r\n            >\r\n                <div className={styles.logo}>\r\n                    Moodapp\r\n                </div>\r\n                <ToggleButton\r\n                    showNav={showNav}\r\n                    toggleNav={toggleNav}\r\n                />\r\n                <NightmodeButton\r\n                    updateTheme={updateTheme}\r\n                    darkTheme={darkTheme}\r\n                />\r\n            </div>\r\n            {showNav && <NavBar toggleNav={toggleNav} isAuth={isAuth}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps({user}) {\r\n    const { isAuth } = user;\r\n\r\n    return { isAuth }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Header);","import { useState, useCallback } from 'react';\r\n\r\nexport const useHeader = () => {\r\n    const [ showNav, setShowNav ] = useState(false);\r\n\r\n    const toggleNav = useCallback(() => {\r\n        setShowNav(!showNav)\r\n    }, [showNav]);\r\n\r\n    return {\r\n        showNav,\r\n        toggleNav\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from './../actions';\r\n\r\nexport default function(ComposedClass, redirect) {\r\n    class AuthenticationCheck extends Component {\r\n        UNSAFE_componentWillMount() {\r\n            this.props.dispatch(auth());\r\n        }\r\n\r\n        UNSAFE_componentWillReceiveProps({user}) {\r\n            if (!user || !user.isAuth) {\r\n                if (redirect) {\r\n                    this.props.history.push('/login');\r\n                }\r\n            } else if (user.isAuth) {\r\n                if (redirect === false) {\r\n                    this.props.history.push('/dashboard')\r\n                }\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <ComposedClass \r\n                    {...this.props} \r\n                    user={this.props.user}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    function mapStateToProps(state) {\r\n        return {\r\n            user: state.user\r\n        }\r\n    }\r\n    \r\n    return connect(mapStateToProps)(AuthenticationCheck)\r\n};","import React, { Fragment } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { routerRoutes } from './constants/routerRoutes';\r\n\r\n// Components\r\nimport Home from './components/Home/Home';\r\nimport Login from './components/Login/Login';\r\nimport Register from './components/Register/Register';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\nimport AddLogPage from './components/AddLog/AddLogPage';\r\nimport AllLogs from './components/Logs/AllLogs';\r\nimport LogView from './components/ViewLog/LogView';\r\nimport LogOut from './components/LogOut/LogOut';\r\nimport Settings from './components/Settings/Settings';\r\nimport Stats from './components/Stats/Stats';\r\nimport DeleteAccount from './components/DeleteAccount/DeleteAccount';\r\nimport Header from './components/Header/Header';\r\n\r\nimport Auth from './hoc/auth';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Fragment>\r\n            <Header/>\r\n            <div className=\"content_wrapper\">\r\n                <Switch>\r\n                    <Route path={routerRoutes.home} exact component={Auth(Home, null)}></Route>\r\n                    <Route path={routerRoutes.login} exact component={Auth(Login, false)}></Route>\r\n                    <Route path={routerRoutes.register} exact component={Auth(Register, null)}></Route>\r\n                    <Route path={routerRoutes.dashboard} exact component={Auth(Dashboard, true)}></Route>\r\n                    <Route path={routerRoutes.addNewLog} exact component={Auth(AddLogPage,true)}></Route>\r\n                    <Route path={routerRoutes.allLogs} exact component={Auth(AllLogs, true)}></Route>\r\n                    <Route path={routerRoutes.viewLog} exact component={Auth(LogView, true)}></Route>\r\n                    <Route path={routerRoutes.logout} exact component={Auth(LogOut, true)}></Route>\r\n                    <Route path={routerRoutes.settings} exact component={Auth(Settings, true)}></Route>\r\n                    <Route path={routerRoutes.delete} exact component={Auth(DeleteAccount, true)}></Route>\r\n                    <Route path={routerRoutes.stats} exact component={Auth(Stats, true)}></Route>\r\n                </Switch>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducers from './reducers/index';\r\nimport Routes from './routes';\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, {}, composeEnhancers(\r\n    applyMiddleware(promiseMiddleware, ReduxThunk)\r\n));\r\n\r\n// const createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ThemeProvider>\r\n            <BrowserRouter>\r\n                <Routes/>\r\n            </BrowserRouter>\r\n        </ThemeProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Forms_formWrapper__3d4zz\",\"heading\":\"Forms_heading__1-XCC\",\"label\":\"Forms_label__1bGpV\",\"textInput\":\"Forms_textInput__2cyw7\",\"errorMessage\":\"Forms_errorMessage__1GA70\",\"formFooter\":\"Forms_formFooter__2yMAt\",\"textArea\":\"Forms_textArea__ewb1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greyText\":\"LastLogs_greyText__3uRbl\",\"logSection\":\"LastLogs_logSection__FIfj2\",\"logContainer\":\"LastLogs_logContainer__1bYzr\",\"logItem\":\"LastLogs_logItem__3LYN2\",\"logContent\":\"LastLogs_logContent__1V2j2\",\"ratingBox\":\"LastLogs_ratingBox__1bQvK\",\"dark\":\"LastLogs_dark__2wsCJ\",\"rightSection\":\"LastLogs_rightSection__1vweq\",\"date\":\"LastLogs_date__26fGj\",\"text\":\"LastLogs_text__CI0KV\",\"link\":\"LastLogs_link__3gddT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__xgcOe\",\"top\":\"Header_top__22E2D\",\"nightMode\":\"Header_nightMode__2q1ab\",\"logo\":\"Header_logo__-Ur4H\",\"bars\":\"Header_bars__2zJIv\",\"rotateButton\":\"Header_rotateButton__3niTt\",\"nightmode_button\":\"Header_nightmode_button__eOSke\",\"nightmode_button_caption\":\"Header_nightmode_button_caption__RbUCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingScreen\":\"loading_loadingScreen__2H5CQ\",\"barContainer\":\"loading_barContainer__3KUv_\",\"dark\":\"loading_dark__2vBuN\",\"bar\":\"loading_bar__hYWH3\",\"wave\":\"loading_wave__3RV-M\",\"delay1\":\"loading_delay1__1nQMi\",\"delay2\":\"loading_delay2__2OaWp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logbutton\":\"AddNewLog_logbutton__pr-L-\",\"available\":\"AddNewLog_available__kJNiw\",\"dark\":\"AddNewLog_dark__3ZjsQ\",\"unavailable\":\"AddNewLog_unavailable__MA3I3\",\"floating\":\"AddNewLog_floating__2Nl1q\",\"attentionBorder\":\"AddNewLog_attentionBorder__3a8Iv\",\"at-border\":\"AddNewLog_at-border__tFaan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingScreen\":\"loadingNetItem_loadingScreen__1O47w\",\"barContainer\":\"loadingNetItem_barContainer__1t53H\",\"bar\":\"loadingNetItem_bar__3HH3_\",\"wave\":\"loadingNetItem_wave__3hIM8\",\"delay1\":\"loadingNetItem_delay1___f5Fq\",\"delay2\":\"loadingNetItem_delay2__3BH1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"logItem_item__dA_3S\",\"rating_box\":\"logItem_rating_box__3C_wl\",\"icon\":\"logItem_icon__3UL4I\",\"top_line\":\"logItem_top_line__3ic4G\",\"date\":\"logItem_date__3-u95\",\"text\":\"logItem_text__3yHM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph_container\":\"GraphCanvas_graph_container__2MZZk\",\"graph_canvas\":\"GraphCanvas_graph_canvas__HmGWV\",\"graph_stroke\":\"GraphCanvas_graph_stroke__2mMSd\",\"dark\":\"GraphCanvas_dark__2N9vl\",\"y_axis_number\":\"GraphCanvas_y_axis_number__154_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__149Kz\",\"bigLogo\":\"Home_bigLogo__1wveO\",\"dark\":\"Home_dark__2Znm1\",\"text\":\"Home_text__69ODr\",\"buttonWrapper\":\"Home_buttonWrapper__2RQ68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stats_container__1eRTS\",\"first_block\":\"stats_first_block__3tW0d\",\"average_block\":\"stats_average_block__iXNj_\",\"average_box\":\"stats_average_box__2Z4AW\",\"small_text_box\":\"stats_small_text_box__12Edz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"miniHeader\":\"Settings_miniHeader__1_TXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topSection\":\"AddLogPage_topSection__QZgN0\",\"moodBox\":\"AddLogPage_moodBox__1xeOc\",\"inputLine\":\"AddLogPage_inputLine__3tgcn\",\"thumb\":\"AddLogPage_thumb__2rw4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__32eAG\",\"btnPrimary\":\"Button_btnPrimary__2S9bO\",\"btnWhite\":\"Button_btnWhite__3dBr3\",\"btnDark\":\"Button_btnDark__2Y0W2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BackButton_container__1KWGq\",\"button\":\"BackButton_button__VS2V4\",\"text\":\"BackButton_text__3qAbX\",\"dark\":\"BackButton_dark__3C9RV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"MoodStatus_statusContainer__24nWH\",\"statusBox\":\"MoodStatus_statusBox__9jz1B\",\"dark\":\"MoodStatus_dark__2DJLr\",\"statusText\":\"MoodStatus_statusText__1Z_1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__6ZBq5\",\"appearTop\":\"NavBar_appearTop__3avwr\",\"navItem\":\"NavBar_navItem__1sD7x\",\"nightmode\":\"NavBar_nightmode__2fDfW\",\"navBarMask\":\"NavBar_navBarMask__1MRGk\",\"fadeIn\":\"NavBar_fadeIn__3BAZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsIconWrapper\":\"SettingsItem_settingsIconWrapper__2EQ-K\",\"settingsIcon\":\"SettingsItem_settingsIcon__2Sqsw\",\"dark\":\"SettingsItem_dark__3uiar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutIconWrapper\":\"LogoutItem_logoutIconWrapper__3mIlH\",\"logoutIcon\":\"LogoutItem_logoutIcon__k3u0h\",\"dark\":\"LogoutItem_dark__JXDKI\"};"],"sourceRoot":""}